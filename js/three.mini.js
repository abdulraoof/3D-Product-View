var THREE={REVISION:"68"};if(typeof module==="object"){module.exports=THREE}THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(e){if(arguments.length===3){return this.setRGB(arguments[0],arguments[1],arguments[2])}return this.set(e)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){if(e instanceof THREE.Color){this.copy(e)}else if(typeof e==="number"){this.setHex(e)}else if(typeof e==="string"){this.setStyle(e)}return this},setHex:function(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this},setRGB:function(e,t,n){this.r=e;this.g=t;this.b=n;return this},setHSL:function(e,t,n){if(t===0){this.r=this.g=this.b=n}else{var r=function(e,t,n){if(n<0)n+=1;if(n>1)n-=1;if(n<1/6)return e+(t-e)*6*n;if(n<1/2)return t;if(n<2/3)return e+(t-e)*6*(2/3-n);return e};var i=n<=.5?n*(1+t):n+t-n*t;var s=2*n-i;this.r=r(s,i,e+1/3);this.g=r(s,i,e);this.b=r(s,i,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)){var t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);this.r=Math.min(255,parseInt(t[1],10))/255;this.g=Math.min(255,parseInt(t[2],10))/255;this.b=Math.min(255,parseInt(t[3],10))/255;return this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);this.r=Math.min(100,parseInt(t[1],10))/100;this.g=Math.min(100,parseInt(t[2],10))/100;this.b=Math.min(100,parseInt(t[3],10))/100;return this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);this.setHex(parseInt(t[1],16));return this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16));return this}if(/^(\w+)$/i.test(e)){this.setHex(THREE.ColorKeywords[e]);return this}},copy:function(e){this.r=e.r;this.g=e.g;this.b=e.b;return this},copyGammaToLinear:function(e){this.r=e.r*e.r;this.g=e.g*e.g;this.b=e.b*e.b;return this},copyLinearToGamma:function(e){this.r=Math.sqrt(e.r);this.g=Math.sqrt(e.g);this.b=Math.sqrt(e.b);return this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;this.r=e*e;this.g=t*t;this.b=n*n;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t=e||{h:0,s:0,l:0};var n=this.r,r=this.g,i=this.b;var s=Math.max(n,r,i);var o=Math.min(n,r,i);var u,a;var f=(o+s)/2;if(o===s){u=0;a=0}else{var l=s-o;a=f<=.5?l/(s+o):l/(2-s-o);switch(s){case n:u=(r-i)/l+(r<i?6:0);break;case r:u=(i-n)/l+2;break;case i:u=(n-r)/l+4;break}u/=6}t.h=u;t.s=a;t.l=f;return t},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();r.h+=e;r.s+=t;r.l+=n;this.setHSL(r.h,r.s,r.l);return this},add:function(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this},addColors:function(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this},addScalar:function(e){this.r+=e;this.g+=e;this.b+=e;return this},multiply:function(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this},multiplyScalar:function(e){this.r*=e;this.g*=e;this.b*=e;return this},lerp:function(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){this.r=e[0];this.g=e[1];this.b=e[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(e,t,n,r){this._x=e||0;this._y=t||0;this._z=n||0;this._w=r!==undefined?r:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e;this.onChangeCallback()},set:function(e,t,n,r){this._x=e;this._y=t;this._z=n;this._w=r;this.onChangeCallback();return this},copy:function(e){this._x=e.x;this._y=e.y;this._z=e.z;this._w=e.w;this.onChangeCallback();return this},setFromEuler:function(e,t){if(e instanceof THREE.Euler===false){throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var n=Math.cos(e._x/2);var r=Math.cos(e._y/2);var i=Math.cos(e._z/2);var s=Math.sin(e._x/2);var o=Math.sin(e._y/2);var u=Math.sin(e._z/2);if(e.order==="XYZ"){this._x=s*r*i+n*o*u;this._y=n*o*i-s*r*u;this._z=n*r*u+s*o*i;this._w=n*r*i-s*o*u}else if(e.order==="YXZ"){this._x=s*r*i+n*o*u;this._y=n*o*i-s*r*u;this._z=n*r*u-s*o*i;this._w=n*r*i+s*o*u}else if(e.order==="ZXY"){this._x=s*r*i-n*o*u;this._y=n*o*i+s*r*u;this._z=n*r*u+s*o*i;this._w=n*r*i-s*o*u}else if(e.order==="ZYX"){this._x=s*r*i-n*o*u;this._y=n*o*i+s*r*u;this._z=n*r*u-s*o*i;this._w=n*r*i+s*o*u}else if(e.order==="YZX"){this._x=s*r*i+n*o*u;this._y=n*o*i+s*r*u;this._z=n*r*u-s*o*i;this._w=n*r*i-s*o*u}else if(e.order==="XZY"){this._x=s*r*i-n*o*u;this._y=n*o*i-s*r*u;this._z=n*r*u+s*o*i;this._w=n*r*i+s*o*u}if(t!==false)this.onChangeCallback();return this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);this._x=e.x*r;this._y=e.y*r;this._z=e.z*r;this._w=Math.cos(n);this.onChangeCallback();return this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],r=t[4],i=t[8],s=t[1],o=t[5],u=t[9],a=t[2],f=t[6],l=t[10],c=n+o+l,h;if(c>0){h=.5/Math.sqrt(c+1);this._w=.25/h;this._x=(f-u)*h;this._y=(i-a)*h;this._z=(s-r)*h}else if(n>o&&n>l){h=2*Math.sqrt(1+n-o-l);this._w=(f-u)/h;this._x=.25*h;this._y=(r+s)/h;this._z=(i+a)/h}else if(o>l){h=2*Math.sqrt(1+o-n-l);this._w=(i-a)/h;this._x=(r+s)/h;this._y=.25*h;this._z=(u+f)/h}else{h=2*Math.sqrt(1+l-n-o);this._w=(s-r)/h;this._x=(i+a)/h;this._y=(u+f)/h;this._z=.25*h}this.onChangeCallback();return this},setFromUnitVectors:function(){var e,t;var n=1e-6;return function(i,s){if(e===undefined)e=new THREE.Vector3;t=i.dot(s)+1;if(t<n){t=0;if(Math.abs(i.x)>Math.abs(i.z)){e.set(-i.y,i.x,0)}else{e.set(0,-i.z,i.y)}}else{e.crossVectors(i,s)}this._x=e.x;this._y=e.y;this._z=e.z;this._w=t;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();if(e===0){this._x=0;this._y=0;this._z=0;this._w=1}else{e=1/e;this._x=this._x*e;this._y=this._y*e;this._z=this._z*e;this._w=this._w*e}this.onChangeCallback();return this},multiply:function(e,t){if(t!==undefined){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(e,t)}return this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,s=e._w;var o=t._x,u=t._y,a=t._z,f=t._w;this._x=n*f+s*o+r*a-i*u;this._y=r*f+s*u+i*o-n*a;this._z=i*f+s*a+n*u-r*o;this._w=s*f-n*o-r*u-i*a;this.onChangeCallback();return this},multiplyVector3:function(e){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)},slerp:function(e,t){var n=this._x,r=this._y,i=this._z,s=this._w;var o=s*e._w+n*e._x+r*e._y+i*e._z;if(o<0){this._w=-e._w;this._x=-e._x;this._y=-e._y;this._z=-e._z;o=-o}else{this.copy(e)}if(o>=1){this._w=s;this._x=n;this._y=r;this._z=i;return this}var u=Math.acos(o);var a=Math.sqrt(1-o*o);if(Math.abs(a)<.001){this._w=.5*(s+this._w);this._x=.5*(n+this._x);this._y=.5*(r+this._y);this._z=.5*(i+this._z);return this}var f=Math.sin((1-t)*u)/a,l=Math.sin(t*u)/a;this._w=s*f+this._w*l;this._x=n*f+this._x*l;this._y=r*f+this._y*l;this._z=i*f+this._z*l;this.onChangeCallback();return this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];this._w=e[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(e,t,n,r){return n.copy(e).slerp(t,r)};THREE.Vector2=function(e,t){this.x=e||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){this.x=e;this.y=t;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;return this},add:function(e,t){if(t!==undefined){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this},addScalar:function(e){this.x+=e;this.y+=e;return this},sub:function(e,t){if(t!==undefined){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this},multiply:function(e){this.x*=e.x;this.y*=e.y;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;return this},divide:function(e){this.x/=e.x;this.y/=e.y;return this},divideScalar:function(e){if(e!==0){var t=1/e;this.x*=t;this.y*=t}else{this.x=0;this.y=0}return this},min:function(e){if(this.x>e.x){this.x=e.x}if(this.y>e.y){this.y=e.y}return this},max:function(e){if(this.x<e.x){this.x=e.x}if(this.y<e.y){this.y=e.y}return this},clamp:function(e,t){if(this.x<e.x){this.x=e.x}else if(this.x>t.x){this.x=t.x}if(this.y<e.y){this.y=e.y}else if(this.y>t.y){this.y=t.y}return this},clampScalar:function(){var e,t;return function(n,r){if(e===undefined){e=new THREE.Vector2;t=new THREE.Vector2}e.set(n,n);t.set(r,r);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},setLength:function(e){var t=this.length();if(t!==0&&e!==t){this.multiplyScalar(e/t)}return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){this.x=e[0];this.y=e[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,t,n){this.x=e||0;this.y=t||0;this.z=n||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,n){this.x=e;this.y=t;this.z=n;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this},add:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this},sub:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this},multiply:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(e,t)}this.x*=e.x;this.y*=e.y;this.z*=e.z;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;return this},multiplyVectors:function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this},applyEuler:function(){var e;return function(t){if(t instanceof THREE.Euler===false){console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.")}if(e===undefined)e=new THREE.Quaternion;this.applyQuaternion(e.setFromEuler(t));return this}}(),applyAxisAngle:function(){var e;return function(t,n){if(e===undefined)e=new THREE.Quaternion;this.applyQuaternion(e.setFromAxisAngle(t,n));return this}}(),applyMatrix3:function(e){var t=this.x;var n=this.y;var r=this.z;var i=e.elements;this.x=i[0]*t+i[3]*n+i[6]*r;this.y=i[1]*t+i[4]*n+i[7]*r;this.z=i[2]*t+i[5]*n+i[8]*r;return this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z;var i=e.elements;this.x=i[0]*t+i[4]*n+i[8]*r+i[12];this.y=i[1]*t+i[5]*n+i[9]*r+i[13];this.z=i[2]*t+i[6]*n+i[10]*r+i[14];return this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z;var i=e.elements;var s=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*s;this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*s;this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*s;return this},applyQuaternion:function(e){var t=this.x;var n=this.y;var r=this.z;var i=e.x;var s=e.y;var o=e.z;var u=e.w;var a=u*t+s*r-o*n;var f=u*n+o*t-i*r;var l=u*r+i*n-s*t;var c=-i*t-s*n-o*r;this.x=a*u+c*-i+f*-o-l*-s;this.y=f*u+c*-s+l*-i-a*-o;this.z=l*u+c*-o+a*-s-f*-i;return this},transformDirection:function(e){var t=this.x,n=this.y,r=this.z;var i=e.elements;this.x=i[0]*t+i[4]*n+i[8]*r;this.y=i[1]*t+i[5]*n+i[9]*r;this.z=i[2]*t+i[6]*n+i[10]*r;this.normalize();return this},divide:function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this},divideScalar:function(e){if(e!==0){var t=1/e;this.x*=t;this.y*=t;this.z*=t}else{this.x=0;this.y=0;this.z=0}return this},min:function(e){if(this.x>e.x){this.x=e.x}if(this.y>e.y){this.y=e.y}if(this.z>e.z){this.z=e.z}return this},max:function(e){if(this.x<e.x){this.x=e.x}if(this.y<e.y){this.y=e.y}if(this.z<e.z){this.z=e.z}return this},clamp:function(e,t){if(this.x<e.x){this.x=e.x}else if(this.x>t.x){this.x=t.x}if(this.y<e.y){this.y=e.y}else if(this.y>t.y){this.y=t.y}if(this.z<e.z){this.z=e.z}else if(this.z>t.z){this.z=t.z}return this},clampScalar:function(){var e,t;return function(n,r){if(e===undefined){e=new THREE.Vector3;t=new THREE.Vector3}e.set(n,n,n);t.set(r,r,r);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();if(t!==0&&e!==t){this.multiplyScalar(e/t)}return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this},cross:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(e,t)}var n=this.x,r=this.y,i=this.z;this.x=r*e.z-i*e.y;this.y=i*e.x-n*e.z;this.z=n*e.y-r*e.x;return this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z;var s=t.x,o=t.y,u=t.z;this.x=r*u-i*o;this.y=i*s-n*u;this.z=n*o-r*s;return this},projectOnVector:function(){var e,t;return function(n){if(e===undefined)e=new THREE.Vector3;e.copy(n).normalize();t=this.dot(e);return this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){if(e===undefined)e=new THREE.Vector3;e.copy(this).projectOnVector(t);return this.sub(e)}}(),reflect:function(){var e;return function(t){if(e===undefined)e=new THREE.Vector3;return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;var n=this.y-e.y;var r=this.z-e.z;return t*t+n*n+r*r},setEulerFromRotationMatrix:function(e,t){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){this.x=e.elements[12];this.y=e.elements[13];this.z=e.elements[14];return this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length();var n=this.set(e.elements[4],e.elements[5],e.elements[6]).length();var r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t;this.y=n;this.z=r;return this},setFromMatrixColumn:function(e,t){var n=e*4;var r=t.elements;this.x=r[n];this.y=r[n+1];this.z=r[n+2];return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(e,t,n,r){this.x=e||0;this.y=t||0;this.z=n||0;this.w=r!==undefined?r:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,n,r){this.x=e;this.y=t;this.z=n;this.w=r;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setW:function(e){this.w=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=e.w!==undefined?e.w:1;return this},add:function(e,t){if(t!==undefined){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this},sub:function(e,t){if(t!==undefined){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this},applyMatrix4:function(e){var t=this.x;var n=this.y;var r=this.z;var i=this.w;var s=e.elements;this.x=s[0]*t+s[4]*n+s[8]*r+s[12]*i;this.y=s[1]*t+s[5]*n+s[9]*r+s[13]*i;this.z=s[2]*t+s[6]*n+s[10]*r+s[14]*i;this.w=s[3]*t+s[7]*n+s[11]*r+s[15]*i;return this},divideScalar:function(e){if(e!==0){var t=1/e;this.x*=t;this.y*=t;this.z*=t;this.w*=t}else{this.x=0;this.y=0;this.z=0;this.w=1}return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);if(t<1e-4){this.x=1;this.y=0;this.z=0}else{this.x=e.x/t;this.y=e.y/t;this.z=e.z/t}return this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,s=.01,o=.1,u=e.elements,a=u[0],f=u[4],l=u[8],c=u[1],h=u[5],p=u[9],d=u[2],v=u[6],m=u[10];if(Math.abs(f-c)<s&&Math.abs(l-d)<s&&Math.abs(p-v)<s){if(Math.abs(f+c)<o&&Math.abs(l+d)<o&&Math.abs(p+v)<o&&Math.abs(a+h+m-3)<o){this.set(1,0,0,0);return this}t=Math.PI;var g=(a+1)/2;var y=(h+1)/2;var b=(m+1)/2;var w=(f+c)/4;var E=(l+d)/4;var S=(p+v)/4;if(g>y&&g>b){if(g<s){n=0;r=.707106781;i=.707106781}else{n=Math.sqrt(g);r=w/n;i=E/n}}else if(y>b){if(y<s){n=.707106781;r=0;i=.707106781}else{r=Math.sqrt(y);n=w/r;i=S/r}}else{if(b<s){n=.707106781;r=.707106781;i=0}else{i=Math.sqrt(b);n=E/i;r=S/i}}this.set(n,r,i,t);return this}var x=Math.sqrt((v-p)*(v-p)+(l-d)*(l-d)+(c-f)*(c-f));if(Math.abs(x)<.001)x=1;this.x=(v-p)/x;this.y=(l-d)/x;this.z=(c-f)/x;this.w=Math.acos((a+h+m-1)/2);return this},min:function(e){if(this.x>e.x){this.x=e.x}if(this.y>e.y){this.y=e.y}if(this.z>e.z){this.z=e.z}if(this.w>e.w){this.w=e.w}return this},max:function(e){if(this.x<e.x){this.x=e.x}if(this.y<e.y){this.y=e.y}if(this.z<e.z){this.z=e.z}if(this.w<e.w){this.w=e.w}return this},clamp:function(e,t){if(this.x<e.x){this.x=e.x}else if(this.x>t.x){this.x=t.x}if(this.y<e.y){this.y=e.y}else if(this.y>t.y){this.y=t.y}if(this.z<e.z){this.z=e.z}else if(this.z>t.z){this.z=t.z}if(this.w<e.w){this.w=e.w}else if(this.w>t.w){this.w=t.w}return this},clampScalar:function(){var e,t;return function(n,r){if(e===undefined){e=new THREE.Vector4;t=new THREE.Vector4}e.set(n,n,n,n);t.set(r,r,r,r);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();if(t!==0&&e!==t){this.multiplyScalar(e/t)}return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];this.w=e[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(e,t,n,r){this._x=e||0;this._y=t||0;this._z=n||0;this._order=r||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e;this.onChangeCallback()},set:function(e,t,n,r){this._x=e;this._y=t;this._z=n;this._order=r||this._order;this.onChangeCallback();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this.onChangeCallback();return this},setFromRotationMatrix:function(e,t){var n=THREE.Math.clamp;var r=e.elements;var i=r[0],s=r[4],o=r[8];var u=r[1],a=r[5],f=r[9];var l=r[2],c=r[6],h=r[10];t=t||this._order;if(t==="XYZ"){this._y=Math.asin(n(o,-1,1));if(Math.abs(o)<.99999){this._x=Math.atan2(-f,h);this._z=Math.atan2(-s,i)}else{this._x=Math.atan2(c,a);this._z=0}}else if(t==="YXZ"){this._x=Math.asin(-n(f,-1,1));if(Math.abs(f)<.99999){this._y=Math.atan2(o,h);this._z=Math.atan2(u,a)}else{this._y=Math.atan2(-l,i);this._z=0}}else if(t==="ZXY"){this._x=Math.asin(n(c,-1,1));if(Math.abs(c)<.99999){this._y=Math.atan2(-l,h);this._z=Math.atan2(-s,a)}else{this._y=0;this._z=Math.atan2(u,i)}}else if(t==="ZYX"){this._y=Math.asin(-n(l,-1,1));if(Math.abs(l)<.99999){this._x=Math.atan2(c,h);this._z=Math.atan2(u,i)}else{this._x=0;this._z=Math.atan2(-s,a)}}else if(t==="YZX"){this._z=Math.asin(n(u,-1,1));if(Math.abs(u)<.99999){this._x=Math.atan2(-f,a);this._y=Math.atan2(-l,i)}else{this._x=0;this._y=Math.atan2(o,h)}}else if(t==="XZY"){this._z=Math.asin(-n(s,-1,1));if(Math.abs(s)<.99999){this._x=Math.atan2(c,a);this._y=Math.atan2(o,i)}else{this._x=Math.atan2(-f,h);this._y=0}}else{console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t)}this._order=t;this.onChangeCallback();return this},setFromQuaternion:function(e,t,n){var r=THREE.Math.clamp;var i=e.x*e.x;var s=e.y*e.y;var o=e.z*e.z;var u=e.w*e.w;t=t||this._order;if(t==="XYZ"){this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),u-i-s+o);this._y=Math.asin(r(2*(e.x*e.z+e.y*e.w),-1,1));this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),u+i-s-o)}else if(t==="YXZ"){this._x=Math.asin(r(2*(e.x*e.w-e.y*e.z),-1,1));this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),u-i-s+o);this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),u-i+s-o)}else if(t==="ZXY"){this._x=Math.asin(r(2*(e.x*e.w+e.y*e.z),-1,1));this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),u-i-s+o);this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),u-i+s-o)}else if(t==="ZYX"){this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),u-i-s+o);this._y=Math.asin(r(2*(e.y*e.w-e.x*e.z),-1,1));this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),u+i-s-o)}else if(t==="YZX"){this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),u-i+s-o);this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),u+i-s-o);this._z=Math.asin(r(2*(e.x*e.y+e.z*e.w),-1,1))}else if(t==="XZY"){this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),u-i+s-o);this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),u+i-s-o);this._z=Math.asin(r(2*(e.z*e.w-e.x*e.y),-1,1))}else{console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+t)}this._order=t;if(n!==false)this.onChangeCallback();return this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this);this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];if(e[3]!==undefined)this._order=e[3];this.onChangeCallback();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(e,t){this.start=e!==undefined?e:new THREE.Vector3;this.end=t!==undefined?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){this.start.copy(e);this.end.copy(t);return this},copy:function(e){this.start.copy(e.start);this.end.copy(e.end);return this},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new THREE.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(n,r){e.subVectors(n,this.start);t.subVectors(this.end,this.start);var i=t.dot(t);var s=t.dot(e);var o=s/i;if(r){o=THREE.Math.clamp(o,0,1)}return o}}(),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t);var i=n||new THREE.Vector3;return this.delta(i).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(e,t){this.min=e!==undefined?e:new THREE.Vector2(Infinity,Infinity);this.max=t!==undefined?t:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++){this.expandByPoint(e[t])}return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,n){var r=e.copy(n).multiplyScalar(.5);this.min.copy(t).sub(r);this.max.copy(t).add(r);return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){if(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y){return false}return true},containsBox:function(e){if(this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y){return true}return false},getParameter:function(e,t){var n=t||new THREE.Vector2;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){if(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y){return false}return true},clampPoint:function(e,t){var n=t||new THREE.Vector2;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){var n=e.copy(t).clamp(this.min,this.max);return n.sub(t).length()}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(e,t){this.min=e!==undefined?e:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=t!==undefined?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++){this.expandByPoint(e[t])}return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,n){var r=e.copy(n).multiplyScalar(.5);this.min.copy(t).sub(r);this.max.copy(t).add(r);return this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var n=this;t.updateMatrixWorld(true);this.makeEmpty();t.traverse(function(t){if(t.geometry!==undefined&&t.geometry.vertices!==undefined){var r=t.geometry.vertices;for(var i=0,s=r.length;i<s;i++){e.copy(r[i]);e.applyMatrix4(t.matrixWorld);n.expandByPoint(e)}}});return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){if(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z){return false}return true},containsBox:function(e){if(this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z){return true}return false},getParameter:function(e,t){var n=t||new THREE.Vector3;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){if(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z){return false}return true},clampPoint:function(e,t){var n=t||new THREE.Vector3;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var n=e.copy(t).clamp(this.min,this.max);return n.sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var n=t||new THREE.Sphere;n.center=this.center();n.radius=this.size(e).length()*.5;return n}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t);e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t);e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t);e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t);e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t);e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t);e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t);e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t);this.makeEmpty();this.setFromPoints(e);return this}}(),translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(e,t,n,r,i,s,o,u,a){this.elements=new Float32Array(9);var f=this.elements;f[0]=e!==undefined?e:1;f[3]=t||0;f[6]=n||0;f[1]=r||0;f[4]=i!==undefined?i:1;f[7]=s||0;f[2]=o||0;f[5]=u||0;f[8]=a!==undefined?a:1};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,n,r,i,s,o,u,a){var f=this.elements;f[0]=e;f[3]=t;f[6]=n;f[1]=r;f[4]=i;f[7]=s;f[2]=o;f[5]=u;f[8]=a;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(e){var t=e.elements;this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]);return this},multiplyVector3:function(e){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},multiplyVector3Array:function(e){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,n,r){if(n===undefined)n=0;if(r===undefined)r=t.length;for(var i=0,s=n,o;i<r;i+=3,s+=3){e.x=t[s];e.y=t[s+1];e.z=t[s+2];e.applyMatrix3(this);t[s]=e.x;t[s+1]=e.y;t[s+2]=e.z}return t}}(),multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this},determinant:function(){var e=this.elements;var t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],u=e[6],a=e[7],f=e[8];return t*s*f-t*o*a-n*i*f+n*o*u+r*i*a-r*s*u},getInverse:function(e,t){var n=e.elements;var r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9];r[1]=-n[10]*n[1]+n[2]*n[9];r[2]=n[6]*n[1]-n[2]*n[5];r[3]=-n[10]*n[4]+n[6]*n[8];r[4]=n[10]*n[0]-n[2]*n[8];r[5]=-n[6]*n[0]+n[2]*n[4];r[6]=n[9]*n[4]-n[5]*n[8];r[7]=-n[9]*n[0]+n[1]*n[8];r[8]=n[5]*n[0]-n[1]*n[4];var i=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(i===0){var s="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t||false){throw new Error(s)}else{console.warn(s)}this.identity();return this}this.multiplyScalar(1/i);return this},transpose:function(){var e,t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this},flattenToArrayOffset:function(e,t){var n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];return e},getNormalMatrix:function(e){this.getInverse(e).transpose();return this},transposeIntoArray:function(e){var t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}};THREE.Matrix4=function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){this.elements=new Float32Array(16);var m=this.elements;m[0]=e!==undefined?e:1;m[4]=t||0;m[8]=n||0;m[12]=r||0;m[1]=i||0;m[5]=s!==undefined?s:1;m[9]=o||0;m[13]=u||0;m[2]=a||0;m[6]=f||0;m[10]=l!==undefined?l:1;m[14]=c||0;m[3]=h||0;m[7]=p||0;m[11]=d||0;m[15]=v!==undefined?v:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements;m[0]=e;m[4]=t;m[8]=n;m[12]=r;m[1]=i;m[5]=s;m[9]=o;m[13]=u;m[2]=a;m[6]=f;m[10]=l;m[14]=c;m[3]=h;m[7]=p;m[11]=d;m[15]=v;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(e){this.elements.set(e.elements);return this},extractPosition:function(e){console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)},copyPosition:function(e){var t=this.elements;var n=e.elements;t[12]=n[12];t[13]=n[13];t[14]=n[14];return this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var n=this.elements;var r=t.elements;var i=1/e.set(r[0],r[1],r[2]).length();var s=1/e.set(r[4],r[5],r[6]).length();var o=1/e.set(r[8],r[9],r[10]).length();n[0]=r[0]*i;n[1]=r[1]*i;n[2]=r[2]*i;n[4]=r[4]*s;n[5]=r[5]*s;n[6]=r[6]*s;n[8]=r[8]*o;n[9]=r[9]*o;n[10]=r[10]*o;return this}}(),makeRotationFromEuler:function(e){if(e instanceof THREE.Euler===false){console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var t=this.elements;var n=e.x,r=e.y,i=e.z;var s=Math.cos(n),o=Math.sin(n);var u=Math.cos(r),a=Math.sin(r);var f=Math.cos(i),l=Math.sin(i);if(e.order==="XYZ"){var c=s*f,h=s*l,p=o*f,d=o*l;t[0]=u*f;t[4]=-u*l;t[8]=a;t[1]=h+p*a;t[5]=c-d*a;t[9]=-o*u;t[2]=d-c*a;t[6]=p+h*a;t[10]=s*u}else if(e.order==="YXZ"){var v=u*f,m=u*l,g=a*f,y=a*l;t[0]=v+y*o;t[4]=g*o-m;t[8]=s*a;t[1]=s*l;t[5]=s*f;t[9]=-o;t[2]=m*o-g;t[6]=y+v*o;t[10]=s*u}else if(e.order==="ZXY"){var v=u*f,m=u*l,g=a*f,y=a*l;t[0]=v-y*o;t[4]=-s*l;t[8]=g+m*o;t[1]=m+g*o;t[5]=s*f;t[9]=y-v*o;t[2]=-s*a;t[6]=o;t[10]=s*u}else if(e.order==="ZYX"){var c=s*f,h=s*l,p=o*f,d=o*l;t[0]=u*f;t[4]=p*a-h;t[8]=c*a+d;t[1]=u*l;t[5]=d*a+c;t[9]=h*a-p;t[2]=-a;t[6]=o*u;t[10]=s*u}else if(e.order==="YZX"){var b=s*u,w=s*a,E=o*u,S=o*a;t[0]=u*f;t[4]=S-b*l;t[8]=E*l+w;t[1]=l;t[5]=s*f;t[9]=-o*f;t[2]=-a*f;t[6]=w*l+E;t[10]=b-S*l}else if(e.order==="XZY"){var b=s*u,w=s*a,E=o*u,S=o*a;t[0]=u*f;t[4]=-l;t[8]=a*f;t[1]=b*l+S;t[5]=s*f;t[9]=w*l-E;t[2]=E*l-w;t[6]=o*f;t[10]=S*l+b}t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},setRotationFromQuaternion:function(e){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements;var n=e.x,r=e.y,i=e.z,s=e.w;var o=n+n,u=r+r,a=i+i;var f=n*o,l=n*u,c=n*a;var h=r*u,p=r*a,d=i*a;var v=s*o,m=s*u,g=s*a;t[0]=1-(h+d);t[4]=l-g;t[8]=c+m;t[1]=l+g;t[5]=1-(f+d);t[9]=p-v;t[2]=c-m;t[6]=p+v;t[10]=1-(f+h);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},lookAt:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var n=new THREE.Vector3;return function(r,i,s){var o=this.elements;n.subVectors(r,i).normalize();if(n.length()===0){n.z=1}e.crossVectors(s,n).normalize();if(e.length()===0){n.x+=1e-4;e.crossVectors(s,n).normalize()}t.crossVectors(n,e);o[0]=e.x;o[4]=t.x;o[8]=n.x;o[1]=e.y;o[5]=t.y;o[9]=n.y;o[2]=e.z;o[6]=t.z;o[10]=n.z;return this}}(),multiply:function(e,t){if(t!==undefined){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(e,t)}return this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var n=e.elements;var r=t.elements;var i=this.elements;var s=n[0],o=n[4],u=n[8],a=n[12];var f=n[1],l=n[5],c=n[9],h=n[13];var p=n[2],d=n[6],v=n[10],m=n[14];var g=n[3],y=n[7],b=n[11],w=n[15];var E=r[0],S=r[4],x=r[8],T=r[12];var N=r[1],C=r[5],k=r[9],L=r[13];var A=r[2],O=r[6],M=r[10],_=r[14];var D=r[3],P=r[7],H=r[11],B=r[15];i[0]=s*E+o*N+u*A+a*D;i[4]=s*S+o*C+u*O+a*P;i[8]=s*x+o*k+u*M+a*H;i[12]=s*T+o*L+u*_+a*B;i[1]=f*E+l*N+c*A+h*D;i[5]=f*S+l*C+c*O+h*P;i[9]=f*x+l*k+c*M+h*H;i[13]=f*T+l*L+c*_+h*B;i[2]=p*E+d*N+v*A+m*D;i[6]=p*S+d*C+v*O+m*P;i[10]=p*x+d*k+v*M+m*H;i[14]=p*T+d*L+v*_+m*B;i[3]=g*E+y*N+b*A+w*D;i[7]=g*S+y*C+b*O+w*P;i[11]=g*x+y*k+b*M+w*H;i[15]=g*T+y*L+b*_+w*B;return this},multiplyToArray:function(e,t,n){var r=this.elements;this.multiplyMatrices(e,t);n[0]=r[0];n[1]=r[1];n[2]=r[2];n[3]=r[3];n[4]=r[4];n[5]=r[5];n[6]=r[6];n[7]=r[7];n[8]=r[8];n[9]=r[9];n[10]=r[10];n[11]=r[11];n[12]=r[12];n[13]=r[13];n[14]=r[14];n[15]=r[15];return this},multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this},multiplyVector3:function(e){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return e.applyProjection(this)},multiplyVector4:function(e){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector3Array:function(e){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,n,r){if(n===undefined)n=0;if(r===undefined)r=t.length;for(var i=0,s=n,o;i<r;i+=3,s+=3){e.x=t[s];e.y=t[s+1];e.z=t[s+2];e.applyMatrix4(this);t[s]=e.x;t[s+1]=e.y;t[s+2]=e.z}return t}}(),rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)},crossVector:function(e){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},determinant:function(){var e=this.elements;var t=e[0],n=e[4],r=e[8],i=e[12];var s=e[1],o=e[5],u=e[9],a=e[13];var f=e[2],l=e[6],c=e[10],h=e[14];var p=e[3],d=e[7],v=e[11],m=e[15];return p*(+i*u*l-r*a*l-i*o*c+n*a*c+r*o*h-n*u*h)+d*(+t*u*h-t*a*c+i*s*c-r*s*h+r*a*f-i*u*f)+v*(+t*a*l-t*o*h-i*s*l+n*s*h+i*o*f-n*a*f)+m*(-r*o*f-t*u*l+t*o*c+r*s*l-n*s*c+n*u*f)},transpose:function(){var e=this.elements;var t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this},flattenToArrayOffset:function(e,t){var n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];e[t+9]=n[9];e[t+10]=n[10];e[t+11]=n[11];e[t+12]=n[12];e[t+13]=n[13];e[t+14]=n[14];e[t+15]=n[15];return e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;t[12]=e.x;t[13]=e.y;t[14]=e.z;return this},getInverse:function(e,t){var n=this.elements;var r=e.elements;var i=r[0],s=r[4],o=r[8],u=r[12];var a=r[1],f=r[5],l=r[9],c=r[13];var h=r[2],p=r[6],d=r[10],v=r[14];var m=r[3],g=r[7],y=r[11],b=r[15];n[0]=l*v*g-c*d*g+c*p*y-f*v*y-l*p*b+f*d*b;n[4]=u*d*g-o*v*g-u*p*y+s*v*y+o*p*b-s*d*b;n[8]=o*c*g-u*l*g+u*f*y-s*c*y-o*f*b+s*l*b;n[12]=u*l*p-o*c*p-u*f*d+s*c*d+o*f*v-s*l*v;n[1]=c*d*m-l*v*m-c*h*y+a*v*y+l*h*b-a*d*b;n[5]=o*v*m-u*d*m+u*h*y-i*v*y-o*h*b+i*d*b;n[9]=u*l*m-o*c*m-u*a*y+i*c*y+o*a*b-i*l*b;n[13]=o*c*h-u*l*h+u*a*d-i*c*d-o*a*v+i*l*v;n[2]=f*v*m-c*p*m+c*h*g-a*v*g-f*h*b+a*p*b;n[6]=u*p*m-s*v*m-u*h*g+i*v*g+s*h*b-i*p*b;n[10]=s*c*m-u*f*m+u*a*g-i*c*g-s*a*b+i*f*b;n[14]=u*f*h-s*c*h-u*a*p+i*c*p+s*a*v-i*f*v;n[3]=l*p*m-f*d*m-l*h*g+a*d*g+f*h*y-a*p*y;n[7]=s*d*m-o*p*m+o*h*g-i*d*g-s*h*y+i*p*y;n[11]=o*f*m-s*l*m-o*a*g+i*l*g+s*a*y-i*f*y;n[15]=s*l*h-o*f*h+o*a*p-i*l*p-s*a*d+i*f*d;var w=i*n[0]+a*n[4]+h*n[8]+m*n[12];if(w==0){var E="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t||false){throw new Error(E)}else{console.warn(E)}this.identity();return this}this.multiplyScalar(1/w);return this},translate:function(e){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements;var n=e.x,r=e.y,i=e.z;t[0]*=n;t[4]*=r;t[8]*=i;t[1]*=n;t[5]*=r;t[9]*=i;t[2]*=n;t[6]*=r;t[10]*=i;t[3]*=n;t[7]*=r;t[11]*=i;return this},getMaxScaleOnAxis:function(){var e=this.elements;var t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];var n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6];var r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(n,r)))},makeTranslation:function(e,t,n){this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1);return this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1);return this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1);return this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(e,t){var n=Math.cos(t);var r=Math.sin(t);var i=1-n;var s=e.x,o=e.y,u=e.z;var a=i*s,f=i*o;this.set(a*s+n,a*o-r*u,a*u+r*o,0,a*o+r*u,f*o+n,f*u-r*s,0,a*u-r*o,f*u+r*s,i*u*u+n,0,0,0,0,1);return this},makeScale:function(e,t,n){this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1);return this},compose:function(e,t,n){this.makeRotationFromQuaternion(t);this.scale(n);this.setPosition(e);return this},decompose:function(){var e=new THREE.Vector3;var t=new THREE.Matrix4;return function(n,r,i){var s=this.elements;var o=e.set(s[0],s[1],s[2]).length();var u=e.set(s[4],s[5],s[6]).length();var a=e.set(s[8],s[9],s[10]).length();var f=this.determinant();if(f<0){o=-o}n.x=s[12];n.y=s[13];n.z=s[14];t.elements.set(this.elements);var l=1/o;var c=1/u;var h=1/a;t.elements[0]*=l;t.elements[1]*=l;t.elements[2]*=l;t.elements[4]*=c;t.elements[5]*=c;t.elements[6]*=c;t.elements[8]*=h;t.elements[9]*=h;t.elements[10]*=h;r.setFromRotationMatrix(t);i.x=o;i.y=u;i.z=a;return this}}(),makeFrustum:function(e,t,n,r,i,s){var o=this.elements;var u=2*i/(t-e);var a=2*i/(r-n);var f=(t+e)/(t-e);var l=(r+n)/(r-n);var c=-(s+i)/(s-i);var h=-2*s*i/(s-i);o[0]=u;o[4]=0;o[8]=f;o[12]=0;o[1]=0;o[5]=a;o[9]=l;o[13]=0;o[2]=0;o[6]=0;o[10]=c;o[14]=h;o[3]=0;o[7]=0;o[11]=-1;o[15]=0;return this},makePerspective:function(e,t,n,r){var i=n*Math.tan(THREE.Math.degToRad(e*.5));var s=-i;var o=s*t;var u=i*t;return this.makeFrustum(o,u,s,i,n,r)},makeOrthographic:function(e,t,n,r,i,s){var o=this.elements;var u=t-e;var a=n-r;var f=s-i;var l=(t+e)/u;var c=(n+r)/a;var h=(s+i)/f;o[0]=2/u;o[4]=0;o[8]=0;o[12]=-l;o[1]=0;o[5]=2/a;o[9]=0;o[13]=-c;o[2]=0;o[6]=0;o[10]=-2/f;o[14]=-h;o[3]=0;o[7]=0;o[11]=0;o[15]=1;return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}};THREE.Ray=function(e,t){this.origin=e!==undefined?e:new THREE.Vector3;this.direction=t!==undefined?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){this.origin.copy(e);this.direction.copy(t);return this},copy:function(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this},at:function(e,t){var n=t||new THREE.Vector3;return n.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){this.origin.copy(this.at(t,e));return this}}(),closestPointToPoint:function(e,t){var n=t||new THREE.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);if(r<0){return n.copy(this.origin)}return n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);if(n<0){return this.origin.distanceTo(t)}e.copy(this.direction).multiplyScalar(n).add(this.origin);return e.distanceTo(t)}}(),distanceSqToSegment:function(e,t,n,r){var i=e.clone().add(t).multiplyScalar(.5);var s=t.clone().sub(e).normalize();var o=e.distanceTo(t)*.5;var u=this.origin.clone().sub(i);var a=-this.direction.dot(s);var f=u.dot(this.direction);var l=-u.dot(s);var c=u.lengthSq();var h=Math.abs(1-a*a);var p,d,v,m;if(h>=0){p=a*l-f;d=a*f-l;m=o*h;if(p>=0){if(d>=-m){if(d<=m){var g=1/h;p*=g;d*=g;v=p*(p+a*d+2*f)+d*(a*p+d+2*l)+c}else{d=o;p=Math.max(0,-(a*d+f));v=-p*p+d*(d+2*l)+c}}else{d=-o;p=Math.max(0,-(a*d+f));v=-p*p+d*(d+2*l)+c}}else{if(d<=-m){p=Math.max(0,-(-a*o+f));d=p>0?-o:Math.min(Math.max(-o,-l),o);v=-p*p+d*(d+2*l)+c}else if(d<=m){p=0;d=Math.min(Math.max(-o,-l),o);v=d*(d+2*l)+c}else{p=Math.max(0,-(a*o+f));d=p>0?o:Math.min(Math.max(-o,-l),o);v=-p*p+d*(d+2*l)+c}}}else{d=a>0?-o:o;p=Math.max(0,-(a*d+f));v=-p*p+d*(d+2*l)+c}if(n){n.copy(this.direction.clone().multiplyScalar(p).add(this.origin))}if(r){r.copy(s.clone().multiplyScalar(d).add(i))}return v},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new THREE.Vector3;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction);var i=e.dot(e)-r*r;var s=t.radius*t.radius;if(i>s)return null;var o=Math.sqrt(s-i);var u=r-o;var a=r+o;if(u<0&&a<0)return null;if(u<0)return this.at(a,n);return this.at(u,n)}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);if(t===0){return true}var n=e.normal.dot(this.direction);if(n*t<0){return true}return false},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(t==0){if(e.distanceToPoint(this.origin)==0){return 0}return null}var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);if(n===null){return null}return this.at(n,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return this.intersectBox(t,e)!==null}}(),intersectBox:function(e,t){var n,r,i,s,o,u;var a=1/this.direction.x,f=1/this.direction.y,l=1/this.direction.z;var c=this.origin;if(a>=0){n=(e.min.x-c.x)*a;r=(e.max.x-c.x)*a}else{n=(e.max.x-c.x)*a;r=(e.min.x-c.x)*a}if(f>=0){i=(e.min.y-c.y)*f;s=(e.max.y-c.y)*f}else{i=(e.max.y-c.y)*f;s=(e.min.y-c.y)*f}if(n>s||i>r)return null;if(i>n||n!==n)n=i;if(s<r||r!==r)r=s;if(l>=0){o=(e.min.z-c.z)*l;u=(e.max.z-c.z)*l}else{o=(e.max.z-c.z)*l;u=(e.min.z-c.z)*l}if(n>u||o>r)return null;if(o>n||n!==n)n=o;if(u<r||r!==r)r=u;if(r<0)return null;return this.at(n>=0?n:r,t)},intersectTriangle:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var n=new THREE.Vector3;var r=new THREE.Vector3;return function(i,s,o,u,a){t.subVectors(s,i);n.subVectors(o,i);r.crossVectors(t,n);var f=this.direction.dot(r);var l;if(f>0){if(u)return null;l=1}else if(f<0){l=-1;f=-f}else{return null}e.subVectors(this.origin,i);var c=l*this.direction.dot(n.crossVectors(e,n));if(c<0){return null}var h=l*this.direction.dot(t.cross(e));if(h<0){return null}if(c+h>f){return null}var p=-l*e.dot(r);if(p<0){return null}return this.at(p/f,a)}}(),applyMatrix4:function(e){this.direction.add(this.origin).applyMatrix4(e);this.origin.applyMatrix4(e);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(e,t){this.center=e!==undefined?e:new THREE.Vector3;this.radius=t!==undefined?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){this.center.copy(e);this.radius=t;return this},setFromPoints:function(){var e=new THREE.Box3;return function(t,n){var r=this.center;if(n!==undefined){r.copy(n)}else{e.setFromPoints(t).center(r)}var i=0;for(var s=0,o=t.length;s<o;s++){i=Math.max(i,r.distanceToSquared(t[s]))}this.radius=Math.sqrt(i);return this}}(),copy:function(e){this.center.copy(e.center);this.radius=e.radius;return this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var n=this.center.distanceToSquared(e);var r=t||new THREE.Vector3;r.copy(e);if(n>this.radius*this.radius){r.sub(this.center).normalize();r.multiplyScalar(this.radius).add(this.center)}return r},getBoundingBox:function(e){var t=e||new THREE.Box3;t.set(this.center,this.center);t.expandByScalar(this.radius);return t},applyMatrix4:function(e){this.center.applyMatrix4(e);this.radius=this.radius*e.getMaxScaleOnAxis();return this},translate:function(e){this.center.add(e);return this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(e,t,n,r,i,s){this.planes=[e!==undefined?e:new THREE.Plane,t!==undefined?t:new THREE.Plane,n!==undefined?n:new THREE.Plane,r!==undefined?r:new THREE.Plane,i!==undefined?i:new THREE.Plane,s!==undefined?s:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,n,r,i,s){var o=this.planes;o[0].copy(e);o[1].copy(t);o[2].copy(n);o[3].copy(r);o[4].copy(i);o[5].copy(s);return this},copy:function(e){var t=this.planes;for(var n=0;n<6;n++){t[n].copy(e.planes[n])}return this},setFromMatrix:function(e){var t=this.planes;var n=e.elements;var r=n[0],i=n[1],s=n[2],o=n[3];var u=n[4],a=n[5],f=n[6],l=n[7];var c=n[8],h=n[9],p=n[10],d=n[11];var v=n[12],m=n[13],g=n[14],y=n[15];t[0].setComponents(o-r,l-u,d-c,y-v).normalize();t[1].setComponents(o+r,l+u,d+c,y+v).normalize();t[2].setComponents(o+i,l+a,d+h,y+m).normalize();t[3].setComponents(o-i,l-a,d-h,y-m).normalize();t[4].setComponents(o-s,l-f,d-p,y-g).normalize();t[5].setComponents(o+s,l+f,d+p,y+g).normalize();return this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var n=t.geometry;if(n.boundingSphere===null)n.computeBoundingSphere();e.copy(n.boundingSphere);e.applyMatrix4(t.matrixWorld);return this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes;var n=e.center;var r=-e.radius;for(var i=0;i<6;i++){var s=t[i].distanceToPoint(n);if(s<r){return false}}return true},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n){var r=this.planes;for(var i=0;i<6;i++){var s=r[i];e.x=s.normal.x>0?n.min.x:n.max.x;t.x=s.normal.x>0?n.max.x:n.min.x;e.y=s.normal.y>0?n.min.y:n.max.y;t.y=s.normal.y>0?n.max.y:n.min.y;e.z=s.normal.z>0?n.min.z:n.max.z;t.z=s.normal.z>0?n.max.z:n.min.z;var o=s.distanceToPoint(e);var u=s.distanceToPoint(t);if(o<0&&u<0){return false}}return true}}(),containsPoint:function(e){var t=this.planes;for(var n=0;n<6;n++){if(t[n].distanceToPoint(e)<0){return false}}return true},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(e,t){this.normal=e!==undefined?e:new THREE.Vector3(1,0,0);this.constant=t!==undefined?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){this.normal.copy(e);this.constant=t;return this},setComponents:function(e,t,n,r){this.normal.set(e,t,n);this.constant=r;return this},setFromNormalAndCoplanarPoint:function(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this},setFromCoplanarPoints:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(n,r,i){var s=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();this.setFromNormalAndCoplanarPoint(s,n);return this}}(),copy:function(e){this.normal.copy(e.normal);this.constant=e.constant;return this},normalize:function(){var e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);var r=t||new THREE.Vector3;return r.copy(this.normal).multiplyScalar(n)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);var n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,n){var r=n||new THREE.Vector3;var i=t.delta(e);var s=this.normal.dot(i);if(s==0){if(this.distanceToPoint(t.start)==0){return r.copy(t.start)}return undefined}var o=-(t.start.dot(this.normal)+this.constant)/s;if(o<0||o>1){return undefined}return r.copy(i).multiplyScalar(o).add(t.start)}}(),coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var n=new THREE.Matrix3;return function(r,i){var s=i||n.getNormalMatrix(r);var o=e.copy(this.normal).applyMatrix3(s);var u=this.coplanarPoint(t);u.applyMatrix4(r);this.setFromNormalAndCoplanarPoint(o,u);return this}}(),translate:function(e){this.constant=this.constant-e.dot(this.normal);return this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");var t=new Array(36);var n=0,r;return function(){for(var i=0;i<36;i++){if(i==8||i==13||i==18||i==23){t[i]="-"}else if(i==14){t[i]="4"}else{if(n<=2)n=33554432+Math.random()*16777216|0;r=n&15;n=n>>4;t[i]=e[i==19?r&3|8:r]}}return t.join("")}}(),clamp:function(e,t,n){return e<t?t:e>n?n:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},smoothstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*(3-2*e)},smootherstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*e*(e*(e*6-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0}};THREE.Spline=function(e){function h(e,t,n,r,i,s,o){var u=(n-e)*.5,a=(r-t)*.5;return(2*(t-n)+u+a)*o+(-3*(t-n)-2*u-a)*s+u*i+t}this.points=e;var t=[],n={x:0,y:0,z:0},r,i,s,o,u,a,f,l,c;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++){this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}}};this.getPoint=function(e){r=(this.points.length-1)*e;i=Math.floor(r);s=r-i;t[0]=i===0?i:i-1;t[1]=i;t[2]=i>this.points.length-2?this.points.length-1:i+1;t[3]=i>this.points.length-3?this.points.length-1:i+2;a=this.points[t[0]];f=this.points[t[1]];l=this.points[t[2]];c=this.points[t[3]];o=s*s;u=s*o;n.x=h(a.x,f.x,l.x,c.x,s,o,u);n.y=h(a.y,f.y,l.y,c.y,s,o,u);n.z=h(a.z,f.z,l.z,c.z,s,o,u);return n};this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++){t=this.points[e];r[e]=[t.x,t.y,t.z]}return r};this.getLength=function(e){var t,n,r,i,s=0,o=0,u=0,a=new THREE.Vector3,f=new THREE.Vector3,l=[],c=0;l[0]=0;if(!e)e=100;r=this.points.length*e;a.copy(this.points[0]);for(t=1;t<r;t++){n=t/r;i=this.getPoint(n);f.copy(i);c+=f.distanceTo(a);a.copy(i);s=(this.points.length-1)*n;o=Math.floor(s);if(o!=u){l[o]=c;u=o}}l[l.length]=c;return{chunks:l,total:c}};this.reparametrizeByArcLength=function(e){var t,n,r,i,s,o,u,a,f,l=[],c=new THREE.Vector3,h=this.getLength();l.push(c.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){u=h.chunks[t]-h.chunks[t-1];a=Math.ceil(e*u/h.total);i=(t-1)/(this.points.length-1);s=t/(this.points.length-1);for(n=1;n<a-1;n++){r=i+n*(1/a)*(s-i);f=this.getPoint(r);l.push(c.copy(f).clone())}l.push(c.copy(this.points[t]).clone())}this.points=l};};THREE.Triangle=function(e,t,n){this.a=e!==undefined?e:new THREE.Vector3;this.b=t!==undefined?t:new THREE.Vector3;this.c=n!==undefined?n:new THREE.Vector3};THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,n,r,i){var s=i||new THREE.Vector3;s.subVectors(r,n);e.subVectors(t,n);s.cross(e);var o=s.lengthSq();if(o>0){return s.multiplyScalar(1/Math.sqrt(o))}return s.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var n=new THREE.Vector3;return function(r,i,s,o,u){e.subVectors(o,i);t.subVectors(s,i);n.subVectors(r,i);var a=e.dot(e);var f=e.dot(t);var l=e.dot(n);var c=t.dot(t);var h=t.dot(n);var p=a*c-f*f;var d=u||new THREE.Vector3;if(p==0){return d.set(-2,-1,-1)}var v=1/p;var m=(c*l-f*h)*v;var g=(a*h-f*l)*v;return d.set(1-m-g,g,m)}}();THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,n,r,i){var s=THREE.Triangle.barycoordFromPoint(t,n,r,i,e);return s.x>=0&&s.y>=0&&s.x+s.y<=1}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,n){this.a.copy(e);this.b.copy(t);this.c.copy(n);return this},setFromPointsAndIndices:function(e,t,n,r){this.a.copy(e[t]);this.b.copy(e[n]);this.c.copy(e[r]);return this},copy:function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this},area:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(){e.subVectors(this.c,this.b);t.subVectors(this.a,this.b);return e.cross(t).length()*.5}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Clock=function(e){this.autoStart=e!==undefined?e:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();this.oldTime=this.startTime;this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var t=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();e=.001*(t-this.oldTime);this.oldTime=t;this.elapsedTime+=e}return e}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener;e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){if(this._listeners===undefined)this._listeners={};var n=this._listeners;if(n[e]===undefined){n[e]=[]}if(n[e].indexOf(t)===-1){n[e].push(t)}},hasEventListener:function(e,t){if(this._listeners===undefined)return false;var n=this._listeners;if(n[e]!==undefined&&n[e].indexOf(t)!==-1){return true}return false},removeEventListener:function(e,t){if(this._listeners===undefined)return;var n=this._listeners;var r=n[e];if(r!==undefined){var i=r.indexOf(t);if(i!==-1){r.splice(i,1)}}},dispatchEvent:function(e){if(this._listeners===undefined)return;var t=this._listeners;var n=t[e.type];if(n!==undefined){e.target=this;var r=[];var i=n.length;for(var s=0;s<i;s++){r[s]=n[s]}for(var s=0;s<i;s++){r[s].call(this,e)}}}};(function(e){e.Raycaster=function(t,n,r,i){this.ray=new e.Ray(t,n);this.near=r||0;this.far=i||Infinity;this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var t=function(e,t){return e.distance-t.distance};var n=function(e,t,r,i){e.raycast(t,r);if(i===true){var s=e.children;for(var o=0,u=s.length;o<u;o++){n(s[o],t,r,true)}}};e.Raycaster.prototype={constructor:e.Raycaster,precision:1e-4,linePrecision:1,set:function(e,t){this.ray.set(e,t)},intersectObject:function(e,r){var i=[];n(e,this,i,r);i.sort(t);return i},intersectObjects:function(e,r){var i=[];for(var s=0,o=e.length;s<o;s++){n(e[s],this,i,r)}i.sort(t);return i}}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=undefined;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var e=this;var t=new THREE.Vector3;var n=new THREE.Euler;var r=new THREE.Quaternion;var i=new THREE.Vector3(1,1,1);n.onChange(function(){r.setFromEuler(n,false)});r.onChange(function(){n.setFromQuaternion(r,undefined,false)});Object.defineProperties(this,{position:{enumerable:true,value:t},rotation:{enumerable:true,value:n},quaternion:{enumerable:true,value:r},scale:{enumerable:true,value:i}});this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=true;this.matrixWorldNeedsUpdate=false;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");return this.rotation.order},set eulerOrder(e){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=e},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,true)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,n){e.setFromAxisAngle(t,n);this.quaternion.multiply(e);return this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,n){e.copy(t).applyQuaternion(this.quaternion);this.position.add(e.multiplyScalar(n));return this}}(),translate:function(e,t){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++){this.add(arguments[t])}return this}if(e===this){console.error("THREE.Object3D.add:",e,"can't be added as a child of itself.");return this}if(e instanceof THREE.Object3D){if(e.parent!==undefined){e.parent.remove(e)}e.parent=this;e.dispatchEvent({type:"added"});this.children.push(e);var n=this;while(n.parent!==undefined){n=n.parent}if(n!==undefined&&n instanceof THREE.Scene){n.__addObject(e)}}else{console.error("THREE.Object3D.add:",e,"is not an instance of THREE.Object3D.")}return this},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++){this.remove(arguments[t])}}var n=this.children.indexOf(e);if(n!==-1){e.parent=undefined;e.dispatchEvent({type:"removed"});this.children.splice(n,1);var r=this;while(r.parent!==undefined){r=r.parent}if(r!==undefined&&r instanceof THREE.Scene){r.__removeObject(e)}}},raycast:function(){},traverse:function(e){e(this);for(var t=0,n=this.children.length;t<n;t++){this.children[t].traverse(e)}},traverseVisible:function(e){if(this.visible===false)return;e(this);for(var t=0,n=this.children.length;t<n;t++){this.children[t].traverseVisible(e)}},getObjectById:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.id===e){return i}if(t===true){i=i.getObjectById(e,t);if(i!==undefined){return i}}}return undefined},getObjectByName:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.name===e){return i}if(t===true){i=i.getObjectByName(e,t);if(i!==undefined){return i}}}return undefined},getChildByName:function(e,t){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e,t)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(e){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||e===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;e=true}for(var t=0,n=this.children.length;t<n;t++){this.children[t].updateMatrixWorld(e)}},clone:function(e,t){if(e===undefined)e=new THREE.Object3D;if(t===undefined)t=true;e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.renderDepth=this.renderDepth;e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(t===true){for(var n=0;n<this.children.length;n++){var r=this.children[n];e.add(r.clone())}}return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function q(){if(t===r){var e=new THREE.RenderableObject;n.push(e);r++;t++;return e}return n[t++]}function R(){if(s===u){var e=new THREE.RenderableVertex;o.push(e);u++;s++;return e}return o[s++]}function U(){if(f===c){var e=new THREE.RenderableFace;l.push(e);c++;f++;return e}return l[f++]}function z(){if(p===v){var e=new THREE.RenderableLine;d.push(e);v++;p++;return e}return d[p++]}function W(){if(g===b){var e=new THREE.RenderableSprite;y.push(e);b++;g++;return e}return y[g++]}function X(e,t){if(e.z!==t.z){return t.z-e.z}else if(e.id!==t.id){return e.id-t.id}else{return 0}}function V(e,t){var n=0,r=1,i=e.z+e.w,s=t.z+t.w,o=-e.z+e.w,u=-t.z+t.w;if(i>=0&&s>=0&&o>=0&&u>=0){return true}else if(i<0&&s<0||o<0&&u<0){return false}else{if(i<0){n=Math.max(n,i/(i-s))}else if(s<0){r=Math.min(r,i/(i-s))}if(o<0){n=Math.max(n,o/(o-u))}else if(u<0){r=Math.min(r,o/(o-u))}if(r<n){return false}else{e.lerp(t,n);t.lerp(e,1-r);return true}}}var e,t,n=[],r=0,i,s,o=[],u=0,a,f,l=[],c=0,h,p,d=[],v=0,m,g,y=[],b=0,w={objects:[],lights:[],elements:[]},E=new THREE.Vector3,S=new THREE.Vector3,x=new THREE.Vector3,T=new THREE.Vector3,N=new THREE.Vector4,C=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),k=new THREE.Box3,L=new Array(3),A=new Array(4),O=new THREE.Matrix4,M=new THREE.Matrix4,_,D=new THREE.Matrix4,P=new THREE.Matrix3,H=new THREE.Frustum,B=new THREE.Vector4,j=new THREE.Vector4;this.projectVector=function(e,t){t.matrixWorldInverse.getInverse(t.matrixWorld);M.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);return e.applyProjection(M)};this.unprojectVector=function(){var e=new THREE.Matrix4;return function(t,n){e.getInverse(n.projectionMatrix);M.multiplyMatrices(n.matrixWorld,e);return t.applyProjection(M)}}();this.pickingRay=function(e,t){e.z=-1;var n=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,t);this.unprojectVector(n,t);n.sub(e).normalize();return new THREE.Raycaster(e,n)};var F=function(){var e=[];var t=[];var n=null;var r=null;var s=new THREE.Matrix3;var u=function(i){n=i;r=n.material;s.getNormalMatrix(n.matrixWorld);e.length=0;t.length=0};var f=function(e){var t=e.position;var n=e.positionWorld;var r=e.positionScreen;n.copy(t).applyMatrix4(_);r.copy(n).applyMatrix4(M);var i=1/r.w;r.x*=i;r.y*=i;r.z*=i;e.visible=r.x>=-1&&r.x<=1&&r.y>=-1&&r.y<=1&&r.z>=-1&&r.z<=1};var l=function(e,t,n){i=R();i.position.set(e,t,n);f(i)};var c=function(t,n,r){e.push(t,n,r)};var p=function(e,n){t.push(e,n)};var d=function(e,t,n){if(e.visible===true||t.visible===true||n.visible===true)return true;L[0]=e.positionScreen;L[1]=t.positionScreen;L[2]=n.positionScreen;return C.isIntersectionBox(k.setFromPoints(L))};var v=function(e,t,n){return(n.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(n.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0};var m=function(e,t){var r=o[e];var i=o[t];h=z();h.id=n.id;h.v1.copy(r);h.v2.copy(i);h.z=(r.positionScreen.z+i.positionScreen.z)/2;h.material=n.material;w.elements.push(h)};var g=function(i,u,f){var l=o[i];var c=o[u];var h=o[f];if(d(l,c,h)===false)return;if(r.side===THREE.DoubleSide||v(l,c,h)===true){a=U();a.id=n.id;a.v1.copy(l);a.v2.copy(c);a.v3.copy(h);a.z=(l.positionScreen.z+c.positionScreen.z+h.positionScreen.z)/3;for(var p=0;p<3;p++){var m=arguments[p]*3;var g=a.vertexNormalsModel[p];g.set(e[m],e[m+1],e[m+2]);g.applyMatrix3(s).normalize();var y=arguments[p]*2;var b=a.uvs[p];b.set(t[y],t[y+1])}a.vertexNormalsLength=3;a.material=n.material;w.elements.push(a)}};return{setObject:u,projectVertex:f,checkTriangleVisibility:d,checkBackfaceCulling:v,pushVertex:l,pushNormal:c,pushUv:p,pushLine:m,pushTriangle:g}};var I=new F;this.projectScene=function(n,r,i,u){f=0;p=0;g=0;w.elements.length=0;if(n.autoUpdate===true)n.updateMatrixWorld();if(r.parent===undefined)r.updateMatrixWorld();O.copy(r.matrixWorldInverse.getInverse(r.matrixWorld));M.multiplyMatrices(r.projectionMatrix,O);H.setFromMatrix(M);t=0;w.objects.length=0;w.lights.length=0;n.traverseVisible(function(t){if(t instanceof THREE.Light){w.lights.push(t)}else if(t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Sprite){if(t.frustumCulled===false||H.intersectsObject(t)===true){e=q();e.id=t.id;e.object=t;if(t.renderDepth!==null){e.z=t.renderDepth}else{T.setFromMatrixPosition(t.matrixWorld);T.applyProjection(M);e.z=T.z}w.objects.push(e)}}});if(i===true){w.objects.sort(X)}for(var l=0,c=w.objects.length;l<c;l++){var d=w.objects[l].object;var v=d.geometry;I.setObject(d);_=d.matrixWorld;s=0;if(d instanceof THREE.Mesh){if(v instanceof THREE.BufferGeometry){var y=v.attributes;var b=v.offsets;if(y.position===undefined)continue;var C=y.position.array;for(var k=0,L=C.length;k<L;k+=3){I.pushVertex(C[k],C[k+1],C[k+2])}if(y.normal!==undefined){var A=y.normal.array;for(var k=0,L=A.length;k<L;k+=3){I.pushNormal(A[k],A[k+1],A[k+2])}}if(y.uv!==undefined){var F=y.uv.array;for(var k=0,L=F.length;k<L;k+=2){I.pushUv(F[k],F[k+1])}}if(y.index!==undefined){var $=y.index.array;if(b.length>0){for(var l=0;l<b.length;l++){var J=b[l];var K=J.index;for(var k=J.start,L=J.start+J.count;k<L;k+=3){I.pushTriangle($[k]+K,$[k+1]+K,$[k+2]+K)}}}else{for(var k=0,L=$.length;k<L;k+=3){I.pushTriangle($[k],$[k+1],$[k+2])}}}else{for(var k=0,L=C.length/3;k<L;k+=3){I.pushTriangle(k,k+1,k+2)}}}else if(v instanceof THREE.Geometry){var Q=v.vertices;var G=v.faces;var Y=v.faceVertexUvs[0];P.getNormalMatrix(_);var Z=d.material instanceof THREE.MeshFaceMaterial;var et=Z===true?d.material:null;for(var tt=0,nt=Q.length;tt<nt;tt++){var rt=Q[tt];I.pushVertex(rt.x,rt.y,rt.z)}for(var it=0,st=G.length;it<st;it++){var ot=G[it];var ut=Z===true?et.materials[ot.materialIndex]:d.material;if(ut===undefined)continue;var at=ut.side;var ft=o[ot.a];var lt=o[ot.b];var ct=o[ot.c];if(ut.morphTargets===true){var ht=v.morphTargets;var pt=d.morphTargetInfluences;var dt=ft.position;var vt=lt.position;var mt=ct.position;E.set(0,0,0);S.set(0,0,0);x.set(0,0,0);for(var gt=0,yt=ht.length;gt<yt;gt++){var bt=pt[gt];if(bt===0)continue;var wt=ht[gt].vertices;E.x+=(wt[ot.a].x-dt.x)*bt;E.y+=(wt[ot.a].y-dt.y)*bt;E.z+=(wt[ot.a].z-dt.z)*bt;S.x+=(wt[ot.b].x-vt.x)*bt;S.y+=(wt[ot.b].y-vt.y)*bt;S.z+=(wt[ot.b].z-vt.z)*bt;x.x+=(wt[ot.c].x-mt.x)*bt;x.y+=(wt[ot.c].y-mt.y)*bt;x.z+=(wt[ot.c].z-mt.z)*bt}ft.position.add(E);lt.position.add(S);ct.position.add(x);I.projectVertex(ft);I.projectVertex(lt);I.projectVertex(ct)}if(I.checkTriangleVisibility(ft,lt,ct)===false)continue;var Et=I.checkBackfaceCulling(ft,lt,ct);if(at!==THREE.DoubleSide){if(at===THREE.FrontSide&&Et===false)continue;if(at===THREE.BackSide&&Et===true)continue}a=U();a.id=d.id;a.v1.copy(ft);a.v2.copy(lt);a.v3.copy(ct);a.normalModel.copy(ot.normal);if(Et===false&&(at===THREE.BackSide||at===THREE.DoubleSide)){a.normalModel.negate()}a.normalModel.applyMatrix3(P).normalize();var St=ot.vertexNormals;for(var xt=0,Tt=Math.min(St.length,3);xt<Tt;xt++){var Nt=a.vertexNormalsModel[xt];Nt.copy(St[xt]);if(Et===false&&(at===THREE.BackSide||at===THREE.DoubleSide)){Nt.negate()}Nt.applyMatrix3(P).normalize()}a.vertexNormalsLength=St.length;var Ct=Y[it];if(Ct!==undefined){for(var kt=0;kt<3;kt++){a.uvs[kt].copy(Ct[kt])}}a.color=ot.color;a.material=ut;a.z=(ft.positionScreen.z+lt.positionScreen.z+ct.positionScreen.z)/3;w.elements.push(a)}}}else if(d instanceof THREE.Line){if(v instanceof THREE.BufferGeometry){var y=v.attributes;if(y.position!==undefined){var C=y.position.array;for(var k=0,L=C.length;k<L;k+=3){I.pushVertex(C[k],C[k+1],C[k+2])}if(y.index!==undefined){var $=y.index.array;for(var k=0,L=$.length;k<L;k+=2){I.pushLine($[k],$[k+1])}}else{var Lt=d.type===THREE.LinePieces?2:1;for(var k=0,L=C.length/3-1;k<L;k+=Lt){I.pushLine(k,k+1)}}}}else if(v instanceof THREE.Geometry){D.multiplyMatrices(M,_);var Q=d.geometry.vertices;if(Q.length===0)continue;ft=R();ft.positionScreen.copy(Q[0]).applyMatrix4(D);var Lt=d.type===THREE.LinePieces?2:1;for(var tt=1,nt=Q.length;tt<nt;tt++){ft=R();ft.positionScreen.copy(Q[tt]).applyMatrix4(D);if((tt+1)%Lt>0)continue;lt=o[s-2];B.copy(ft.positionScreen);j.copy(lt.positionScreen);if(V(B,j)===true){B.multiplyScalar(1/B.w);j.multiplyScalar(1/j.w);h=z();h.id=d.id;h.v1.positionScreen.copy(B);h.v2.positionScreen.copy(j);h.z=Math.max(B.z,j.z);h.material=d.material;if(d.material.vertexColors===THREE.VertexColors){h.vertexColors[0].copy(d.geometry.colors[tt]);h.vertexColors[1].copy(d.geometry.colors[tt-1])}w.elements.push(h)}}}}else if(d instanceof THREE.Sprite){N.set(_.elements[12],_.elements[13],_.elements[14],1);N.applyMatrix4(M);var At=1/N.w;N.z*=At;if(N.z>=-1&&N.z<=1){m=W();m.id=d.id;m.x=N.x*At;m.y=N.y*At;m.z=N.z;m.object=d;m.rotation=d.rotation;m.scale.x=d.scale.x*Math.abs(m.x-(N.x+r.projectionMatrix.elements[0])/(N.w+r.projectionMatrix.elements[12]));m.scale.y=d.scale.y*Math.abs(m.y-(N.y+r.projectionMatrix.elements[5])/(N.w+r.projectionMatrix.elements[13]));m.material=d.material;w.elements.push(m)}}}if(u===true)w.elements.sort(X);return w}};THREE.Face3=function(e,t,n,r,i,s){this.a=e;this.b=t;this.c=n;this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3;this.vertexNormals=r instanceof Array?r:[];this.color=i instanceof THREE.Color?i:new THREE.Color;this.vertexColors=i instanceof Array?i:[];this.vertexTangents=[];this.materialIndex=s!==undefined?s:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.materialIndex=this.materialIndex;for(var t=0,n=this.vertexNormals.length;t<n;t++){e.vertexNormals[t]=this.vertexNormals[t].clone()}for(var t=0,n=this.vertexColors.length;t<n;t++){e.vertexColors[t]=this.vertexColors[t].clone()}for(var t=0,n=this.vertexTangents.length;t<n;t++){e.vertexTangents[t]=this.vertexTangents[t].clone()}return e}};THREE.Face4=function(e,t,n,r,i,s,o){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(e,t,n,i,s,o)};THREE.BufferAttribute=function(e,t){this.array=e;this.itemSize=t};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(e){this.array.set(e);return this},setX:function(e,t){this.array[e*this.itemSize]=t;return this},setY:function(e,t){this.array[e*this.itemSize+1]=t;return this},setZ:function(e,t){this.array[e*this.itemSize+2]=t;return this},setXY:function(e,t,n){e*=this.itemSize;this.array[e]=t;this.array[e+1]=n;return this},setXYZ:function(e,t,n,r){e*=this.itemSize;this.array[e]=t;this.array[e+1]=n;this.array[e+2]=r;return this},setXYZW:function(e,t,n,r,i){e*=this.itemSize;this.array[e]=t;this.array[e+1]=n;this.array[e+2]=r;this.array[e+3]=i;return this}};THREE.Int8Attribute=function(e,t){console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint8Attribute=function(e,t){console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint8ClampedAttribute=function(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Int16Attribute=function(e,t){console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint16Attribute=function(e,t){console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Int32Attribute=function(e,t){console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Uint32Attribute=function(e,t){console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Float32Attribute=function(e,t){console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.Float64Attribute=function(e,t){console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");return new THREE.BufferAttribute(e,t)};THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.drawcalls=[];this.offsets=this.drawcalls;this.boundingBox=null;this.boundingSphere=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t){if(t instanceof THREE.BufferAttribute===false){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");this.attributes[e]={array:arguments[1],itemSize:arguments[2]};return}this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,n){this.drawcalls.push({start:e,count:t,index:n!==undefined?n:0})},applyMatrix:function(e){var t=this.attributes.position;if(t!==undefined){e.applyToVector3Array(t.array);t.needsUpdate=true}var n=this.attributes.normal;if(n!==undefined){var r=(new THREE.Matrix3).getNormalMatrix(e);r.applyToVector3Array(n.array);n.needsUpdate=true}},fromGeometry:function(e,t){t=t||{vertexColors:THREE.NoColors};var n=e.vertices;var r=e.faces;var i=e.faceVertexUvs;var s=t.vertexColors;var o=i[0].length>0;var u=r[0].vertexNormals.length==3;var a=new Float32Array(r.length*3*3);this.addAttribute("position",new THREE.BufferAttribute(a,3));var f=new Float32Array(r.length*3*3);this.addAttribute("normal",new THREE.BufferAttribute(f,3));if(s!==THREE.NoColors){var l=new Float32Array(r.length*3*3);this.addAttribute("color",new THREE.BufferAttribute(l,3))}if(o===true){var c=new Float32Array(r.length*3*2);this.addAttribute("uvs",new THREE.BufferAttribute(c,2))}for(var h=0,p=0,d=0;h<r.length;h++,p+=6,d+=9){var v=r[h];var m=n[v.a];var g=n[v.b];var y=n[v.c];a[d]=m.x;a[d+1]=m.y;a[d+2]=m.z;a[d+3]=g.x;a[d+4]=g.y;a[d+5]=g.z;a[d+6]=y.x;a[d+7]=y.y;a[d+8]=y.z;if(u===true){var b=v.vertexNormals[0];var w=v.vertexNormals[1];var E=v.vertexNormals[2];f[d]=b.x;f[d+1]=b.y;f[d+2]=b.z;f[d+3]=w.x;f[d+4]=w.y;f[d+5]=w.z;f[d+6]=E.x;f[d+7]=E.y;f[d+8]=E.z}else{var S=v.normal;f[d]=S.x;f[d+1]=S.y;f[d+2]=S.z;f[d+3]=S.x;f[d+4]=S.y;f[d+5]=S.z;f[d+6]=S.x;f[d+7]=S.y;f[d+8]=S.z}if(s===THREE.FaceColors){var x=v.color;l[d]=x.r;l[d+1]=x.g;l[d+2]=x.b;l[d+3]=x.r;l[d+4]=x.g;l[d+5]=x.b;l[d+6]=x.r;l[d+7]=x.g;l[d+8]=x.b}else if(s===THREE.VertexColors){var T=v.vertexColors[0];var N=v.vertexColors[1];var C=v.vertexColors[2];l[d]=T.r;l[d+1]=T.g;l[d+2]=T.b;l[d+3]=N.r;l[d+4]=N.g;l[d+5]=N.b;l[d+6]=C.r;l[d+7]=C.g;l[d+8]=C.b}if(o===true){var k=i[0][h][0];var L=i[0][h][1];var A=i[0][h][2];c[p]=k.x;c[p+1]=k.y;c[p+2]=L.x;c[p+3]=L.y;c[p+4]=A.x;c[p+5]=A.y}}this.computeBoundingSphere();return this},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3}var e=this.attributes["position"].array;if(e){var t=this.boundingBox;if(e.length>=3){t.min.x=t.max.x=e[0];t.min.y=t.max.y=e[1];t.min.z=t.max.z=e[2]}for(var n=3,r=e.length;n<r;n+=3){var i=e[n];var s=e[n+1];var o=e[n+2];if(i<t.min.x){t.min.x=i}else if(i>t.max.x){t.max.x=i}if(s<t.min.y){t.min.y=s}else if(s>t.max.y){t.max.y=s}if(o<t.min.z){t.min.z=o}else if(o>t.max.z){t.max.z=o}}}if(e===undefined||e.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}},computeBoundingSphere:function(){var e=new THREE.Box3;var t=new THREE.Vector3;return function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere}var n=this.attributes["position"].array;if(n){e.makeEmpty();var r=this.boundingSphere.center;for(var i=0,s=n.length;i<s;i+=3){t.set(n[i],n[i+1],n[i+2]);e.expandByPoint(t)}e.center(r);var o=0;for(var i=0,s=n.length;i<s;i+=3){t.set(n[i],n[i+1],n[i+2]);o=Math.max(o,r.distanceToSquared(t))}this.boundingSphere.radius=Math.sqrt(o);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes["position"]){var e,t;var n,r;var i=this.attributes["position"].array.length;if(this.attributes["normal"]===undefined){this.attributes["normal"]={itemSize:3,array:new Float32Array(i)}}else{for(e=0,t=this.attributes["normal"].array.length;e<t;e++){this.attributes["normal"].array[e]=0}}var s=this.attributes["position"].array;var o=this.attributes["normal"].array;var u,a,f,l,c,h,p=new THREE.Vector3,d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes["index"]){var y=this.attributes["index"].array;var b=this.offsets.length>0?this.offsets:[{start:0,count:y.length,index:0}];for(n=0,r=b.length;n<r;++n){var w=b[n].start;var E=b[n].count;var S=b[n].index;for(e=w,t=w+E;e<t;e+=3){u=S+y[e];a=S+y[e+1];f=S+y[e+2];l=s[u*3];c=s[u*3+1];h=s[u*3+2];p.set(l,c,h);l=s[a*3];c=s[a*3+1];h=s[a*3+2];d.set(l,c,h);l=s[f*3];c=s[f*3+1];h=s[f*3+2];v.set(l,c,h);m.subVectors(v,d);g.subVectors(p,d);m.cross(g);o[u*3]+=m.x;o[u*3+1]+=m.y;o[u*3+2]+=m.z;o[a*3]+=m.x;o[a*3+1]+=m.y;o[a*3+2]+=m.z;o[f*3]+=m.x;o[f*3+1]+=m.y;o[f*3+2]+=m.z}}}else{for(e=0,t=s.length;e<t;e+=9){l=s[e];c=s[e+1];h=s[e+2];p.set(l,c,h);l=s[e+3];c=s[e+4];h=s[e+5];d.set(l,c,h);l=s[e+6];c=s[e+7];h=s[e+8];v.set(l,c,h);m.subVectors(v,d);g.subVectors(p,d);m.cross(g);o[e]=m.x;o[e+1]=m.y;o[e+2]=m.z;o[e+3]=m.x;o[e+4]=m.y;o[e+5]=m.z;o[e+6]=m.x;o[e+7]=m.y;o[e+8]=m.z}}this.normalizeNormals();this.normalsNeedUpdate=true}},computeTangents:function(){function F(e,n,i){l=t[e*3];c=t[e*3+1];h=t[e*3+2];p=t[n*3];d=t[n*3+1];v=t[n*3+2];m=t[i*3];g=t[i*3+1];y=t[i*3+2];b=r[e*2];w=r[e*2+1];E=r[n*2];S=r[n*2+1];x=r[i*2];T=r[i*2+1];N=p-l;C=m-l;k=d-c;L=g-c;A=v-h;O=y-h;M=E-b;_=x-b;D=S-w;P=T-w;H=1/(M*P-_*D);B.set((P*N-D*C)*H,(P*k-D*L)*H,(P*A-D*O)*H);j.set((M*C-_*N)*H,(M*L-_*k)*H,(M*O-_*A)*H);u[e].add(B);u[n].add(B);u[i].add(B);a[e].add(j);a[n].add(j);a[i].add(j)}function rt(e){Y.x=n[e*3];Y.y=n[e*3+1];Y.z=n[e*3+2];Z.copy(Y);tt=u[e];Q.copy(tt);Q.sub(Y.multiplyScalar(Y.dot(tt))).normalize();G.crossVectors(Z,tt);nt=G.dot(a[e]);et=nt<0?-1:1;o[e*4]=Q.x;o[e*4+1]=Q.y;o[e*4+2]=Q.z;o[e*4+3]=et}if(this.attributes["index"]===undefined||this.attributes["position"]===undefined||this.attributes["normal"]===undefined||this.attributes["uv"]===undefined){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var e=this.attributes["index"].array;var t=this.attributes["position"].array;var n=this.attributes["normal"].array;var r=this.attributes["uv"].array;var i=t.length/3;if(this.attributes["tangent"]===undefined){var s=4*i;this.attributes["tangent"]={itemSize:4,array:new Float32Array(s)}}var o=this.attributes["tangent"].array;var u=[],a=[];for(var f=0;f<i;f++){u[f]=new THREE.Vector3;a[f]=new THREE.Vector3}var l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H;var B=new THREE.Vector3,j=new THREE.Vector3;var I,q;var R,U;var z,W,X;var V=this.offsets;for(R=0,U=V.length;R<U;++R){var $=V[R].start;var J=V[R].count;var K=V[R].index;for(I=$,q=$+J;I<q;I+=3){z=K+e[I];W=K+e[I+1];X=K+e[I+2];F(z,W,X)}}var Q=new THREE.Vector3,G=new THREE.Vector3;var Y=new THREE.Vector3,Z=new THREE.Vector3;var et,tt,nt;for(R=0,U=V.length;R<U;++R){var $=V[R].start;var J=V[R].count;var K=V[R].index;for(I=$,q=$+J;I<q;I+=3){z=K+e[I];W=K+e[I+1];X=K+e[I+2];rt(z);rt(W);rt(X)}}},computeOffsets:function(e){var t=e;if(e===undefined)t=65535;var n=Date.now();var r=this.attributes["index"].array;var i=this.attributes["position"].array;var s=i.length/3;var o=r.length/3;var u=new Uint16Array(r.length);var a=0;var f=0;var l=[{start:0,count:0,index:0}];var c=l[0];var h=0;var p=0;var d=new Int32Array(6);var v=new Int32Array(i.length);var m=new Int32Array(i.length);for(var g=0;g<i.length;g++){v[g]=-1;m[g]=-1}for(var y=0;y<o;y++){p=0;for(var b=0;b<3;b++){var w=r[y*3+b];if(v[w]==-1){d[b*2]=w;d[b*2+1]=-1;p++}else if(v[w]<c.index){d[b*2]=w;d[b*2+1]=-1;h++}else{d[b*2]=w;d[b*2+1]=v[w]}}var E=f+p;if(E>c.index+t){var S={start:a,count:0,index:f};l.push(S);c=S;for(var x=0;x<6;x+=2){var T=d[x+1];if(T>-1&&T<c.index)d[x+1]=-1}}for(var x=0;x<6;x+=2){var w=d[x];var T=d[x+1];if(T===-1)T=f++;v[w]=T;m[T]=w;u[a++]=T-c.index;c.count++}}this.reorderBuffers(u,m,f);this.offsets=l;return l},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){var e=this.attributes["normal"].array;var t,n,r,i;for(var s=0,o=e.length;s<o;s+=3){t=e[s];n=e[s+1];r=e[s+2];i=1/Math.sqrt(t*t+n*n+r*r);e[s]*=i;e[s+1]*=i;e[s+2]*=i}},reorderBuffers:function(e,t,n){var r={};var i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var s in this.attributes){if(s=="index")continue;var o=this.attributes[s].array;for(var u=0,a=i.length;u<a;u++){var f=i[u];if(o instanceof f){r[s]=new f(this.attributes[s].itemSize*n);break}}}for(var l=0;l<n;l++){var c=t[l];for(var s in this.attributes){if(s=="index")continue;var h=this.attributes[s].array;var p=this.attributes[s].itemSize;var d=r[s];for(var v=0;v<p;v++)d[l*p+v]=h[c*p+v]}}this.attributes["index"].array=e;for(var s in this.attributes){if(s=="index")continue;this.attributes[s].array=r[s];this.attributes[s].numItems=this.attributes[s].itemSize*n}},clone:function(){var e=new THREE.BufferGeometry;var t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var n in this.attributes){var r=this.attributes[n];var i=r.array;var s={itemSize:r.itemSize,array:null};for(var o=0,u=t.length;o<u;o++){var a=t[o];if(i instanceof a){s.array=new a(i);break}}e.attributes[n]=s}for(var o=0,u=this.offsets.length;o<u;o++){var f=this.offsets[o];e.offsets.push({start:f.start,index:f.index,count:f.count})}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.dynamic=true;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.tangentsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.buffersNeedUpdate=false;this.groupsNeedUpdate=false};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){var t=(new THREE.Matrix3).getNormalMatrix(e);for(var n=0,r=this.vertices.length;n<r;n++){var i=this.vertices[n];i.applyMatrix4(e)}for(var n=0,r=this.faces.length;n<r;n++){var s=this.faces[n];s.normal.applyMatrix3(t).normalize();for(var o=0,u=s.vertexNormals.length;o<u;o++){s.vertexNormals[o].applyMatrix3(t).normalize()}}if(this.boundingBox instanceof THREE.Box3){this.computeBoundingBox()}if(this.boundingSphere instanceof THREE.Sphere){this.computeBoundingSphere()}},center:function(){this.computeBoundingBox();var e=new THREE.Vector3;e.addVectors(this.boundingBox.min,this.boundingBox.max);e.multiplyScalar(-.5);this.applyMatrix((new THREE.Matrix4).makeTranslation(e.x,e.y,e.z));this.computeBoundingBox();return e},computeFaceNormals:function(){var e=new THREE.Vector3,t=new THREE.Vector3;for(var n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];var s=this.vertices[i.a];var o=this.vertices[i.b];var u=this.vertices[i.c];e.subVectors(u,o);t.subVectors(s,o);e.cross(t);e.normalize();i.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r,i,s,o;o=new Array(this.vertices.length);for(t=0,n=this.vertices.length;t<n;t++){o[t]=new THREE.Vector3}if(e){var u,a,f,l;var c=new THREE.Vector3,h=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,v=new THREE.Vector3;for(r=0,i=this.faces.length;r<i;r++){s=this.faces[r];u=this.vertices[s.a];a=this.vertices[s.b];f=this.vertices[s.c];c.subVectors(f,a);h.subVectors(u,a);c.cross(h);o[s.a].add(c);o[s.b].add(c);o[s.c].add(c)}}else{for(r=0,i=this.faces.length;r<i;r++){s=this.faces[r];o[s.a].add(s.normal);o[s.b].add(s.normal);o[s.c].add(s.normal)}}for(t=0,n=this.vertices.length;t<n;t++){o[t].normalize()}for(r=0,i=this.faces.length;r<i;r++){s=this.faces[r];s.vertexNormals[0]=o[s.a].clone();s.vertexNormals[1]=o[s.b].clone();s.vertexNormals[2]=o[s.c].clone()}},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++){i=this.faces[n];if(!i.__originalFaceNormal){i.__originalFaceNormal=i.normal.clone()}else{i.__originalFaceNormal.copy(i.normal)}if(!i.__originalVertexNormals)i.__originalVertexNormals=[];for(e=0,t=i.vertexNormals.length;e<t;e++){if(!i.__originalVertexNormals[e]){i.__originalVertexNormals[e]=i.vertexNormals[e].clone()}else{i.__originalVertexNormals[e].copy(i.vertexNormals[e])}}}var s=new THREE.Geometry;s.faces=this.faces;for(e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals;var u=this.morphNormals[e].vertexNormals;var a,f;for(n=0,r=this.faces.length;n<r;n++){a=new THREE.Vector3;f={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3};o.push(a);u.push(f)}}var l=this.morphNormals[e];s.vertices=this.morphTargets[e].vertices;s.computeFaceNormals();s.computeVertexNormals();var a,f;for(n=0,r=this.faces.length;n<r;n++){i=this.faces[n];a=l.faceNormals[n];f=l.vertexNormals[n];a.copy(i.normal);f.a.copy(i.vertexNormals[0]);f.b.copy(i.vertexNormals[1]);f.c.copy(i.vertexNormals[2])}}for(n=0,r=this.faces.length;n<r;n++){i=this.faces[n];i.normal=i.__originalFaceNormal;i.vertexNormals=i.__originalVertexNormals}},computeTangents:function(){function B(e,t,n,r,i,s,o){f=e.vertices[t];l=e.vertices[n];c=e.vertices[r];h=a[i];p=a[s];d=a[o];v=l.x-f.x;m=c.x-f.x;g=l.y-f.y;y=c.y-f.y;b=l.z-f.z;w=c.z-f.z;E=p.x-h.x;S=d.x-h.x;x=p.y-h.y;T=d.y-h.y;N=1/(E*T-S*x);O.set((T*v-x*m)*N,(T*g-x*y)*N,(T*b-x*w)*N);M.set((E*m-S*v)*N,(E*y-S*g)*N,(E*w-S*b)*N);L[t].add(O);L[n].add(O);L[r].add(O);A[t].add(M);A[n].add(M);A[r].add(M)}var e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L=[],A=[],O=new THREE.Vector3,M=new THREE.Vector3,_=new THREE.Vector3,D=new THREE.Vector3,P=new THREE.Vector3,H;for(n=0,r=this.vertices.length;n<r;n++){L[n]=new THREE.Vector3;A[n]=new THREE.Vector3}for(e=0,t=this.faces.length;e<t;e++){u=this.faces[e];a=this.faceVertexUvs[0][e];B(this,u.a,u.b,u.c,0,1,2)}var j=["a","b","c","d"];for(e=0,t=this.faces.length;e<t;e++){u=this.faces[e];for(i=0;i<Math.min(u.vertexNormals.length,3);i++){P.copy(u.vertexNormals[i]);o=u[j[i]];C=L[o];_.copy(C);_.sub(P.multiplyScalar(P.dot(C))).normalize();D.crossVectors(u.vertexNormals[i],C);k=D.dot(A[o]);H=k<0?-1:1;u.vertexTangents[i]=new THREE.Vector4(_.x,_.y,_.z,H)}}this.hasTangents=true},computeLineDistances:function(){var e=0;var t=this.vertices;for(var n=0,r=t.length;n<r;n++){if(n>0){e+=t[n].distanceTo(t[n-1])}this.lineDistances[n]=e}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3}this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere}this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(e instanceof THREE.Geometry===false){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var r,i=this.vertices.length,s=this.faceVertexUvs[0].length,o=this.vertices,u=e.vertices,a=this.faces,f=e.faces,l=this.faceVertexUvs[0],c=e.faceVertexUvs[0];if(n===undefined)n=0;if(t!==undefined){r=(new THREE.Matrix3).getNormalMatrix(t)}for(var h=0,p=u.length;h<p;h++){var d=u[h];var v=d.clone();if(t!==undefined)v.applyMatrix4(t);o.push(v)}for(h=0,p=f.length;h<p;h++){var m=f[h],g,y,b,w=m.vertexNormals,E=m.vertexColors;g=new THREE.Face3(m.a+i,m.b+i,m.c+i);g.normal.copy(m.normal);if(r!==undefined){g.normal.applyMatrix3(r).normalize()}for(var S=0,x=w.length;S<x;S++){y=w[S].clone();if(r!==undefined){y.applyMatrix3(r).normalize()}g.vertexNormals.push(y)}g.color.copy(m.color);for(var S=0,x=E.length;S<x;S++){b=E[S];g.vertexColors.push(b.clone())}g.materialIndex=m.materialIndex+n;a.push(g)}for(h=0,p=c.length;h<p;h++){var T=c[h],N=[];if(T===undefined){continue}for(var S=0,x=T.length;S<x;S++){N.push(new THREE.Vector2(T[S].x,T[S].y))}l.push(N)}},mergeVertices:function(){var e={};var t=[],n=[];var r,i;var s=4;var o=Math.pow(10,s);var u,a,f;var l,c,h,p,d;for(u=0,a=this.vertices.length;u<a;u++){r=this.vertices[u];i=Math.round(r.x*o)+"_"+Math.round(r.y*o)+"_"+Math.round(r.z*o);if(e[i]===undefined){e[i]=u;t.push(this.vertices[u]);n[u]=t.length-1}else{n[u]=n[e[i]]}}var v=[];for(u=0,a=this.faces.length;u<a;u++){f=this.faces[u];f.a=n[f.a];f.b=n[f.b];f.c=n[f.c];l=[f.a,f.b,f.c];var m=-1;for(var g=0;g<3;g++){if(l[g]==l[(g+1)%3]){m=g;v.push(u);break}}}for(u=v.length-1;u>=0;u--){var y=v[u];this.faces.splice(y,1);for(h=0,p=this.faceVertexUvs.length;h<p;h++){this.faceVertexUvs[h].splice(y,1)}}var b=this.vertices.length-t.length;this.vertices=t;return b},makeGroups:function(){var e=0;return function(t,n){var r,i,s,o,u,a={},f;var l=this.morphTargets.length;var c=this.morphNormals.length;this.geometryGroups={};this.geometryGroupsList=[];for(r=0,i=this.faces.length;r<i;r++){s=this.faces[r];o=t?s.materialIndex:0;if(!(o in a)){a[o]={hash:o,counter:0}}u=a[o].hash+"_"+a[o].counter;if(!(u in this.geometryGroups)){f={id:e++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:l,numMorphNormals:c};this.geometryGroups[u]=f;this.geometryGroupsList.push(f)}if(this.geometryGroups[u].vertices+3>n){a[o].counter+=1;u=a[o].hash+"_"+a[o].counter;if(!(u in this.geometryGroups)){f={id:e++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:l,numMorphNormals:c};this.geometryGroups[u]=f;this.geometryGroupsList.push(f)}}this.geometryGroups[u].faces3.push(r);this.geometryGroups[u].vertices+=3}}}(),clone:function(){var e=new THREE.Geometry;var t=this.vertices;for(var n=0,r=t.length;n<r;n++){e.vertices.push(t[n].clone())}var i=this.faces;for(var n=0,r=i.length;n<r;n++){e.faces.push(i[n].clone())}var s=this.faceVertexUvs[0];for(var n=0,r=s.length;n<r;n++){var o=s[n],u=[];for(var a=0,f=o.length;a<f;a++){u.push(new THREE.Vector2(o[a].x,o[a].y))}e.faceVertexUvs[0].push(u)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(e)}}();THREE.Camera.prototype.clone=function(e){if(e===undefined)e=new THREE.Camera;THREE.Object3D.prototype.clone.call(this,e);e.matrixWorldInverse.copy(this.matrixWorldInverse);e.projectionMatrix.copy(this.projectionMatrix);return e};THREE.CubeCamera=function(e,t,n){THREE.Object3D.call(this);var r=90,i=1;var s=new THREE.PerspectiveCamera(r,i,e,t);s.up.set(0,-1,0);s.lookAt(new THREE.Vector3(1,0,0));this.add(s);var o=new THREE.PerspectiveCamera(r,i,e,t);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(-1,0,0));this.add(o);var u=new THREE.PerspectiveCamera(r,i,e,t);u.up.set(0,0,1);u.lookAt(new THREE.Vector3(0,1,0));this.add(u);var a=new THREE.PerspectiveCamera(r,i,e,t);a.up.set(0,0,-1);a.lookAt(new THREE.Vector3(0,-1,0));this.add(a);var f=new THREE.PerspectiveCamera(r,i,e,t);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(0,0,1));this.add(f);var l=new THREE.PerspectiveCamera(r,i,e,t);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);this.renderTarget=new THREE.WebGLRenderTargetCube(n,n,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(e,t){var n=this.renderTarget;var r=n.generateMipmaps;n.generateMipmaps=false;n.activeCubeFace=0;e.render(t,s,n);n.activeCubeFace=1;e.render(t,o,n);n.activeCubeFace=2;e.render(t,u,n);n.activeCubeFace=3;e.render(t,a,n);n.activeCubeFace=4;e.render(t,f,n);n.generateMipmaps=r;n.activeCubeFace=5;e.render(t,l,n)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.OrthographicCamera=function(e,t,n,r,i,s){THREE.Camera.call(this);this.left=e;this.right=t;this.top=n;this.bottom=r;this.near=i!==undefined?i:.1;this.far=s!==undefined?s:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,e);e.left=this.left;e.right=this.right;e.top=this.top;e.bottom=this.bottom;e.near=this.near;e.far=this.far;return e};THREE.PerspectiveCamera=function(e,t,n,r){THREE.Camera.call(this);this.fov=e!==undefined?e:50;this.aspect=t!==undefined?t:1;this.near=n!==undefined?n:.1;this.far=r!==undefined?r:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(e,t){if(t===undefined)t=24;this.fov=2*THREE.Math.radToDeg(Math.atan(t/(e*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,i,s){this.fullWidth=e;this.fullHeight=t;this.x=n;this.y=r;this.width=i;this.height=s;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight;var t=Math.tan(THREE.Math.degToRad(this.fov*.5))*this.near;var n=-t;var r=e*n;var i=e*t;var s=Math.abs(i-r);var o=Math.abs(t-n);this.projectionMatrix.makeFrustum(r+this.x*s/this.fullWidth,r+(this.x+this.width)*s/this.fullWidth,t-(this.y+this.height)*o/this.fullHeight,t-this.y*o/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,e);e.fov=this.fov;e.aspect=this.aspect;e.near=this.near;e.far=this.far;return e};THREE.Light=function(e){THREE.Object3D.call(this);this.color=new THREE.Color(e)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(e){if(e===undefined)e=new THREE.Light;THREE.Object3D.prototype.clone.call(this,e);e.color.copy(this.color);return e};THREE.AmbientLight=function(e){THREE.Light.call(this,e)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,e);return e};THREE.AreaLight=function(e,t){THREE.Light.call(this,e);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=t!==undefined?t:1;this.width=1;this.height=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=t!==undefined?t:1;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraLeft=-500;this.shadowCameraRight=500;this.shadowCameraTop=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;e.shadowCameraNear=this.shadowCameraNear;e.shadowCameraFar=this.shadowCameraFar;e.shadowCameraLeft=this.shadowCameraLeft;e.shadowCameraRight=this.shadowCameraRight;e.shadowCameraTop=this.shadowCameraTop;e.shadowCameraBottom=this.shadowCameraBottom;e.shadowCameraVisible=this.shadowCameraVisible;e.shadowBias=this.shadowBias;e.shadowDarkness=this.shadowDarkness;e.shadowMapWidth=this.shadowMapWidth;e.shadowMapHeight=this.shadowMapHeight;e.shadowCascade=this.shadowCascade;e.shadowCascadeOffset.copy(this.shadowCascadeOffset);e.shadowCascadeCount=this.shadowCascadeCount;e.shadowCascadeBias=this.shadowCascadeBias.slice(0);e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0);e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0);e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0);e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0);return e};THREE.HemisphereLight=function(e,t,n){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(t);this.intensity=n!==undefined?n:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,e);e.groundColor.copy(this.groundColor);e.intensity=this.intensity;return e};THREE.PointLight=function(e,t,n){THREE.Light.call(this,e);this.intensity=t!==undefined?t:1;this.distance=n!==undefined?n:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;THREE.Light.prototype.clone.call(this,e);e.intensity=this.intensity;e.distance=this.distance;return e};THREE.SpotLight=function(e,t,n,r,i){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=t!==undefined?t:1;this.distance=n!==undefined?n:0;this.angle=r!==undefined?r:Math.PI/3;this.exponent=i!==undefined?i:10;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.distance=this.distance;e.angle=this.angle;e.exponent=this.exponent;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;e.shadowCameraNear=this.shadowCameraNear;e.shadowCameraFar=this.shadowCameraFar;e.shadowCameraFov=this.shadowCameraFov;e.shadowCameraVisible=this.shadowCameraVisible;e.shadowBias=this.shadowBias;e.shadowDarkness=this.shadowDarkness;e.shadowMapWidth=this.shadowMapWidth;e.shadowMapHeight=this.shadowMapHeight;return e};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};THREE.Loader=function(e){this.showStatus=e;this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,addStatusElement:function(){var e=document.createElement("div");e.style.position="absolute";e.style.right="0px";e.style.top="0px";e.style.fontSize="0.8em";e.style.textAlign="left";e.style.background="rgba(0,0,0,0.25)";e.style.color="#fff";e.style.width="120px";e.style.padding="0.5em 0.5em 0.5em 0.5em";e.style.zIndex=1e3;e.innerHTML="Loading ...";return e},updateProgress:function(e){var t="Loaded ";if(e.total){t+=(100*e.loaded/e.total).toFixed(0)+"%"}else{t+=(e.loaded/1024).toFixed(2)+" KB"}this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");if(t.length===1)return"./";t.pop();return t.join("/")+"/"},initMaterials:function(e,t){var n=[];for(var r=0;r<e.length;++r){n[r]=this.createMaterial(e[r],t)}return n},needsTangents:function(e){for(var t=0,n=e.length;t<n;t++){var r=e[t];if(r instanceof THREE.ShaderMaterial)return true}return false},createMaterial:function(e,t){function r(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function i(e,i,s,o,u,a,f){var l=t+s;var c;var h=THREE.Loader.Handlers.get(l);if(h!==null){c=h.load(l)}else{c=new THREE.Texture;h=n.imageLoader;h.crossOrigin=n.crossOrigin;h.load(l,function(e){if(THREE.Math.isPowerOfTwo(e.width)===false||THREE.Math.isPowerOfTwo(e.height)===false){var t=r(e.width);var n=r(e.height);var i=document.createElement("canvas");i.width=t;i.height=n;var s=i.getContext("2d");s.drawImage(e,0,0,t,n);c.image=i}else{c.image=e}c.needsUpdate=true})}c.sourceFile=s;if(o){c.repeat.set(o[0],o[1]);if(o[0]!==1)c.wrapS=THREE.RepeatWrapping;if(o[1]!==1)c.wrapT=THREE.RepeatWrapping}if(u){c.offset.set(u[0],u[1])}if(a){var p={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(p[a[0]]!==undefined)c.wrapS=p[a[0]];if(p[a[1]]!==undefined)c.wrapT=p[a[1]]}if(f){c.anisotropy=f}e[i]=c}function s(e){return(e[0]*255<<16)+(e[1]*255<<8)+e[2]*255}var n=this;var o="MeshLambertMaterial";var u={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(e.shading){var a=e.shading.toLowerCase();if(a==="phong")o="MeshPhongMaterial";else if(a==="basic")o="MeshBasicMaterial"}if(e.blending!==undefined&&THREE[e.blending]!==undefined){u.blending=THREE[e.blending]}if(e.transparent!==undefined||e.opacity<1){u.transparent=e.transparent}if(e.depthTest!==undefined){u.depthTest=e.depthTest}if(e.depthWrite!==undefined){u.depthWrite=e.depthWrite}if(e.visible!==undefined){u.visible=e.visible}if(e.flipSided!==undefined){u.side=THREE.BackSide}if(e.doubleSided!==undefined){u.side=THREE.DoubleSide}if(e.wireframe!==undefined){u.wireframe=e.wireframe}if(e.vertexColors!==undefined){if(e.vertexColors==="face"){u.vertexColors=THREE.FaceColors}else if(e.vertexColors){u.vertexColors=THREE.VertexColors}}if(e.colorDiffuse){u.color=s(e.colorDiffuse)}else if(e.DbgColor){u.color=e.DbgColor}if(e.colorSpecular){u.specular=s(e.colorSpecular)}if(e.colorAmbient){u.ambient=s(e.colorAmbient)}if(e.colorEmissive){u.emissive=s(e.colorEmissive)}if(e.transparency){u.opacity=e.transparency}if(e.specularCoef){u.shininess=e.specularCoef}if(e.mapDiffuse&&t){i(u,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy)}if(e.mapLight&&t){i(u,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy)}if(e.mapBump&&t){i(u,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy)}if(e.mapNormal&&t){i(u,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy)}if(e.mapSpecular&&t){i(u,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy)}if(e.mapAlpha&&t){i(u,"alphaMap",e.mapAlpha,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy)}if(e.mapBumpScale){u.bumpScale=e.mapBumpScale}if(e.mapNormal){var f=THREE.ShaderLib["normalmap"];var l=THREE.UniformsUtils.clone(f.uniforms);l["tNormal"].value=u.normalMap;if(e.mapNormalFactor){l["uNormalScale"].value.set(e.mapNormalFactor,e.mapNormalFactor)}if(u.map){l["tDiffuse"].value=u.map;l["enableDiffuse"].value=true}if(u.specularMap){l["tSpecular"].value=u.specularMap;l["enableSpecular"].value=true}if(u.lightMap){l["tAO"].value=u.lightMap;l["enableAO"].value=true}l["diffuse"].value.setHex(u.color);l["specular"].value.setHex(u.specular);l["ambient"].value.setHex(u.ambient);l["shininess"].value=u.shininess;if(u.opacity!==undefined){l["opacity"].value=u.opacity}var c={fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:l,lights:true,fog:true};var h=new THREE.ShaderMaterial(c);if(u.transparent){h.transparent=true}}else{var h=new THREE[o](u)}if(e.DbgName!==undefined)h.name=e.DbgName;return h}};THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=0,n=this.handlers.length;t<n;t+=2){var r=this.handlers[t];var i=this.handlers[t+1];if(r.test(e)){return i}}return null}};THREE.XHRLoader=function(e){this.cache=new THREE.Cache;this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,n,r){var i=this;var s=i.cache.get(e);if(s!==undefined){if(t)t(s);return}var o=new XMLHttpRequest;o.open("GET",e,true);o.addEventListener("load",function(n){i.cache.add(e,this.response);if(t)t(this.response);i.manager.itemEnd(e)},false);if(n!==undefined){o.addEventListener("progress",function(e){n(e)},false)}if(r!==undefined){o.addEventListener("error",function(e){r(e)},false)}if(this.crossOrigin!==undefined)o.crossOrigin=this.crossOrigin;if(this.responseType!==undefined)o.responseType=this.responseType;o.send(null);i.manager.itemStart(e)},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.ImageLoader=function(e){this.cache=new THREE.Cache;this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,n,r){var i=this;var s=i.cache.get(e);if(s!==undefined){t(s);return}var o=document.createElement("img");if(t!==undefined){o.addEventListener("load",function(n){i.cache.add(e,this);t(this);i.manager.itemEnd(e)},false)}if(n!==undefined){o.addEventListener("progress",function(e){n(e)},false)}if(r!==undefined){o.addEventListener("error",function(e){r(e)},false)}if(this.crossOrigin!==undefined)o.crossOrigin=this.crossOrigin;o.src=e;i.manager.itemStart(e);return o},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.JSONLoader=function(e){THREE.Loader.call(this,e);this.withCredentials=false};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,t,n){var r=this;n=n&&typeof n==="string"?n:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,t,n)};THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,n,r,i){var s=new XMLHttpRequest;var o=0;s.onreadystatechange=function(){if(s.readyState===s.DONE){if(s.status===200||s.status===0){if(s.responseText){var u=JSON.parse(s.responseText);if(u.metadata!==undefined&&u.metadata.type==="scene"){console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}var a=e.parse(u,r);n(a.geometry,a.materials)}else{console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.')}e.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+s.status+")")}}else if(s.readyState===s.LOADING){if(i){if(o===0){o=s.getResponseHeader("Content-Length")}i({total:o,loaded:s.responseText.length})}}else if(s.readyState===s.HEADERS_RECEIVED){if(i!==undefined){o=s.getResponseHeader("Content-Length")}}};s.open("GET",t,true);s.withCredentials=this.withCredentials;s.send(null)};THREE.JSONLoader.prototype.parse=function(e,t){function s(t){function n(e,t){return e&1<<t}var i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_=e.faces,D=e.vertices,P=e.normals,H=e.colors,B=0;if(e.uvs!==undefined){for(i=0;i<e.uvs.length;i++){if(e.uvs[i].length)B++}for(i=0;i<B;i++){r.faceVertexUvs[i]=[]}}u=0;a=D.length;while(u<a){E=new THREE.Vector3;E.x=D[u++]*t;E.y=D[u++]*t;E.z=D[u++]*t;r.vertices.push(E)}u=0;a=_.length;while(u<a){p=_[u++];d=n(p,0);v=n(p,1);m=n(p,3);g=n(p,4);y=n(p,5);b=n(p,6);w=n(p,7);if(d){x=new THREE.Face3;x.a=_[u];x.b=_[u+1];x.c=_[u+3];T=new THREE.Face3;T.a=_[u+1];T.b=_[u+2];T.c=_[u+3];u+=4;if(v){h=_[u++];x.materialIndex=h;T.materialIndex=h}o=r.faces.length;if(m){for(i=0;i<B;i++){L=e.uvs[i];r.faceVertexUvs[i][o]=[];r.faceVertexUvs[i][o+1]=[];for(s=0;s<4;s++){c=_[u++];O=L[c*2];M=L[c*2+1];A=new THREE.Vector2(O,M);if(s!==2)r.faceVertexUvs[i][o].push(A);if(s!==0)r.faceVertexUvs[i][o+1].push(A)}}}if(g){l=_[u++]*3;x.normal.set(P[l++],P[l++],P[l]);T.normal.copy(x.normal)}if(y){for(i=0;i<4;i++){l=_[u++]*3;k=new THREE.Vector3(P[l++],P[l++],P[l]);if(i!==2)x.vertexNormals.push(k);if(i!==0)T.vertexNormals.push(k)}}if(b){f=_[u++];C=H[f];x.color.setHex(C);T.color.setHex(C)}if(w){for(i=0;i<4;i++){f=_[u++];C=H[f];if(i!==2)x.vertexColors.push(new THREE.Color(C));if(i!==0)T.vertexColors.push(new THREE.Color(C))}}r.faces.push(x);r.faces.push(T)}else{S=new THREE.Face3;S.a=_[u++];S.b=_[u++];S.c=_[u++];if(v){h=_[u++];S.materialIndex=h}o=r.faces.length;if(m){for(i=0;i<B;i++){L=e.uvs[i];r.faceVertexUvs[i][o]=[];for(s=0;s<3;s++){c=_[u++];O=L[c*2];M=L[c*2+1];A=new THREE.Vector2(O,M);r.faceVertexUvs[i][o].push(A)}}}if(g){l=_[u++]*3;S.normal.set(P[l++],P[l++],P[l])}if(y){for(i=0;i<3;i++){l=_[u++]*3;k=new THREE.Vector3(P[l++],P[l++],P[l]);S.vertexNormals.push(k)}}if(b){f=_[u++];S.color.setHex(H[f])}if(w){for(i=0;i<3;i++){f=_[u++];S.vertexColors.push(new THREE.Color(H[f]))}}r.faces.push(S)}}}function o(){var t=e.influencesPerVertex!==undefined?e.influencesPerVertex:2;if(e.skinWeights){for(var n=0,i=e.skinWeights.length;n<i;n+=t){var s=e.skinWeights[n];var o=t>1?e.skinWeights[n+1]:0;var u=t>2?e.skinWeights[n+2]:0;var a=t>3?e.skinWeights[n+3]:0;r.skinWeights.push(new THREE.Vector4(s,o,u,a))}}if(e.skinIndices){for(var n=0,i=e.skinIndices.length;n<i;n+=t){var f=e.skinIndices[n];var l=t>1?e.skinIndices[n+1]:0;var c=t>2?e.skinIndices[n+2]:0;var h=t>3?e.skinIndices[n+3]:0;r.skinIndices.push(new THREE.Vector4(f,l,c,h))}}r.bones=e.bones;if(r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)){console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match.")}r.animation=e.animation;r.animations=e.animations}function u(t){if(e.morphTargets!==undefined){var n,i,s,o,u,a;for(n=0,i=e.morphTargets.length;n<i;n++){r.morphTargets[n]={};r.morphTargets[n].name=e.morphTargets[n].name;r.morphTargets[n].vertices=[];u=r.morphTargets[n].vertices;a=e.morphTargets[n].vertices;for(s=0,o=a.length;s<o;s+=3){var f=new THREE.Vector3;f.x=a[s]*t;f.y=a[s+1]*t;f.z=a[s+2]*t;u.push(f)}}}if(e.morphColors!==undefined){var n,i,l,c,h,p,d;for(n=0,i=e.morphColors.length;n<i;n++){r.morphColors[n]={};r.morphColors[n].name=e.morphColors[n].name;r.morphColors[n].colors=[];h=r.morphColors[n].colors;p=e.morphColors[n].colors;for(l=0,c=p.length;l<c;l+=3){d=new THREE.Color(16755200);d.setRGB(p[l],p[l+1],p[l+2]);h.push(d)}}}}var n=this,r=new THREE.Geometry,i=e.scale!==undefined?1/e.scale:1;s(i);o();u(i);r.computeFaceNormals();r.computeBoundingSphere();if(e.materials===undefined||e.materials.length===0){return{geometry:r}}else{var a=this.initMaterials(e.materials,t);if(this.needsTangents(a)){r.computeTangents()}return{geometry:r,materials:a}}};THREE.LoadingManager=function(e,t,n){var r=this;var i=0,s=0;this.onLoad=e;this.onProgress=t;this.onError=n;this.itemStart=function(e){s++};this.itemEnd=function(e){i++;if(r.onProgress!==undefined){r.onProgress(e,i,s)}if(i===s&&r.onLoad!==undefined){r.onLoad()}}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,n,r){var i=this;var s=new THREE.XHRLoader;s.setCrossOrigin(this.crossOrigin);s.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry;var n=e.attributes;for(var r in n){var i=n[r];t.attributes[r]={itemSize:i.itemSize,array:new self[i.type](i.array)}}var s=e.offsets;if(s!==undefined){t.offsets=JSON.parse(JSON.stringify(s))}var o=e.boundingSphere;if(o!==undefined){t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(o.center!==undefined?o.center:[0,0,0]),o.radius)}return t}};THREE.MaterialLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,n,r){var i=this;var s=new THREE.XHRLoader;s.setCrossOrigin(this.crossOrigin);s.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(e.color!==undefined)t.color.setHex(e.color);if(e.ambient!==undefined)t.ambient.setHex(e.ambient);if(e.emissive!==undefined)t.emissive.setHex(e.emissive);if(e.specular!==undefined)t.specular.setHex(e.specular);if(e.shininess!==undefined)t.shininess=e.shininess;if(e.uniforms!==undefined)t.uniforms=e.uniforms;if(e.vertexShader!==undefined)t.vertexShader=e.vertexShader;if(e.fragmentShader!==undefined)t.fragmentShader=e.fragmentShader;if(e.vertexColors!==undefined)t.vertexColors=e.vertexColors;if(e.blending!==undefined)t.blending=e.blending;if(e.side!==undefined)t.side=e.side;if(e.opacity!==undefined)t.opacity=e.opacity;if(e.transparent!==undefined)t.transparent=e.transparent;if(e.wireframe!==undefined)t.wireframe=e.wireframe;if(e.materials!==undefined){for(var n=0,r=e.materials.length;n<r;n++){t.materials.push(this.parse(e.materials[n]))}}return t}};THREE.ObjectLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,n,r){var i=this;var s=new THREE.XHRLoader(i.manager);s.setCrossOrigin(this.crossOrigin);s.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries);var n=this.parseMaterials(e.materials);var r=this.parseObject(e.object,t,n);return r},parseGeometries:function(e){var t={};if(e!==undefined){var n=new THREE.JSONLoader;var r=new THREE.BufferGeometryLoader;for(var i=0,s=e.length;i<s;i++){var o;var u=e[i];switch(u.type){case"PlaneGeometry":o=new THREE.PlaneGeometry(u.width,u.height,u.widthSegments,u.heightSegments);break;case"BoxGeometry":case"CubeGeometry":o=new THREE.BoxGeometry(u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments);break;case"CircleGeometry":o=new THREE.CircleGeometry(u.radius,u.segments);break;case"CylinderGeometry":o=new THREE.CylinderGeometry(u.radiusTop,u.radiusBottom,u.height,u.radialSegments,u.heightSegments,u.openEnded);break;case"SphereGeometry":o=new THREE.SphereGeometry(u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"IcosahedronGeometry":o=new THREE.IcosahedronGeometry(u.radius,u.detail);break;case"TorusGeometry":o=new THREE.TorusGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.arc);break;case"TorusKnotGeometry":o=new THREE.TorusKnotGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.p,u.q,u.heightScale);break;case"BufferGeometry":o=r.parse(u.data);break;case"Geometry":o=n.parse(u.data).geometry;break}o.uuid=u.uuid;if(u.name!==undefined)o.name=u.name;t[u.uuid]=o}}return t},parseMaterials:function(e){var t={};if(e!==undefined){var n=new THREE.MaterialLoader;for(var r=0,i=e.length;r<i;r++){var s=e[r];var o=n.parse(s);o.uuid=s.uuid;if(s.name!==undefined)o.name=s.name;t[s.uuid]=o}}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,n,r){var i;switch(t.type){case"Scene":i=new THREE.Scene;break;case"PerspectiveCamera":i=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":i=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":i=new THREE.AmbientLight(t.color);break;case"DirectionalLight":i=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":i=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":i=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":i=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var s=n[t.geometry];var o=r[t.material];if(s===undefined){console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry)}if(o===undefined){console.error("THREE.ObjectLoader: Undefined material "+t.material)}i=new THREE.Mesh(s,o);break;case"Sprite":var o=r[t.material];if(o===undefined){console.error("THREE.ObjectLoader: Undefined material "+t.material)}i=new THREE.Sprite(o);break;default:i=new THREE.Object3D}i.uuid=t.uuid;if(t.name!==undefined)i.name=t.name;if(t.matrix!==undefined){e.fromArray(t.matrix);e.decompose(i.position,i.quaternion,i.scale)}else{if(t.position!==undefined)i.position.fromArray(t.position);if(t.rotation!==undefined)i.rotation.fromArray(t.rotation);if(t.scale!==undefined)i.scale.fromArray(t.scale)}if(t.visible!==undefined)i.visible=t.visible;if(t.userData!==undefined)i.userData=t.userData;if(t.children!==undefined){for(var u in t.children){i.add(this.parseObject(t.children[u],n,r))}}return i}}()};THREE.TextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,n,r){var i=this;var s=new THREE.ImageLoader(i.manager);s.setCrossOrigin(this.crossOrigin);s.load(e,function(e){var n=new THREE.Texture(e);n.needsUpdate=true;if(t!==undefined){t(n)}},n,r)},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthTest=true;this.depthWrite=true;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=true;this.needsUpdate=true};THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(e===undefined)return;for(var t in e){var n=e[t];if(n===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t in this){var r=this[t];if(r instanceof THREE.Color){r.set(n)}else if(r instanceof THREE.Vector3&&n instanceof THREE.Vector3){r.copy(n)}else if(t=="overdraw"){this[t]=Number(n)}else{this[t]=n}}}},clone:function(e){if(e===undefined)e=new THREE.Material;e.name=this.name;e.side=this.side;e.opacity=this.opacity;e.transparent=this.transparent;e.blending=this.blending;e.blendSrc=this.blendSrc;e.blendDst=this.blendDst;e.blendEquation=this.blendEquation;e.depthTest=this.depthTest;e.depthWrite=this.depthWrite;e.polygonOffset=this.polygonOffset;e.polygonOffsetFactor=this.polygonOffsetFactor;e.polygonOffsetUnits=this.polygonOffsetUnits;e.alphaTest=this.alphaTest;e.overdraw=this.overdraw;e.visible=this.visible;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(e)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.linecap=this.linecap;e.linejoin=this.linejoin;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.LineDashedMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=false;this.fog=true;this.setValues(e)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.scale=this.scale;e.dashSize=this.dashSize;e.gapSize=this.gapSize;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.MeshBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(e)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.alphaMap=this.alphaMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;return e};THREE.MeshLambertMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.alphaMap=this.alphaMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshPhongMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=false;this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.specular.copy(this.specular);e.shininess=this.shininess;e.metal=this.metal;e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.bumpMap=this.bumpMap;e.bumpScale=this.bumpScale;e.normalMap=this.normalMap;e.normalScale.copy(this.normalScale);e.specularMap=this.specularMap;e.alphaMap=this.alphaMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshDepthMaterial=function(e){THREE.Material.call(this);this.morphTargets=false;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(e)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,e);e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.morphTargets=false;this.setValues(e)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,e);e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]};THREE.MeshFaceMaterial.prototype.clone=function(){var e=new THREE.MeshFaceMaterial;for(var t=0;t<this.materials.length;t++){e.materials.push(this.materials[t].clone())}return e};THREE.PointCloudMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(e)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.clone=function(){var e=new THREE.PointCloudMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.size=this.size;e.sizeAttenuation=this.sizeAttenuation;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.ParticleBasicMaterial=function(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(e)};THREE.ParticleSystemMaterial=function(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");return new THREE.PointCloudMaterial(e)};THREE.ShaderMaterial=function(e){THREE.Material.call(this);this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;this.setValues(e)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,e);e.fragmentShader=this.fragmentShader;e.vertexShader=this.vertexShader;e.uniforms=THREE.UniformsUtils.clone(this.uniforms);e.attributes=this.attributes;e.defines=this.defines;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.fog=this.fog;e.lights=this.lights;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;THREE.ShaderMaterial.prototype.clone.call(this,e);return e};THREE.SpriteMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=false;this.setValues(e)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.rotation=this.rotation;e.fog=this.fog;return e};THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(e,t){};this.setValues(e)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.program=this.program;return e};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(e,t,n,r,i,s,o,u,a){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=e!==undefined?e:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=t!==undefined?t:THREE.Texture.DEFAULT_MAPPING;this.wrapS=n!==undefined?n:THREE.ClampToEdgeWrapping;this.wrapT=r!==undefined?r:THREE.ClampToEdgeWrapping;this.magFilter=i!==undefined?i:THREE.LinearFilter;this.minFilter=s!==undefined?s:THREE.LinearMipMapLinearFilter;this.anisotropy=a!==undefined?a:1;this.format=o!==undefined?o:THREE.RGBAFormat;this.type=u!==undefined?u:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this._needsUpdate=false;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=undefined;THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){if(e===true)this.update();this._needsUpdate=e},clone:function(e){if(e===undefined)e=new THREE.Texture;e.image=this.image;e.mipmaps=this.mipmaps.slice(0);e.mapping=this.mapping;e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.format=this.format;e.type=this.type;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.generateMipmaps=this.generateMipmaps;e.premultiplyAlpha=this.premultiplyAlpha;e.flipY=this.flipY;e.unpackAlignment=this.unpackAlignment;return e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CubeTexture=function(e,t,n,r,i,s,o,u,a){THREE.Texture.call(this,e,t,n,r,i,s,o,u,a);this.images=e};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.clone=function(e){if(e===undefined)e=new THREE.CubeTexture;THREE.Texture.prototype.clone.call(this,e);e.images=this.images;return e};THREE.CompressedTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l);this.image={width:t,height:n};this.mipmaps=e;this.generateMipmaps=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.DataTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l);this.image={data:e,width:t,height:n}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.PointCloud=function(e,t){THREE.Object3D.call(this);this.geometry=e!==undefined?e:new THREE.Geometry;this.material=t!==undefined?t:new THREE.PointCloudMaterial({color:Math.random()*16777215});this.sortParticles=false};THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype);THREE.PointCloud.prototype.raycast=function(){var e=new THREE.Matrix4;var t=new THREE.Ray;return function(n,r){var i=this;var s=i.geometry;var o=n.params.PointCloud.threshold;e.getInverse(this.matrixWorld);t.copy(n.ray).applyMatrix4(e);if(s.boundingBox!==null){if(t.isIntersectionBox(s.boundingBox)===false){return}}var u=o/((this.scale.x+this.scale.y+this.scale.z)/3);var a=new THREE.Vector3;var f=function(e,s){var o=t.distanceToPoint(e);if(o<u){var a=t.closestPointToPoint(e);a.applyMatrix4(i.matrixWorld);var f=n.ray.origin.distanceTo(a);r.push({distance:f,distanceToRay:o,point:a.clone(),index:s,face:null,object:i})}};if(s instanceof THREE.BufferGeometry){var l=s.attributes;var c=l.position.array;if(l.index!==undefined){var h=l.index.array;var p=s.offsets;if(p.length===0){var d={start:0,count:h.length,index:0};p=[d]}for(var v=0,m=p.length;v<m;++v){var g=p[v].start;var y=p[v].count;var b=p[v].index;for(var w=g,E=g+y;w<E;w++){var S=b+h[w];a.set(c[S*3],c[S*3+1],c[S*3+2]);f(a,S)}}}else{var x=c.length/3;for(var w=0;w<x;w++){a.set(c[3*w],c[3*w+1],c[3*w+2]);f(a,w)}}}else{var T=this.geometry.vertices;for(var w=0;w<T.length;w++){f(T[w],w)}}}}();THREE.PointCloud.prototype.clone=function(e){if(e===undefined)e=new THREE.PointCloud(this.geometry,this.material);e.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,e);return e};THREE.ParticleSystem=function(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");return new THREE.PointCloud(e,t)};THREE.Line=function(e,t,n){THREE.Object3D.call(this);this.geometry=e!==undefined?e:new THREE.Geometry;this.material=t!==undefined?t:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=n!==undefined?n:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4;var t=new THREE.Ray;var n=new THREE.Sphere;return function(r,i){var s=r.linePrecision;var o=s*s;var u=this.geometry;if(u.boundingSphere===null)u.computeBoundingSphere();n.copy(u.boundingSphere);n.applyMatrix4(this.matrixWorld);if(r.ray.isIntersectionSphere(n)===false){return}e.getInverse(this.matrixWorld);t.copy(r.ray).applyMatrix4(e);if(u instanceof THREE.Geometry){var a=u.vertices;var f=a.length;var l=new THREE.Vector3;var c=new THREE.Vector3;var h=this.type===THREE.LineStrip?1:2;for(var p=0;p<f-1;p=p+h){var d=t.distanceSqToSegment(a[p],a[p+1],c,l);if(d>o)continue;var v=t.origin.distanceTo(c);if(v<r.near||v>r.far)continue;i.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}}();THREE.Line.prototype.clone=function(e){if(e===undefined)e=new THREE.Line(this.geometry,this.material,this.type);THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Mesh=function(e,t){THREE.Object3D.call(this);this.geometry=e!==undefined?e:new THREE.Geometry;this.material=t!==undefined?t:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){if(this.morphTargetDictionary[e]!==undefined){return this.morphTargetDictionary[e]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.raycast=function(){var e=new THREE.Matrix4;var t=new THREE.Ray;var n=new THREE.Sphere;var r=new THREE.Vector3;var i=new THREE.Vector3;var s=new THREE.Vector3;return function(o,u){var a=this.geometry;if(a.boundingSphere===null)a.computeBoundingSphere();n.copy(a.boundingSphere);n.applyMatrix4(this.matrixWorld);if(o.ray.isIntersectionSphere(n)===false){return}e.getInverse(this.matrixWorld);t.copy(o.ray).applyMatrix4(e);if(a.boundingBox!==null){if(t.isIntersectionBox(a.boundingBox)===false){return}}if(a instanceof THREE.BufferGeometry){var f=this.material;if(f===undefined)return;var l=a.attributes;var c,h,p;var d=o.precision;if(l.index!==undefined){var v=l.index.array;var m=l.position.array;var g=a.offsets;if(g.length===0){g=[{start:0,count:v.length,index:0}]}for(var y=0,b=g.length;y<b;++y){var w=g[y].start;var E=g[y].count;var S=g[y].index;for(var x=w,T=w+E;x<T;x+=3){c=S+v[x];h=S+v[x+1];p=S+v[x+2];r.set(m[c*3],m[c*3+1],m[c*3+2]);i.set(m[h*3],m[h*3+1],m[h*3+2]);s.set(m[p*3],m[p*3+1],m[p*3+2]);if(f.side===THREE.BackSide){var N=t.intersectTriangle(s,i,r,true)}else{var N=t.intersectTriangle(r,i,s,f.side!==THREE.DoubleSide)}if(N===null)continue;N.applyMatrix4(this.matrixWorld);var C=o.ray.origin.distanceTo(N);if(C<d||C<o.near||C>o.far)continue;u.push({distance:C,point:N,indices:[c,h,p],face:null,faceIndex:null,object:this})}}}else{var m=l.position.array;for(var x=0,k=0,T=m.length;x<T;x+=3,k+=9){c=x;h=x+1;p=x+2;r.set(m[k],m[k+1],m[k+2]);i.set(m[k+3],m[k+4],m[k+5]);s.set(m[k+6],m[k+7],m[k+8]);if(f.side===THREE.BackSide){var N=t.intersectTriangle(s,i,r,true)}else{var N=t.intersectTriangle(r,i,s,f.side!==THREE.DoubleSide)}if(N===null)continue;N.applyMatrix4(this.matrixWorld);var C=o.ray.origin.distanceTo(N);if(C<d||C<o.near||C>o.far)continue;u.push({distance:C,point:N,indices:[c,h,p],face:null,faceIndex:null,object:this})}}}else if(a instanceof THREE.Geometry){var L=this.material instanceof THREE.MeshFaceMaterial;var A=L===true?this.material.materials:null;var c,h,p,O;var d=o.precision;var M=a.vertices;for(var _=0,D=a.faces.length;_<D;_++){var P=a.faces[_];var f=L===true?A[P.materialIndex]:this.material;if(f===undefined)continue;c=M[P.a];h=M[P.b];p=M[P.c];if(f.morphTargets===true){var H=a.morphTargets;var B=this.morphTargetInfluences;r.set(0,0,0);i.set(0,0,0);s.set(0,0,0);for(var j=0,F=H.length;j<F;j++){var I=B[j];if(I===0)continue;var q=H[j].vertices;r.x+=(q[P.a].x-c.x)*I;r.y+=(q[P.a].y-c.y)*I;r.z+=(q[P.a].z-c.z)*I;i.x+=(q[P.b].x-h.x)*I;i.y+=(q[P.b].y-h.y)*I;i.z+=(q[P.b].z-h.z)*I;s.x+=(q[P.c].x-p.x)*I;s.y+=(q[P.c].y-p.y)*I;s.z+=(q[P.c].z-p.z)*I}r.add(c);i.add(h);s.add(p);c=r;h=i;p=s}if(f.side===THREE.BackSide){var N=t.intersectTriangle(p,h,c,true)}else{var N=t.intersectTriangle(c,h,p,f.side!==THREE.DoubleSide)}if(N===null)continue;N.applyMatrix4(this.matrixWorld);var C=o.ray.origin.distanceTo(N);if(C<d||C<o.near||C>o.far)continue;u.push({distance:C,point:N,face:P,faceIndex:_,object:this})}}}}();THREE.Mesh.prototype.clone=function(e,t){if(e===undefined)e=new THREE.Mesh(this.geometry,this.material);THREE.Object3D.prototype.clone.call(this,e,t);return e};THREE.Bone=function(e){THREE.Object3D.call(this);this.skin=e;this.accumulatedRotWeight=0;this.accumulatedPosWeight=0;this.accumulatedSclWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.updateMatrixWorld=function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);this.accumulatedRotWeight=0;this.accumulatedPosWeight=0;this.accumulatedSclWeight=0};THREE.Skeleton=function(e,t,n){this.useVertexTexture=n!==undefined?n:true;this.identityMatrix=new THREE.Matrix4;e=e||[];this.bones=e.slice(0);if(this.useVertexTexture){var r;if(this.bones.length>256)r=64;else if(this.bones.length>64)r=32;else if(this.bones.length>16)r=16;else r=8;this.boneTextureWidth=r;this.boneTextureHeight=r;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false}else{this.boneMatrices=new Float32Array(16*this.bones.length)}if(t===undefined){this.calculateInverses()}else{if(this.bones.length===t.length){this.boneInverses=t.slice(0)}else{console.warn("THREE.Skeleton bonInverses is the wrong length.");this.boneInverses=[];for(var i=0,s=this.bones.length;i<s;i++){this.boneInverses.push(new THREE.Matrix4)}}}};THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new THREE.Matrix4;if(this.bones[e]){n.getInverse(this.bones[e].matrixWorld)}this.boneInverses.push(n)}};THREE.Skeleton.prototype.pose=function(){var e;for(var t=0,n=this.bones.length;t<n;t++){e=this.bones[t];if(e){e.matrixWorld.getInverse(this.boneInverses[t])}}for(var t=0,n=this.bones.length;t<n;t++){e=this.bones[t];if(e){if(e.parent){e.matrix.getInverse(e.parent.matrixWorld);e.matrix.multiply(e.matrixWorld)}else{e.matrix.copy(e.matrixWorld)}e.matrix.decompose(e.position,e.quaternion,e.scale)}}};THREE.Skeleton.prototype.update=function(){var e=new THREE.Matrix4;for(var t=0,n=this.bones.length;t<n;t++){var r=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix;e.multiplyMatrices(r,this.boneInverses[t]);e.flattenToArrayOffset(this.boneMatrices,t*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}};THREE.SkinnedMesh=function(e,t,n){THREE.Mesh.call(this,e,t);this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;var r=[];if(this.geometry&&this.geometry.bones!==undefined){var i,s,o,u,a;for(var f=0,l=this.geometry.bones.length;f<l;++f){s=this.geometry.bones[f];o=s.pos;u=s.rotq;a=s.scl;i=new THREE.Bone(this);r.push(i);i.name=s.name;i.position.set(o[0],o[1],o[2]);i.quaternion.set(u[0],u[1],u[2],u[3]);if(a!==undefined){i.scale.set(a[0],a[1],a[2])}else{i.scale.set(1,1,1)}}for(var f=0,l=this.geometry.bones.length;f<l;++f){s=this.geometry.bones[f];if(s.parent!==-1){r[s.parent].add(r[f])}else{this.add(r[f])}}}this.normalizeSkinWeights();this.updateMatrixWorld(true);this.bind(new THREE.Skeleton(r,undefined,n))};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e;if(t===undefined){this.updateMatrixWorld(true);t=this.matrixWorld}this.bindMatrix.copy(t);this.bindMatrixInverse.getInverse(t)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e];var n=1/t.lengthManhattan();if(n!==Infinity){t.multiplyScalar(n)}else{t.set(1)}}}else{}};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,true);if(this.bindMode==="attached"){this.bindMatrixInverse.getInverse(this.matrixWorld)}else if(this.bindMode==="detached"){this.bindMatrixInverse.getInverse(this.bindMatrix)}else{console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)}};THREE.SkinnedMesh.prototype.clone=function(e){if(e===undefined){e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)}THREE.Mesh.prototype.clone.call(this,e);return e};THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t);this.duration=1e3;this.mirroredLoop=false;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e;this.endKeyframe=t;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;if(!e.animations)e.animations={};var t,n=e.animations;var r=/([a-z]+)_?(\d+)/;for(var i=0,s=e.morphTargets.length;i<s;i++){var o=e.morphTargets[i];var u=o.name.match(r);if(u&&u.length>1){var a=u[1];var f=u[2];if(!n[a])n[a]={start:Infinity,end:-Infinity};var l=n[a];if(i<l.start)l.start=i;if(i>l.end)l.end=i;if(!t)t=a}}e.firstAnimation=t};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,n){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[e]={start:t,end:n}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var n=this.geometry.animations[e];if(n){this.setFrameRange(n.start,n.end);this.duration=1e3*((n.end-n.start)/t);this.time=0}else{console.warn("animation["+e+"] undefined")}};THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true}if(this.time<0){this.time=0;this.directionBackwards=false}}}else{this.time=this.time%this.duration;if(this.time<0)this.time+=this.duration}var n=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);if(n!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[n]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=n}var r=this.time%t/t;if(this.directionBackwards){r=1-r}this.morphTargetInfluences[this.currentKeyframe]=r;this.morphTargetInfluences[this.lastKeyframe]=1-r};THREE.MorphAnimMesh.prototype.interpolateTargets=function(e,t,n){var r=this.morphTargetInfluences;for(var i=0,s=r.length;i<s;i++){r[i]=0}if(e>-1)r[e]=1-n;if(t>-1)r[t]=n};THREE.MorphAnimMesh.prototype.clone=function(e){if(e===undefined)e=new THREE.MorphAnimMesh(this.geometry,this.material);e.duration=this.duration;e.mirroredLoop=this.mirroredLoop;e.time=this.time;e.lastKeyframe=this.lastKeyframe;e.currentKeyframe=this.currentKeyframe;e.direction=this.direction;e.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,e);return e};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,t){if(t===undefined)t=0;t=Math.abs(t);for(var n=0;n<this.objects.length;n++){if(t<this.objects[n].distance){break}}this.objects.splice(n,0,{distance:t,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,n=this.objects.length;t<n;t++){if(e<this.objects[t].distance){break}}return this.objects[t-1].object};THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(t,n)}}();THREE.LOD.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(n){if(this.objects.length>1){e.setFromMatrixPosition(n.matrixWorld);t.setFromMatrixPosition(this.matrixWorld);var r=e.distanceTo(t);this.objects[0].object.visible=true;for(var i=1,s=this.objects.length;i<s;i++){if(r>=this.objects[i].distance){this.objects[i-1].object.visible=false;this.objects[i].object.visible=true}else{break}}for(;i<s;i++){this.objects[i].object.visible=false}}}}();THREE.LOD.prototype.clone=function(e){if(e===undefined)e=new THREE.LOD;THREE.Object3D.prototype.clone.call(this,e);for(var t=0,n=this.objects.length;t<n;t++){var r=this.objects[t].object.clone();r.visible=t===0;e.addLevel(r,this.objects[t].distance)}return e};THREE.Sprite=function(){var e=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]);var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(e,3));return function(e){THREE.Object3D.call(this);this.geometry=t;this.material=e!==undefined?e:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.distanceToPoint(e);if(r>this.scale.x){return}n.push({distance:r,point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true};THREE.Sprite.prototype.clone=function(e){if(e===undefined)e=new THREE.Sprite(this.material);THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;this.matrixAutoUpdate=false;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light){if(this.__lights.indexOf(e)===-1){this.__lights.push(e)}if(e.target&&e.target.parent===undefined){this.add(e.target)}}else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);if(t!==-1){this.__objectsRemoved.splice(t,1)}}this.dispatchEvent({type:"objectAdded",object:e});e.dispatchEvent({type:"addedToScene",scene:this});for(var n=0;n<e.children.length;n++){this.__addObject(e.children[n])}};THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);if(t!==-1){this.__lights.splice(t,1)}if(e.shadowCascadeArray){for(var n=0;n<e.shadowCascadeArray.length;n++){this.__removeObject(e.shadowCascadeArray[n])}}}else if(!(e instanceof THREE.Camera)){this.__objectsRemoved.push(e);var t=this.__objectsAdded.indexOf(e);if(t!==-1){this.__objectsAdded.splice(t,1)}}this.dispatchEvent({type:"objectRemoved",object:e});e.dispatchEvent({type:"removedFromScene",scene:this});for(var r=0;r<e.children.length;r++){this.__removeObject(e.children[r])}};THREE.Scene.prototype.clone=function(e){if(e===undefined)e=new THREE.Scene;THREE.Object3D.prototype.clone.call(this,e);if(this.fog!==null)e.fog=this.fog.clone();if(this.overrideMaterial!==null)e.overrideMaterial=this.overrideMaterial.clone();e.autoUpdate=this.autoUpdate;e.matrixAutoUpdate=this.matrixAutoUpdate;return e};THREE.Fog=function(e,t,n){this.name="";this.color=new THREE.Color(e);this.near=t!==undefined?t:1;this.far=n!==undefined?n:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(e,t){this.name="";this.color=new THREE.Color(e);this.density=t!==undefined?t:25e-5};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(e){function bt(){ht.setRGB(0,0,0);pt.setRGB(0,0,0);dt.setRGB(0,0,0);for(var e=0,t=s.length;e<t;e++){var n=s[e];var r=n.color;if(n instanceof THREE.AmbientLight){ht.add(r)}else if(n instanceof THREE.DirectionalLight){pt.add(r)}else if(n instanceof THREE.PointLight){dt.add(r)}}}function wt(e,t,n){for(var r=0,i=s.length;r<i;r++){var o=s[r];Z.copy(o.color);if(o instanceof THREE.DirectionalLight){var u=vt.setFromMatrixPosition(o.matrixWorld).normalize();var a=t.dot(u);if(a<=0)continue;a*=o.intensity;n.add(Z.multiplyScalar(a))}else if(o instanceof THREE.PointLight){var u=vt.setFromMatrixPosition(o.matrixWorld);var a=t.dot(vt.subVectors(u,e).normalize());if(a<=0)continue;a*=o.distance==0?1:1-Math.min(e.distanceTo(u)/o.distance,1);if(a==0)continue;a*=o.intensity;n.add(Z.multiplyScalar(a))}}}function Et(e,t,n){_t(n.opacity);Dt(n.blending);var r=t.scale.x*l;var i=t.scale.y*c;var s=.5*Math.sqrt(r*r+i*i);ct.min.set(e.x-s,e.y-s);ct.max.set(e.x+s,e.y+s);if(n instanceof THREE.SpriteMaterial){var o=n.map;if(o!==null&&o.image!==undefined){if(o.hasEventListener("update",kt)===false){if(o.image.width>0){Lt(o)}o.addEventListener("update",kt)}var u=et[o.id];if(u!==undefined){Ft(u)}else{Ft("rgba( 0, 0, 0, 1 )")}var a=o.image;var f=a.width*o.offset.x;var h=a.height*o.offset.y;var p=a.width*o.repeat.x;var d=a.height*o.repeat.y;var v=r/p;var g=i/d;m.save();m.translate(e.x,e.y);if(n.rotation!==0)m.rotate(n.rotation);m.translate(-r/2,-i/2);m.scale(v,g);m.translate(-f,-h);m.fillRect(f,h,p,d);m.restore()}else{Ft(n.color.getStyle());m.save();m.translate(e.x,e.y);if(n.rotation!==0)m.rotate(n.rotation);m.scale(r,-i);m.fillRect(-.5,-.5,1,1);m.restore()}}else if(n instanceof THREE.SpriteCanvasMaterial){jt(n.color.getStyle());Ft(n.color.getStyle());m.save();m.translate(e.x,e.y);if(n.rotation!==0)m.rotate(n.rotation);m.scale(r,i);n.program(m);m.restore()}}function St(e,t,n,r){_t(r.opacity);Dt(r.blending);m.beginPath();m.moveTo(e.positionScreen.x,e.positionScreen.y);m.lineTo(t.positionScreen.x,t.positionScreen.y);if(r instanceof THREE.LineBasicMaterial){Pt(r.linewidth);Ht(r.linecap);Bt(r.linejoin);if(r.vertexColors!==THREE.VertexColors){jt(r.color.getStyle())}else{var i=n.vertexColors[0].getStyle();var s=n.vertexColors[1].getStyle();if(i===s){jt(i)}else{try{var o=m.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);o.addColorStop(0,i);o.addColorStop(1,s)}catch(u){o=i}jt(o)}}m.stroke();ct.expandByScalar(r.linewidth*2)}else if(r instanceof THREE.LineDashedMaterial){Pt(r.linewidth);Ht(r.linecap);Bt(r.linejoin);jt(r.color.getStyle());It([r.dashSize,r.gapSize]);m.stroke();ct.expandByScalar(r.linewidth*2);It([])}}function xt(e,r,i,s,o,u,a,f){n.info.render.vertices+=3;n.info.render.faces++;_t(f.opacity);Dt(f.blending);P=e.positionScreen.x;H=e.positionScreen.y;B=r.positionScreen.x;j=r.positionScreen.y;F=i.positionScreen.x;I=i.positionScreen.y;Tt(P,H,B,j,F,I);if((f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)&&f.map===null){G.copy(f.color);Y.copy(f.emissive);if(f.vertexColors===THREE.FaceColors){G.multiply(a.color)}V.copy(ht);mt.copy(e.positionWorld).add(r.positionWorld).add(i.positionWorld).divideScalar(3);wt(mt,a.normalModel,V);V.multiply(G).add(Y);f.wireframe===true?Nt(V,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):Ct(V)}else if(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial){if(f.map!==null){if(f.map.mapping instanceof THREE.UVMapping){nt=a.uvs;At(P,H,B,j,F,I,nt[s].x,nt[s].y,nt[o].x,nt[o].y,nt[u].x,nt[u].y,f.map)}}else if(f.envMap!==null){if(f.envMap.mapping instanceof THREE.SphericalReflectionMapping){gt.copy(a.vertexNormalsModel[s]).applyMatrix3(yt);rt=.5*gt.x+.5;it=.5*gt.y+.5;gt.copy(a.vertexNormalsModel[o]).applyMatrix3(yt);st=.5*gt.x+.5;ot=.5*gt.y+.5;gt.copy(a.vertexNormalsModel[u]).applyMatrix3(yt);ut=.5*gt.x+.5;at=.5*gt.y+.5;At(P,H,B,j,F,I,rt,it,st,ot,ut,at,f.envMap)}else if(f.envMap.mapping instanceof THREE.SphericalRefractionMapping){gt.copy(a.vertexNormalsModel[s]).applyMatrix3(yt);rt=-.5*gt.x+.5;it=-.5*gt.y+.5;gt.copy(a.vertexNormalsModel[o]).applyMatrix3(yt);st=-.5*gt.x+.5;ot=-.5*gt.y+.5;gt.copy(a.vertexNormalsModel[u]).applyMatrix3(yt);ut=-.5*gt.x+.5;at=-.5*gt.y+.5;At(P,H,B,j,F,I,rt,it,st,ot,ut,at,f.envMap)}}else{V.copy(f.color);if(f.vertexColors===THREE.FaceColors){V.multiply(a.color)}f.wireframe===true?Nt(V,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):Ct(V)}}else if(f instanceof THREE.MeshDepthMaterial){V.r=V.g=V.b=1-t(e.positionScreen.z*e.positionScreen.w,k.near,k.far);f.wireframe===true?Nt(V,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):Ct(V)}else if(f instanceof THREE.MeshNormalMaterial){gt.copy(a.normalModel).applyMatrix3(yt);V.setRGB(gt.x,gt.y,gt.z).multiplyScalar(.5).addScalar(.5);f.wireframe===true?Nt(V,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):Ct(V)}else{V.setRGB(1,1,1);f.wireframe===true?Nt(V,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):Ct(V)}}function Tt(e,t,n,r,i,s){m.beginPath();m.moveTo(e,t);m.lineTo(n,r);m.lineTo(i,s);m.closePath()}function Nt(e,t,n,r){Pt(t);Ht(n);Bt(r);jt(e.getStyle());m.stroke();ct.expandByScalar(t*2)}function Ct(e){Ft(e.getStyle());m.fill()}function kt(e){Lt(e.target)}function Lt(e){if(e instanceof THREE.CompressedTexture)return;var t=e.wrapS===THREE.RepeatWrapping;var n=e.wrapT===THREE.RepeatWrapping;var r=e.image;var i=document.createElement("canvas");i.width=r.width;i.height=r.height;var s=i.getContext("2d");s.setTransform(1,0,0,-1,0,r.height);s.drawImage(r,0,0);et[e.id]=m.createPattern(i,t===true&&n===true?"repeat":t===true&&n===false?"repeat-x":t===false&&n===true?"repeat-y":"no-repeat")}function At(e,t,n,r,i,s,o,u,a,f,l,c,h){if(h instanceof THREE.DataTexture)return;if(h.hasEventListener("update",kt)===false){if(h.image!==undefined&&h.image.width>0){Lt(h)}h.addEventListener("update",kt)}var p=et[h.id];if(p!==undefined){Ft(p)}else{Ft("rgba(0,0,0,1)");m.fill();return}var d,v,g,y,b,w,E,S,x=h.offset.x/h.repeat.x,T=h.offset.y/h.repeat.y,N=h.image.width*h.repeat.x,C=h.image.height*h.repeat.y;o=(o+x)*N;u=(u+T)*C;a=(a+x)*N;f=(f+T)*C;l=(l+x)*N;c=(c+T)*C;n-=e;r-=t;i-=e;s-=t;a-=o;f-=u;l-=o;c-=u;E=a*c-l*f;if(E===0)return;S=1/E;d=(c*n-f*i)*S;v=(c*r-f*s)*S;g=(a*i-l*n)*S;y=(a*s-l*r)*S;b=e-d*o-g*u;w=t-v*o-y*u;m.save();m.transform(d,v,g,y,b,w);m.fill();m.restore()}function Ot(e,t,n,r,i,s,o,u,a,f,l,c,h){var p,d,v,g,y,b,w,E,S=h.width-1,x=h.height-1;o*=S;u*=x;a*=S;f*=x;l*=S;c*=x;n-=e;r-=t;i-=e;s-=t;a-=o;f-=u;l-=o;c-=u;w=a*c-l*f;E=1/w;p=(c*n-f*i)*E;d=(c*r-f*s)*E;v=(a*i-l*n)*E;g=(a*s-l*r)*E;y=e-p*o-v*u;b=t-d*o-g*u;m.save();m.transform(p,d,v,g,y,b);m.clip();m.drawImage(h,0,0);m.restore()}function Mt(e,t,n){var r=t.x-e.x,i=t.y-e.y,s=r*r+i*i,o;if(s===0)return;o=n/Math.sqrt(s);r*=o;i*=o;t.x+=r;t.y+=i;e.x-=r;e.y-=i}function _t(e){if(b!==e){m.globalAlpha=e;b=e}}function Dt(e){if(w!==e){if(e===THREE.NormalBlending){m.globalCompositeOperation="source-over"}else if(e===THREE.AdditiveBlending){m.globalCompositeOperation="lighter"}else if(e===THREE.SubtractiveBlending){m.globalCompositeOperation="darker"}w=e}}function Pt(e){if(x!==e){m.lineWidth=e;x=e}}function Ht(e){if(T!==e){m.lineCap=e;T=e}}function Bt(e){if(N!==e){m.lineJoin=e;N=e}}function jt(e){if(E!==e){m.strokeStyle=e;E=e}}function Ft(e){if(S!==e){m.fillStyle=e;S=e}}function It(e){if(C.length!==e.length){m.setLineDash(e);C=e}}console.log("THREE.CanvasRenderer",THREE.REVISION);var t=THREE.Math.smoothstep;e=e||{};var n=this,r,i,s,o=new THREE.Projector,u=e.canvas!==undefined?e.canvas:document.createElement("canvas"),a=u.width,f=u.height,l=Math.floor(a/2),c=Math.floor(f/2),h=0,p=0,d=a,v=f,m=u.getContext("2d",{alpha:e.alpha===true}),g=new THREE.Color(0),y=0,b=1,w=0,E=null,S=null,x=null,T=null,N=null,C=[],k,L,A,O,M,_=new THREE.RenderableVertex,D=new THREE.RenderableVertex,P,H,B,j,F,I,q,R,U,z,W,X,V=new THREE.Color,$=new THREE.Color,J=new THREE.Color,K=new THREE.Color,Q=new THREE.Color,G=new THREE.Color,Y=new THREE.Color,Z=new THREE.Color,et={},tt,nt,rt,it,st,ot,ut,at,ft=new THREE.Box2,lt=new THREE.Box2,ct=new THREE.Box2,ht=new THREE.Color,pt=new THREE.Color,dt=new THREE.Color,vt=new THREE.Vector3,mt=new THREE.Vector3,gt=new THREE.Vector3,yt=new THREE.Matrix3;if(m.setLineDash===undefined){m.setLineDash=function(){}}this.domElement=u;this.devicePixelRatio=e.devicePixelRatio!==undefined?e.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,t,n){a=e*this.devicePixelRatio;f=t*this.devicePixelRatio;u.width=a;u.height=f;l=Math.floor(a/2);c=Math.floor(f/2);if(n!==false){u.style.width=e+"px";u.style.height=t+"px"}ft.min.set(-l,-c),ft.max.set(l,c);lt.min.set(-l,-c);lt.max.set(l,c);b=1;w=0;E=null;S=null;x=null;T=null;N=null;this.setViewport(0,0,e,t)};this.setViewport=function(e,t,n,r){h=e*this.devicePixelRatio;p=t*this.devicePixelRatio;d=n*this.devicePixelRatio;v=r*this.devicePixelRatio};this.setScissor=function(){};this.enableScissorTest=function(){};this.setClearColor=function(e,t){g.set(e);y=t!==undefined?t:1;lt.min.set(-l,-c);lt.max.set(l,c)};this.setClearColorHex=function(e,t){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getClearColor=function(){return g};this.getClearAlpha=function(){return y};this.getMaxAnisotropy=function(){return 0};this.clear=function(){if(lt.empty()===false){lt.intersect(ft);lt.expandByScalar(2);lt.min.x=lt.min.x+l;lt.min.y=-lt.min.y+c;lt.max.x=lt.max.x+l;lt.max.y=-lt.max.y+c;if(y<1){m.clearRect(lt.min.x|0,lt.min.y|0,lt.max.x-lt.min.x|0,lt.max.y-lt.min.y|0)}if(y>0){Dt(THREE.NormalBlending);_t(1);Ft("rgba("+Math.floor(g.r*255)+","+Math.floor(g.g*255)+","+Math.floor(g.b*255)+","+y+")");m.fillRect(lt.min.x|0,lt.min.y|0,lt.max.x-lt.min.x|0,lt.max.y-lt.min.y|0)}lt.makeEmpty()}};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(e,t){if(t instanceof THREE.Camera===false){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");return}if(this.autoClear===true)this.clear();n.info.render.vertices=0;n.info.render.faces=0;m.setTransform(d/a,0,0,-v/f,h,f-p);m.translate(l,c);r=o.projectScene(e,t,this.sortObjects,this.sortElements);i=r.elements;s=r.lights;k=t;yt.getNormalMatrix(t.matrixWorldInverse);bt();for(var u=0,g=i.length;u<g;u++){var y=i[u];var b=y.material;if(b===undefined||b.opacity===0)continue;ct.makeEmpty();if(y instanceof THREE.RenderableSprite){L=y;L.x*=l;L.y*=c;Et(L,y,b)}else if(y instanceof THREE.RenderableLine){L=y.v1;A=y.v2;L.positionScreen.x*=l;L.positionScreen.y*=c;A.positionScreen.x*=l;A.positionScreen.y*=c;ct.setFromPoints([L.positionScreen,A.positionScreen]);if(ft.isIntersectionBox(ct)===true){St(L,A,y,b)}}else if(y instanceof THREE.RenderableFace){L=y.v1;A=y.v2;O=y.v3;if(L.positionScreen.z<-1||L.positionScreen.z>1)continue;if(A.positionScreen.z<-1||A.positionScreen.z>1)continue;if(O.positionScreen.z<-1||O.positionScreen.z>1)continue;L.positionScreen.x*=l;L.positionScreen.y*=c;A.positionScreen.x*=l;A.positionScreen.y*=c;O.positionScreen.x*=l;O.positionScreen.y*=c;if(b.overdraw>0){Mt(L.positionScreen,A.positionScreen,b.overdraw);Mt(A.positionScreen,O.positionScreen,b.overdraw);Mt(O.positionScreen,L.positionScreen,b.overdraw)}ct.setFromPoints([L.positionScreen,A.positionScreen,O.positionScreen]);if(ft.isIntersectionBox(ct)===true){xt(L,A,O,0,1,2,y,b)}}lt.union(ct)}m.setTransform(1,0,0,1,0,0)}};THREE.ShaderChunk={};THREE.ShaderChunk["alphatest_fragment"]="#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk["lights_lambert_vertex"]="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";THREE.ShaderChunk["map_particle_pars_fragment"]="#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";THREE.ShaderChunk["default_vertex"]="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n	mvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;";THREE.ShaderChunk["map_pars_fragment"]="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";THREE.ShaderChunk["skinnormal_vertex"]="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n";THREE.ShaderChunk["logdepthbuf_pars_vertex"]="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk["lightmap_pars_vertex"]="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif";THREE.ShaderChunk["lights_phong_fragment"]="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";THREE.ShaderChunk["fog_pars_fragment"]="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif";THREE.ShaderChunk["morphnormal_vertex"]="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif";THREE.ShaderChunk["envmap_pars_fragment"]="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		uniform bool useRefract;\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif";THREE.ShaderChunk["logdepthbuf_fragment"]="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk["normalmap_pars_fragment"]="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n";THREE.ShaderChunk["lights_phong_pars_vertex"]="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk["lightmap_pars_fragment"]="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk["shadowmap_vertex"]="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif";THREE.ShaderChunk["lights_phong_vertex"]="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk["map_fragment"]="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif";THREE.ShaderChunk["lightmap_vertex"]="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif";THREE.ShaderChunk["map_particle_fragment"]="#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";THREE.ShaderChunk["color_pars_fragment"]="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk["color_vertex"]="#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif";THREE.ShaderChunk["skinning_vertex"]="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk["envmap_pars_vertex"]="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n	uniform bool useRefract;\n\n#endif\n";THREE.ShaderChunk["linear_to_gamma_fragment"]="#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";THREE.ShaderChunk["color_pars_vertex"]="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif";THREE.ShaderChunk["lights_lambert_pars_vertex"]="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n";THREE.ShaderChunk["map_pars_vertex"]="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk["envmap_fragment"]="#ifdef USE_ENVMAP\n\n	vec3 reflectVec;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		if ( useRefract ) {\n\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		} else { \n\n			reflectVec = reflect( cameraToVertex, worldNormal );\n\n		}\n\n	#else\n\n		reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#else\n\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		cubeColor.xyz *= cubeColor.xyz;\n\n	#endif\n\n	if ( combine == 1 ) {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n	} else if ( combine == 2 ) {\n\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n	} else {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n	}\n\n#endif";THREE.ShaderChunk["specularmap_pars_fragment"]="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk["logdepthbuf_vertex"]="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif";THREE.ShaderChunk["morphtarget_pars_vertex"]="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif";THREE.ShaderChunk["specularmap_fragment"]="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif";THREE.ShaderChunk["fog_fragment"]="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";THREE.ShaderChunk["bumpmap_pars_fragment"]="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif";THREE.ShaderChunk["defaultnormal_vertex"]="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n	objectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n	objectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n	objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;";THREE.ShaderChunk["lights_phong_pars_fragment"]="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";THREE.ShaderChunk["skinbase_vertex"]="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk["map_vertex"]="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";THREE.ShaderChunk["lightmap_fragment"]="#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";THREE.ShaderChunk["shadowmap_pars_vertex"]="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk["color_fragment"]="#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";THREE.ShaderChunk["morphtarget_vertex"]="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif";THREE.ShaderChunk["envmap_vertex"]="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	if ( useRefract ) {\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	} else {\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	}\n\n#endif";THREE.ShaderChunk["shadowmap_fragment"]="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";THREE.ShaderChunk["worldpos_vertex"]="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#endif\n\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#endif\n\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif";THREE.ShaderChunk["shadowmap_pars_fragment"]="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif";THREE.ShaderChunk["skinning_pars_vertex"]="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n";THREE.ShaderChunk["logdepthbuf_pars_fragment"]="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif";THREE.ShaderChunk["alphamap_fragment"]="#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk["alphamap_pars_fragment"]="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n";THREE.UniformsUtils={merge:function(e){var t,n,r,i={};for(t=0;t<e.length;t++){r=this.clone(e[t]);for(n in r){i[n]=r[n]}}return i},clone:function(e){var t,n,r,i,s={};for(t in e){s[t]={};for(n in e[t]){i=e[t][n];if(i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture){s[t][n]=i.clone()}else if(i instanceof Array){s[t][n]=i.slice()}else{s[t][n]=i}}}return s}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],THREE.UniformsLib["shadowmap"]]),vertexShader:[THREE.ShaderChunk["map_pars_vertex"],THREE.ShaderChunk["lightmap_pars_vertex"],THREE.ShaderChunk["envmap_pars_vertex"],THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["map_vertex"],THREE.ShaderChunk["lightmap_vertex"],THREE.ShaderChunk["color_vertex"],THREE.ShaderChunk["skinbase_vertex"],"	#ifdef USE_ENVMAP",THREE.ShaderChunk["morphnormal_vertex"],THREE.ShaderChunk["skinnormal_vertex"],THREE.ShaderChunk["defaultnormal_vertex"],"	#endif",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["logdepthbuf_vertex"],THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["envmap_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_pars_fragment"],THREE.ShaderChunk["alphamap_pars_fragment"],THREE.ShaderChunk["lightmap_pars_fragment"],THREE.ShaderChunk["envmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["specularmap_pars_fragment"],THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk["logdepthbuf_fragment"],THREE.ShaderChunk["map_fragment"],THREE.ShaderChunk["alphamap_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["specularmap_fragment"],THREE.ShaderChunk["lightmap_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["envmap_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],THREE.UniformsLib["shadowmap"],{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk["map_pars_vertex"],THREE.ShaderChunk["lightmap_pars_vertex"],THREE.ShaderChunk["envmap_pars_vertex"],THREE.ShaderChunk["lights_lambert_pars_vertex"],THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["map_vertex"],THREE.ShaderChunk["lightmap_vertex"],THREE.ShaderChunk["color_vertex"],THREE.ShaderChunk["morphnormal_vertex"],THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["skinnormal_vertex"],THREE.ShaderChunk["defaultnormal_vertex"],THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["logdepthbuf_vertex"],THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["envmap_vertex"],THREE.ShaderChunk["lights_lambert_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_pars_fragment"],THREE.ShaderChunk["alphamap_pars_fragment"],THREE.ShaderChunk["lightmap_pars_fragment"],THREE.ShaderChunk["envmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["specularmap_pars_fragment"],THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk["logdepthbuf_fragment"],THREE.ShaderChunk["map_fragment"],THREE.ShaderChunk["alphamap_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["specularmap_fragment"],"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			gl_FragColor.xyz *= vLightFront;","		else","			gl_FragColor.xyz *= vLightBack;","	#else","		gl_FragColor.xyz *= vLightFront;","	#endif",THREE.ShaderChunk["lightmap_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["envmap_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["bump"],THREE.UniformsLib["normalmap"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],THREE.UniformsLib["shadowmap"],{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk["map_pars_vertex"],THREE.ShaderChunk["lightmap_pars_vertex"],THREE.ShaderChunk["envmap_pars_vertex"],THREE.ShaderChunk["lights_phong_pars_vertex"],THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["map_vertex"],THREE.ShaderChunk["lightmap_vertex"],THREE.ShaderChunk["color_vertex"],THREE.ShaderChunk["morphnormal_vertex"],THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["skinnormal_vertex"],THREE.ShaderChunk["defaultnormal_vertex"],"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["logdepthbuf_vertex"],"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["envmap_vertex"],THREE.ShaderChunk["lights_phong_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_pars_fragment"],THREE.ShaderChunk["alphamap_pars_fragment"],THREE.ShaderChunk["lightmap_pars_fragment"],THREE.ShaderChunk["envmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["lights_phong_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["bumpmap_pars_fragment"],THREE.ShaderChunk["normalmap_pars_fragment"],THREE.ShaderChunk["specularmap_pars_fragment"],THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk["logdepthbuf_fragment"],THREE.ShaderChunk["map_fragment"],THREE.ShaderChunk["alphamap_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["specularmap_fragment"],THREE.ShaderChunk["lights_phong_fragment"],THREE.ShaderChunk["lightmap_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["envmap_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["particle"],THREE.UniformsLib["shadowmap"]]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["color_vertex"],"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk["logdepthbuf_vertex"],THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_particle_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk["logdepthbuf_fragment"],THREE.ShaderChunk["map_particle_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["color_vertex"],"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk["logdepthbuf_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk["logdepthbuf_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["logdepthbuf_vertex"],"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {",THREE.ShaderChunk["logdepthbuf_fragment"],"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["logdepthbuf_vertex"],"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk["logdepthbuf_fragment"],"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],THREE.UniformsLib["shadowmap"],{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","	uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {",THREE.ShaderChunk["logdepthbuf_fragment"],"	gl_FragColor = vec4( vec3( 1.0 ), opacity );","	vec3 specularTex = vec3( 1.0 );","	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","	normalTex.xy *= uNormalScale;","	normalTex = normalize( normalTex );","	if( enableDiffuse ) {","		#ifdef GAMMA_INPUT","			vec4 texelColor = texture2D( tDiffuse, vUv );","			texelColor.xyz *= texelColor.xyz;","			gl_FragColor = gl_FragColor * texelColor;","		#else","			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","		#endif","	}","	if( enableAO ) {","		#ifdef GAMMA_INPUT","			vec4 aoColor = texture2D( tAO, vUv );","			aoColor.xyz *= aoColor.xyz;","			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","		#else","			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","		#endif","	}",THREE.ShaderChunk["alphatest_fragment"],"	if( enableSpecular )","		specularTex = texture2D( tSpecular, vUv ).xyz;","	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","	vec3 finalNormal = tsb * normalTex;","	#ifdef FLIP_SIDED","		finalNormal = -finalNormal;","	#endif","	vec3 normal = normalize( finalNormal );","	vec3 viewPosition = normalize( vViewPosition );","	#if MAX_POINT_LIGHTS > 0","		vec3 pointDiffuse = vec3( 0.0 );","		vec3 pointSpecular = vec3( 0.0 );","		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","			float pointDistance = 1.0;","			if ( pointLightDistance[ i ] > 0.0 )","				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","			pointVector = normalize( pointVector );","			#ifdef WRAP_AROUND","				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","			#else","				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","			#endif","			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","			vec3 pointHalfVector = normalize( pointVector + viewPosition );","			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );","			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","		}","	#endif","	#if MAX_SPOT_LIGHTS > 0","		vec3 spotDiffuse = vec3( 0.0 );","		vec3 spotSpecular = vec3( 0.0 );","		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","			float spotDistance = 1.0;","			if ( spotLightDistance[ i ] > 0.0 )","				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","			spotVector = normalize( spotVector );","			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","			if ( spotEffect > spotLightAngleCos[ i ] ) {","				spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );","				#ifdef WRAP_AROUND","					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","				#else","					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","				#endif","				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","				vec3 spotHalfVector = normalize( spotVector + viewPosition );","				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","				float specularNormalization = ( shininess + 2.0 ) / 8.0;","				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );","				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","			}","		}","	#endif","	#if MAX_DIR_LIGHTS > 0","		vec3 dirDiffuse = vec3( 0.0 );","		vec3 dirSpecular = vec3( 0.0 );","		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","			vec3 dirVector = normalize( lDirection.xyz );","			#ifdef WRAP_AROUND","				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","			#else","				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","			#endif","			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","			vec3 dirHalfVector = normalize( dirVector + viewPosition );","			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );","			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","		}","	#endif","	#if MAX_HEMI_LIGHTS > 0","		vec3 hemiDiffuse = vec3( 0.0 );","		vec3 hemiSpecular = vec3( 0.0 );","		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","			vec3 lVector = normalize( lDirection.xyz );","			float dotProduct = dot( normal, lVector );","			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","			hemiDiffuse += diffuse * hemiColor;","			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","			float hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );","			vec3 lVectorGround = -lVector;","			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","			float hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );","			float dotProductGround = dot( normal, lVectorGround );","			float specularNormalization = ( shininess + 2.0 ) / 8.0;","			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );","			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );","			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","		}","	#endif","	vec3 totalDiffuse = vec3( 0.0 );","	vec3 totalSpecular = vec3( 0.0 );","	#if MAX_DIR_LIGHTS > 0","		totalDiffuse += dirDiffuse;","		totalSpecular += dirSpecular;","	#endif","	#if MAX_HEMI_LIGHTS > 0","		totalDiffuse += hemiDiffuse;","		totalSpecular += hemiSpecular;","	#endif","	#if MAX_POINT_LIGHTS > 0","		totalDiffuse += pointDiffuse;","		totalSpecular += pointSpecular;","	#endif","	#if MAX_SPOT_LIGHTS > 0","		totalDiffuse += spotDiffuse;","		totalSpecular += spotSpecular;","	#endif","	#ifdef METAL","		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","	#else","		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","	#endif","	if ( enableReflection ) {","		vec3 vReflect;","		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","		if ( useRefract ) {","			vReflect = refract( cameraToVertex, normal, refractionRatio );","		} else {","			vReflect = reflect( cameraToVertex, normal );","		}","		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","		#ifdef GAMMA_INPUT","			cubeColor.xyz *= cubeColor.xyz;","		#endif","		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","	}",THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","	uniform sampler2D tDisplacement;","	uniform float uDisplacementScale;","	uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["skinnormal_vertex"],"	#ifdef USE_SKINNING","		vNormal = normalize( normalMatrix * skinnedNormal.xyz );","		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","		vTangent = normalize( normalMatrix * skinnedTangent.xyz );","	#else","		vNormal = normalize( normalMatrix * normal );","		vTangent = normalize( normalMatrix * tangent.xyz );","	#endif","	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","	vUv = uv * uRepeat + uOffset;","	vec3 displacedPosition;","	#ifdef VERTEX_TEXTURES","		if ( enableDisplacement ) {","			vec3 dv = texture2D( tDisplacement, uv ).xyz;","			float df = uDisplacementScale * dv.x + uDisplacementBias;","			displacedPosition = position + normalize( normal ) * df;","		} else {","			#ifdef USE_SKINNING","				vec4 skinVertex = bindMatrix * vec4( position, 1.0 );","				vec4 skinned = vec4( 0.0 );","				skinned += boneMatX * skinVertex * skinWeight.x;","				skinned += boneMatY * skinVertex * skinWeight.y;","				skinned += boneMatZ * skinVertex * skinWeight.z;","				skinned += boneMatW * skinVertex * skinWeight.w;","				skinned  = bindMatrixInverse * skinned;","				displacedPosition = skinned.xyz;","			#else","				displacedPosition = position;","			#endif","		}","	#else","		#ifdef USE_SKINNING","			vec4 skinVertex = bindMatrix * vec4( position, 1.0 );","			vec4 skinned = vec4( 0.0 );","			skinned += boneMatX * skinVertex * skinWeight.x;","			skinned += boneMatY * skinVertex * skinWeight.y;","			skinned += boneMatZ * skinVertex * skinWeight.z;","			skinned += boneMatW * skinVertex * skinWeight.w;","			skinned  = bindMatrixInverse * skinned;","			displacedPosition = skinned.xyz;","		#else","			displacedPosition = position;","		#endif","	#endif","	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk["logdepthbuf_vertex"],"	vWorldPosition = worldPosition.xyz;","	vViewPosition = -mvPosition.xyz;","	#ifdef USE_SHADOWMAP","		for( int i = 0; i < MAX_SHADOWS; i ++ ) {","			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","		}","	#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk["logdepthbuf_vertex"],"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk["logdepthbuf_pars_fragment"],"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk["logdepthbuf_fragment"],"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["logdepthbuf_pars_vertex"],"void main() {",THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["logdepthbuf_vertex"],"}"].join("\n"),fragmentShader:[THREE.ShaderChunk["logdepthbuf_pars_fragment"],"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk["logdepthbuf_fragment"],"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}};THREE.WebGLRenderer=function(e){function wt(e){e.__webglVertexBuffer=Q.createBuffer();e.__webglColorBuffer=Q.createBuffer();v.info.memory.geometries++}function Et(e){e.__webglVertexBuffer=Q.createBuffer();e.__webglColorBuffer=Q.createBuffer();e.__webglLineDistanceBuffer=Q.createBuffer();v.info.memory.geometries++}function St(e){e.__webglVertexBuffer=Q.createBuffer();e.__webglNormalBuffer=Q.createBuffer();e.__webglTangentBuffer=Q.createBuffer();e.__webglColorBuffer=Q.createBuffer();e.__webglUVBuffer=Q.createBuffer();e.__webglUV2Buffer=Q.createBuffer();e.__webglSkinIndicesBuffer=Q.createBuffer();e.__webglSkinWeightsBuffer=Q.createBuffer();e.__webglFaceBuffer=Q.createBuffer();e.__webglLineBuffer=Q.createBuffer();var t,n;if(e.numMorphTargets){e.__webglMorphTargetsBuffers=[];for(t=0,n=e.numMorphTargets;t<n;t++){e.__webglMorphTargetsBuffers.push(Q.createBuffer())}}if(e.numMorphNormals){e.__webglMorphNormalsBuffers=[];for(t=0,n=e.numMorphNormals;t<n;t++){e.__webglMorphNormalsBuffers.push(Q.createBuffer())}}v.info.memory.geometries++}function _t(e,t){var n=e.vertices.length;var r=t.material;if(r.attributes){if(e.__webglCustomAttributesList===undefined){e.__webglCustomAttributesList=[]}for(var i in r.attributes){var s=r.attributes[i];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=true;var o=1;if(s.type==="v2")o=2;else if(s.type==="v3")o=3;else if(s.type==="v4")o=4;else if(s.type==="c")o=3;s.size=o;s.array=new Float32Array(n*o);s.buffer=Q.createBuffer();s.buffer.belongsToAttribute=i;s.needsUpdate=true}e.__webglCustomAttributesList.push(s)}}}function Dt(e,t){var n=e.vertices.length;e.__vertexArray=new Float32Array(n*3);e.__colorArray=new Float32Array(n*3);e.__sortArray=[];e.__webglParticleCount=n;_t(e,t)}function Pt(e,t){var n=e.vertices.length;e.__vertexArray=new Float32Array(n*3);e.__colorArray=new Float32Array(n*3);e.__lineDistanceArray=new Float32Array(n*1);e.__webglLineCount=n;_t(e,t)}function Ht(e,t){var n=t.geometry,r=e.faces3,i=r.length*3,s=r.length*1,o=r.length*3,u=Bt(t,e),a=qt(u),f=Ft(u),l=It(u);e.__vertexArray=new Float32Array(i*3);if(f){e.__normalArray=new Float32Array(i*3)}if(n.hasTangents){e.__tangentArray=new Float32Array(i*4)}if(l){e.__colorArray=new Float32Array(i*3)}if(a){if(n.faceVertexUvs.length>0){e.__uvArray=new Float32Array(i*2)}if(n.faceVertexUvs.length>1){e.__uv2Array=new Float32Array(i*2)}}if(t.geometry.skinWeights.length&&t.geometry.skinIndices.length){e.__skinIndexArray=new Float32Array(i*4);e.__skinWeightArray=new Float32Array(i*4)}var c=nt!==null&&s>21845?Uint32Array:Uint16Array;e.__typeArray=c;e.__faceArray=new c(s*3);e.__lineArray=new c(o*2);var h,p;if(e.numMorphTargets){e.__morphTargetsArrays=[];for(h=0,p=e.numMorphTargets;h<p;h++){e.__morphTargetsArrays.push(new Float32Array(i*3))}}if(e.numMorphNormals){e.__morphNormalsArrays=[];for(h=0,p=e.numMorphNormals;h<p;h++){e.__morphNormalsArrays.push(new Float32Array(i*3))}}e.__webglFaceCount=s*3;e.__webglLineCount=o*2;if(u.attributes){if(e.__webglCustomAttributesList===undefined){e.__webglCustomAttributesList=[]}for(var d in u.attributes){var v=u.attributes[d];var m={};for(var g in v){m[g]=v[g]}if(!m.__webglInitialized||m.createUniqueBuffers){m.__webglInitialized=true;var y=1;if(m.type==="v2")y=2;else if(m.type==="v3")y=3;else if(m.type==="v4")y=4;else if(m.type==="c")y=3;m.size=y;m.array=new Float32Array(i*y);m.buffer=Q.createBuffer();m.buffer.belongsToAttribute=d;v.needsUpdate=true;m.__original=v}e.__webglCustomAttributesList.push(m)}}e.__inittedArrays=true}function Bt(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function jt(e){return e&&e.shading!==undefined&&e.shading===THREE.SmoothShading}function Ft(e){if(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial){return false}if(jt(e)){return THREE.SmoothShading}else{return THREE.FlatShading}}function It(e){if(e.vertexColors){return e.vertexColors}return false}function qt(e){if(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e instanceof THREE.ShaderMaterial){return true}return false}function Rt(e){for(var t in e.attributes){var n=t==="index"?Q.ELEMENT_ARRAY_BUFFER:Q.ARRAY_BUFFER;var r=e.attributes[t];r.buffer=Q.createBuffer();Q.bindBuffer(n,r.buffer);Q.bufferData(n,r.array,Q.STATIC_DRAW)}}function Ut(e,t,n){var r,i,s,o,u,a,f=e.vertices,l=f.length,c=e.colors,h=c.length,p=e.__vertexArray,d=e.__colorArray,v=e.__sortArray,m=e.verticesNeedUpdate,g=e.elementsNeedUpdate,y=e.colorsNeedUpdate,b=e.__webglCustomAttributesList,w,E,S,x,T,N,C;if(n.sortParticles){X.copy(W);X.multiply(n.matrixWorld);for(r=0;r<l;r++){s=f[r];V.copy(s);V.applyProjection(X);v[r]=[V.z,r]}v.sort(Zt);for(r=0;r<l;r++){s=f[v[r][1]];o=r*3;p[o]=s.x;p[o+1]=s.y;p[o+2]=s.z}for(i=0;i<h;i++){o=i*3;a=c[v[i][1]];d[o]=a.r;d[o+1]=a.g;d[o+2]=a.b}if(b){for(w=0,E=b.length;w<E;w++){C=b[w];if(!(C.boundTo===undefined||C.boundTo==="vertices"))continue;o=0;T=C.value.length;if(C.size===1){for(x=0;x<T;x++){u=v[x][1];C.array[x]=C.value[u]}}else if(C.size===2){for(x=0;x<T;x++){u=v[x][1];N=C.value[u];C.array[o]=N.x;C.array[o+1]=N.y;o+=2}}else if(C.size===3){if(C.type==="c"){for(x=0;x<T;x++){u=v[x][1];N=C.value[u];C.array[o]=N.r;C.array[o+1]=N.g;C.array[o+2]=N.b;o+=3}}else{for(x=0;x<T;x++){u=v[x][1];N=C.value[u];C.array[o]=N.x;C.array[o+1]=N.y;C.array[o+2]=N.z;o+=3}}}else if(C.size===4){for(x=0;x<T;x++){u=v[x][1];N=C.value[u];C.array[o]=N.x;C.array[o+1]=N.y;C.array[o+2]=N.z;C.array[o+3]=N.w;o+=4}}}}}else{if(m){for(r=0;r<l;r++){s=f[r];o=r*3;p[o]=s.x;p[o+1]=s.y;p[o+2]=s.z}}if(y){for(i=0;i<h;i++){a=c[i];o=i*3;d[o]=a.r;d[o+1]=a.g;d[o+2]=a.b}}if(b){for(w=0,E=b.length;w<E;w++){C=b[w];if(C.needsUpdate&&(C.boundTo===undefined||C.boundTo==="vertices")){T=C.value.length;o=0;if(C.size===1){for(x=0;x<T;x++){C.array[x]=C.value[x]}}else if(C.size===2){for(x=0;x<T;x++){N=C.value[x];C.array[o]=N.x;C.array[o+1]=N.y;o+=2}}else if(C.size===3){if(C.type==="c"){for(x=0;x<T;x++){N=C.value[x];C.array[o]=N.r;C.array[o+1]=N.g;C.array[o+2]=N.b;o+=3}}else{for(x=0;x<T;x++){N=C.value[x];C.array[o]=N.x;C.array[o+1]=N.y;C.array[o+2]=N.z;o+=3}}}else if(C.size===4){for(x=0;x<T;x++){N=C.value[x];C.array[o]=N.x;C.array[o+1]=N.y;C.array[o+2]=N.z;C.array[o+3]=N.w;o+=4}}}}}}if(m||n.sortParticles){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglVertexBuffer);Q.bufferData(Q.ARRAY_BUFFER,p,t)}if(y||n.sortParticles){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglColorBuffer);Q.bufferData(Q.ARRAY_BUFFER,d,t)}if(b){for(w=0,E=b.length;w<E;w++){C=b[w];if(C.needsUpdate||n.sortParticles){Q.bindBuffer(Q.ARRAY_BUFFER,C.buffer);Q.bufferData(Q.ARRAY_BUFFER,C.array,t)}}}}function zt(e,t){var n,r,i,s,o,u,a=e.vertices,f=e.colors,l=e.lineDistances,c=a.length,h=f.length,p=l.length,d=e.__vertexArray,v=e.__colorArray,m=e.__lineDistanceArray,g=e.verticesNeedUpdate,y=e.colorsNeedUpdate,b=e.lineDistancesNeedUpdate,w=e.__webglCustomAttributesList,E,S,x,T,N,C,k;if(g){for(n=0;n<c;n++){s=a[n];o=n*3;d[o]=s.x;d[o+1]=s.y;d[o+2]=s.z}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglVertexBuffer);Q.bufferData(Q.ARRAY_BUFFER,d,t)}if(y){for(r=0;r<h;r++){u=f[r];o=r*3;v[o]=u.r;v[o+1]=u.g;v[o+2]=u.b}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglColorBuffer);Q.bufferData(Q.ARRAY_BUFFER,v,t)}if(b){for(i=0;i<p;i++){m[i]=l[i]}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglLineDistanceBuffer);Q.bufferData(Q.ARRAY_BUFFER,m,t)}if(w){for(E=0,S=w.length;E<S;E++){k=w[E];if(k.needsUpdate&&(k.boundTo===undefined||k.boundTo==="vertices")){o=0;N=k.value.length;if(k.size===1){for(T=0;T<N;T++){k.array[T]=k.value[T]}}else if(k.size===2){for(T=0;T<N;T++){C=k.value[T];k.array[o]=C.x;k.array[o+1]=C.y;o+=2}}else if(k.size===3){if(k.type==="c"){for(T=0;T<N;T++){C=k.value[T];k.array[o]=C.r;k.array[o+1]=C.g;k.array[o+2]=C.b;o+=3}}else{for(T=0;T<N;T++){C=k.value[T];k.array[o]=C.x;k.array[o+1]=C.y;k.array[o+2]=C.z;o+=3}}}else if(k.size===4){for(T=0;T<N;T++){C=k.value[T];k.array[o]=C.x;k.array[o+1]=C.y;k.array[o+2]=C.z;k.array[o+3]=C.w;o+=4}}Q.bindBuffer(Q.ARRAY_BUFFER,k.buffer);Q.bufferData(Q.ARRAY_BUFFER,k.array,t)}}}}function Wt(e,t,n,r,i){if(!e.__inittedArrays){return}var s=Ft(i),o=It(i),u=qt(i),a=s===THREE.SmoothShading;var f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H,B,j,F,I,q,R,U,z,W,X,V,$,J,K,G,Y,Z,et,tt,nt,rt,it,st,ot,ut,at,ft,lt,ct,ht,pt=0,dt=0,vt=0,mt=0,gt=0,yt=0,bt=0,wt=0,Et=0,St=0,xt=0,Tt=0,Nt=0,Ct,kt=e.__vertexArray,Lt=e.__uvArray,At=e.__uv2Array,Ot=e.__normalArray,Mt=e.__tangentArray,_t=e.__colorArray,Dt=e.__skinIndexArray,Pt=e.__skinWeightArray,Ht=e.__morphTargetsArrays,Bt=e.__morphNormalsArrays,jt=e.__webglCustomAttributesList,Rt,Ut=e.__faceArray,zt=e.__lineArray,Wt=t.geometry,Xt=Wt.verticesNeedUpdate,Vt=Wt.elementsNeedUpdate,$t=Wt.uvsNeedUpdate,Jt=Wt.normalsNeedUpdate,Kt=Wt.tangentsNeedUpdate,Qt=Wt.colorsNeedUpdate,Gt=Wt.morphTargetsNeedUpdate,Yt=Wt.vertices,Zt=e.faces3,en=Wt.faces,tn=Wt.faceVertexUvs[0],nn=Wt.faceVertexUvs[1],rn=Wt.colors,sn=Wt.skinIndices,on=Wt.skinWeights,un=Wt.morphTargets,an=Wt.morphNormals;if(Xt){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];E=Yt[h.a];S=Yt[h.b];x=Yt[h.c];kt[dt]=E.x;kt[dt+1]=E.y;kt[dt+2]=E.z;kt[dt+3]=S.x;kt[dt+4]=S.y;kt[dt+5]=S.z;kt[dt+6]=x.x;kt[dt+7]=x.y;kt[dt+8]=x.z;dt+=9}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglVertexBuffer);Q.bufferData(Q.ARRAY_BUFFER,kt,n)}if(Gt){for(ot=0,ut=un.length;ot<ut;ot++){xt=0;for(f=0,l=Zt.length;f<l;f++){lt=Zt[f];h=en[lt];E=un[ot].vertices[h.a];S=un[ot].vertices[h.b];x=un[ot].vertices[h.c];at=Ht[ot];at[xt]=E.x;at[xt+1]=E.y;at[xt+2]=E.z;at[xt+3]=S.x;at[xt+4]=S.y;at[xt+5]=S.z;at[xt+6]=x.x;at[xt+7]=x.y;at[xt+8]=x.z;if(i.morphNormals){if(a){ct=an[ot].vertexNormals[lt];A=ct.a;O=ct.b;M=ct.c}else{A=an[ot].faceNormals[lt];O=A;M=A}ft=Bt[ot];ft[xt]=A.x;ft[xt+1]=A.y;ft[xt+2]=A.z;ft[xt+3]=O.x;ft[xt+4]=O.y;ft[xt+5]=O.z;ft[xt+6]=M.x;ft[xt+7]=M.y;ft[xt+8]=M.z}xt+=9}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[ot]);Q.bufferData(Q.ARRAY_BUFFER,Ht[ot],n);if(i.morphNormals){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[ot]);Q.bufferData(Q.ARRAY_BUFFER,Bt[ot],n)}}}if(on.length){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];B=on[h.a];j=on[h.b];F=on[h.c];Pt[St]=B.x;Pt[St+1]=B.y;Pt[St+2]=B.z;Pt[St+3]=B.w;Pt[St+4]=j.x;Pt[St+5]=j.y;Pt[St+6]=j.z;Pt[St+7]=j.w;Pt[St+8]=F.x;Pt[St+9]=F.y;Pt[St+10]=F.z;Pt[St+11]=F.w;q=sn[h.a];R=sn[h.b];U=sn[h.c];Dt[St]=q.x;Dt[St+1]=q.y;Dt[St+2]=q.z;Dt[St+3]=q.w;Dt[St+4]=R.x;Dt[St+5]=R.y;Dt[St+6]=R.z;Dt[St+7]=R.w;Dt[St+8]=U.x;Dt[St+9]=U.y;Dt[St+10]=U.z;Dt[St+11]=U.w;St+=12}if(St>0){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglSkinIndicesBuffer);Q.bufferData(Q.ARRAY_BUFFER,Dt,n);Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglSkinWeightsBuffer);Q.bufferData(Q.ARRAY_BUFFER,Pt,n)}}if(Qt&&o){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];m=h.vertexColors;g=h.color;if(m.length===3&&o===THREE.VertexColors){D=m[0];P=m[1];H=m[2]}else{D=g;P=g;H=g}_t[Et]=D.r;_t[Et+1]=D.g;_t[Et+2]=D.b;_t[Et+3]=P.r;_t[Et+4]=P.g;_t[Et+5]=P.b;_t[Et+6]=H.r;_t[Et+7]=H.g;_t[Et+8]=H.b;Et+=9}if(Et>0){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglColorBuffer);Q.bufferData(Q.ARRAY_BUFFER,_t,n)}}if(Kt&&Wt.hasTangents){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];y=h.vertexTangents;N=y[0];C=y[1];k=y[2];Mt[bt]=N.x;Mt[bt+1]=N.y;Mt[bt+2]=N.z;Mt[bt+3]=N.w;Mt[bt+4]=C.x;Mt[bt+5]=C.y;Mt[bt+6]=C.z;Mt[bt+7]=C.w;Mt[bt+8]=k.x;Mt[bt+9]=k.y;Mt[bt+10]=k.z;Mt[bt+11]=k.w;bt+=12}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglTangentBuffer);Q.bufferData(Q.ARRAY_BUFFER,Mt,n)}if(Jt&&s){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];p=h.vertexNormals;d=h.normal;if(p.length===3&&a){for(tt=0;tt<3;tt++){rt=p[tt];Ot[yt]=rt.x;Ot[yt+1]=rt.y;Ot[yt+2]=rt.z;yt+=3}}else{for(tt=0;tt<3;tt++){Ot[yt]=d.x;Ot[yt+1]=d.y;Ot[yt+2]=d.z;yt+=3}}}Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglNormalBuffer);Q.bufferData(Q.ARRAY_BUFFER,Ot,n)}if($t&&tn&&u){for(f=0,l=Zt.length;f<l;f++){c=Zt[f];b=tn[c];if(b===undefined)continue;for(tt=0;tt<3;tt++){it=b[tt];Lt[vt]=it.x;Lt[vt+1]=it.y;vt+=2}}if(vt>0){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglUVBuffer);Q.bufferData(Q.ARRAY_BUFFER,Lt,n)}}if($t&&nn&&u){for(f=0,l=Zt.length;f<l;f++){c=Zt[f];w=nn[c];if(w===undefined)continue;for(tt=0;tt<3;tt++){st=w[tt];At[mt]=st.x;At[mt+1]=st.y;mt+=2}}if(mt>0){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglUV2Buffer);Q.bufferData(Q.ARRAY_BUFFER,At,n)}}if(Vt){for(f=0,l=Zt.length;f<l;f++){Ut[gt]=pt;Ut[gt+1]=pt+1;Ut[gt+2]=pt+2;gt+=3;zt[wt]=pt;zt[wt+1]=pt+1;zt[wt+2]=pt;zt[wt+3]=pt+2;zt[wt+4]=pt+1;zt[wt+5]=pt+2;wt+=6;pt+=3}Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer);Q.bufferData(Q.ELEMENT_ARRAY_BUFFER,Ut,n);Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer);Q.bufferData(Q.ELEMENT_ARRAY_BUFFER,zt,n)}if(jt){for(tt=0,nt=jt.length;tt<nt;tt++){Rt=jt[tt];if(!Rt.__original.needsUpdate)continue;Tt=0;Nt=0;if(Rt.size===1){if(Rt.boundTo===undefined||Rt.boundTo==="vertices"){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];Rt.array[Tt]=Rt.value[h.a];Rt.array[Tt+1]=Rt.value[h.b];Rt.array[Tt+2]=Rt.value[h.c];Tt+=3}}else if(Rt.boundTo==="faces"){for(f=0,l=Zt.length;f<l;f++){Ct=Rt.value[Zt[f]];Rt.array[Tt]=Ct;Rt.array[Tt+1]=Ct;Rt.array[Tt+2]=Ct;Tt+=3}}}else if(Rt.size===2){if(Rt.boundTo===undefined||Rt.boundTo==="vertices"){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];E=Rt.value[h.a];S=Rt.value[h.b];x=Rt.value[h.c];Rt.array[Tt]=E.x;Rt.array[Tt+1]=E.y;Rt.array[Tt+2]=S.x;Rt.array[Tt+3]=S.y;Rt.array[Tt+4]=x.x;Rt.array[Tt+5]=x.y;Tt+=6}}else if(Rt.boundTo==="faces"){for(f=0,l=Zt.length;f<l;f++){Ct=Rt.value[Zt[f]];E=Ct;S=Ct;x=Ct;Rt.array[Tt]=E.x;Rt.array[Tt+1]=E.y;Rt.array[Tt+2]=S.x;Rt.array[Tt+3]=S.y;Rt.array[Tt+4]=x.x;Rt.array[Tt+5]=x.y;Tt+=6}}}else if(Rt.size===3){var fn;if(Rt.type==="c"){fn=["r","g","b"]}else{fn=["x","y","z"]}if(Rt.boundTo===undefined||Rt.boundTo==="vertices"){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];E=Rt.value[h.a];S=Rt.value[h.b];x=Rt.value[h.c];Rt.array[Tt]=E[fn[0]];Rt.array[Tt+1]=E[fn[1]];Rt.array[Tt+2]=E[fn[2]];Rt.array[Tt+3]=S[fn[0]];Rt.array[Tt+4]=S[fn[1]];Rt.array[Tt+5]=S[fn[2]];Rt.array[Tt+6]=x[fn[0]];Rt.array[Tt+7]=x[fn[1]];Rt.array[Tt+8]=x[fn[2]];Tt+=9}}else if(Rt.boundTo==="faces"){for(f=0,l=Zt.length;f<l;f++){Ct=Rt.value[Zt[f]];E=Ct;S=Ct;x=Ct;Rt.array[Tt]=E[fn[0]];Rt.array[Tt+1]=E[fn[1]];Rt.array[Tt+2]=E[fn[2]];Rt.array[Tt+3]=S[fn[0]];Rt.array[Tt+4]=S[fn[1]];Rt.array[Tt+5]=S[fn[2]];Rt.array[Tt+6]=x[fn[0]];Rt.array[Tt+7]=x[fn[1]];Rt.array[Tt+8]=x[fn[2]];Tt+=9}}else if(Rt.boundTo==="faceVertices"){for(f=0,l=Zt.length;f<l;f++){Ct=Rt.value[Zt[f]];E=Ct[0];S=Ct[1];x=Ct[2];Rt.array[Tt]=E[fn[0]];Rt.array[Tt+1]=E[fn[1]];Rt.array[Tt+2]=E[fn[2]];Rt.array[Tt+3]=S[fn[0]];Rt.array[Tt+4]=S[fn[1]];Rt.array[Tt+5]=S[fn[2]];Rt.array[Tt+6]=x[fn[0]];Rt.array[Tt+7]=x[fn[1]];Rt.array[Tt+8]=x[fn[2]];Tt+=9}}}else if(Rt.size===4){if(Rt.boundTo===undefined||Rt.boundTo==="vertices"){for(f=0,l=Zt.length;f<l;f++){h=en[Zt[f]];E=Rt.value[h.a];S=Rt.value[h.b];x=Rt.value[h.c];Rt.array[Tt]=E.x;Rt.array[Tt+1]=E.y;Rt.array[Tt+2]=E.z;Rt.array[Tt+3]=E.w;Rt.array[Tt+4]=S.x;Rt.array[Tt+5]=S.y;Rt.array[Tt+6]=S.z;Rt.array[Tt+7]=S.w;Rt.array[Tt+8]=x.x;Rt.array[Tt+9]=x.y;Rt.array[Tt+10]=x.z;Rt.array[Tt+11]=x.w;Tt+=12}}else if(Rt.boundTo==="faces"){for(f=0,l=Zt.length;f<l;f++){Ct=Rt.value[Zt[f]];E=Ct;S=Ct;x=Ct;Rt.array[Tt]=E.x;Rt.array[Tt+1]=E.y;Rt.array[Tt+2]=E.z;Rt.array[Tt+3]=E.w;Rt.array[Tt+4]=S.x;Rt.array[Tt+5]=S.y;Rt.array[Tt+6]=S.z;Rt.array[Tt+7]=S.w;Rt.array[Tt+8]=x.x;Rt.array[Tt+9]=x.y;Rt.array[Tt+10]=x.z;Rt.array[Tt+11]=x.w;Tt+=12}}else if(Rt.boundTo==="faceVertices"){for(f=0,l=Zt.length;f<l;f++){Ct=Rt.value[Zt[f]];E=Ct[0];S=Ct[1];x=Ct[2];Rt.array[Tt]=E.x;Rt.array[Tt+1]=E.y;Rt.array[Tt+2]=E.z;Rt.array[Tt+3]=E.w;Rt.array[Tt+4]=S.x;Rt.array[Tt+5]=S.y;Rt.array[Tt+6]=S.z;Rt.array[Tt+7]=S.w;Rt.array[Tt+8]=x.x;Rt.array[Tt+9]=x.y;Rt.array[Tt+10]=x.z;Rt.array[Tt+11]=x.w;Tt+=12}}}Q.bindBuffer(Q.ARRAY_BUFFER,Rt.buffer);Q.bufferData(Q.ARRAY_BUFFER,Rt.array,n)}}if(r){delete e.__inittedArrays;delete e.__colorArray;delete e.__normalArray;delete e.__tangentArray;delete e.__uvArray;delete e.__uv2Array;delete e.__faceArray;delete e.__vertexArray;delete e.__lineArray;delete e.__skinIndexArray;delete e.__skinWeightArray}}function Xt(e,t){var n=e.attributes;var r,i;for(r in n){i=n[r];if(i.needsUpdate){if(r==="index"){Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,i.buffer);Q.bufferData(Q.ELEMENT_ARRAY_BUFFER,i.array,t)}else{Q.bindBuffer(Q.ARRAY_BUFFER,i.buffer);Q.bufferData(Q.ARRAY_BUFFER,i.array,t)}i.needsUpdate=false}}}function Vt(e,t,n,r){for(var i in t){var s=t[i];var o=n[i];if(s>=0){if(o){var u=o.itemSize;Q.bindBuffer(Q.ARRAY_BUFFER,o.buffer);Jt(s);Q.vertexAttribPointer(s,u,Q.FLOAT,false,0,r*u*4)}else if(e.defaultAttributeValues){if(e.defaultAttributeValues[i].length===2){Q.vertexAttrib2fv(s,e.defaultAttributeValues[i])}else if(e.defaultAttributeValues[i].length===3){Q.vertexAttrib3fv(s,e.defaultAttributeValues[i])}}}}Kt()}function $t(){for(var e=0,t=R.length;e<t;e++){R[e]=0}}function Jt(e){R[e]=1;if(U[e]===0){Q.enableVertexAttribArray(e);U[e]=1}}function Kt(){for(var e=0,t=U.length;e<t;e++){if(U[e]!==R[e]){Q.disableVertexAttribArray(e);U[e]=0}}}function Qt(e,t,n){var r=e.program.attributes;if(n.morphTargetBase!==-1&&r.position>=0){Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[n.morphTargetBase]);Jt(r.position);Q.vertexAttribPointer(r.position,3,Q.FLOAT,false,0,0)}else if(r.position>=0){Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglVertexBuffer);Jt(r.position);Q.vertexAttribPointer(r.position,3,Q.FLOAT,false,0,0)}if(n.morphTargetForcedOrder.length){var i=0;var s=n.morphTargetForcedOrder;var o=n.morphTargetInfluences;while(i<e.numSupportedMorphTargets&&i<s.length){if(r["morphTarget"+i]>=0){Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[s[i]]);Jt(r["morphTarget"+i]);Q.vertexAttribPointer(r["morphTarget"+i],3,Q.FLOAT,false,0,0)}if(r["morphNormal"+i]>=0&&e.morphNormals){Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[s[i]]);Jt(r["morphNormal"+i]);Q.vertexAttribPointer(r["morphNormal"+i],3,Q.FLOAT,false,0,0)}n.__webglMorphTargetInfluences[i]=o[s[i]];i++}}else{var u,a=[];var o=n.morphTargetInfluences;var f,l=o.length;for(f=0;f<l;f++){u=o[f];if(u>0){a.push([u,f])}}if(a.length>e.numSupportedMorphTargets){a.sort(Zt);a.length=e.numSupportedMorphTargets}else if(a.length>e.numSupportedMorphNormals){a.sort(Zt)}else if(a.length===0){a.push([0,0])}var c,i=0;while(i<e.numSupportedMorphTargets){if(a[i]){c=a[i][1];if(r["morphTarget"+i]>=0){Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[c]);Jt(r["morphTarget"+i]);Q.vertexAttribPointer(r["morphTarget"+i],3,Q.FLOAT,false,0,0)}if(r["morphNormal"+i]>=0&&e.morphNormals){Q.bindBuffer(Q.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[c]);Jt(r["morphNormal"+i]);Q.vertexAttribPointer(r["morphNormal"+i],3,Q.FLOAT,false,0,0)}n.__webglMorphTargetInfluences[i]=o[c]}else{n.__webglMorphTargetInfluences[i]=0}i++}}if(e.program.uniforms.morphTargetInfluences!==null){Q.uniform1fv(e.program.uniforms.morphTargetInfluences,n.__webglMorphTargetInfluences)}}function Gt(e,t){if(e.z!==t.z){return t.z-e.z}else{return e.id-t.id}}function Yt(e,t){if(e.z!==t.z){return e.z-t.z}else{return e.id-t.id}}function Zt(e,t){return t[0]-e[0]}function en(e,t,n){if(t.visible===false)return;var r=e.__webglObjects[t.id];if(r&&(t.frustumCulled===false||z.intersectsObject(t)===true)){hn(e,t);for(var i=0,s=r.length;i<s;i++){var o=r[i];on(o);o.render=true;if(v.sortObjects===true){if(t.renderDepth!==null){o.z=t.renderDepth}else{V.setFromMatrixPosition(t.matrixWorld);V.applyProjection(W);o.z=V.z}}}}for(var i=0,s=t.children.length;i<s;i++){en(e,t.children[i],n)}}function tn(e,t,n){if(e.length===0)return;for(var r=0,i=e.length;r<i;r++){g=null;E=null;N=-1;A=-1;O=-1;x=-1;T=-1;w=-1;b=-1;J=true;e[r].render(t,n,I,q);g=null;E=null;N=-1;A=-1;O=-1;x=-1;T=-1;w=-1;b=-1;J=true}}function nn(e,t,n,r,i,s){var o,u,a,f;for(var l=e.length-1;l!==-1;l--){o=e[l];u=o.object;a=o.buffer;_n(u,t);if(s){f=s}else{f=o.material;if(!f)continue;if(i)v.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst);v.setDepthTest(f.depthTest);v.setDepthWrite(f.depthWrite);jn(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits)}v.setMaterialFaces(f);if(a instanceof THREE.BufferGeometry){v.renderBufferDirect(t,n,r,f,a,u)}else{v.renderBuffer(t,n,r,f,a,u)}}}function rn(e,t,n,r,i,s,o){var u,a,f,l;for(var c=0,h=e.length;c<h;c++){u=e[c];a=u.object;if(a.visible){if(o){f=o}else{f=u[t];if(!f)continue;if(s)v.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst);v.setDepthTest(f.depthTest);v.setDepthWrite(f.depthWrite);jn(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits)}v.renderImmediateObject(n,r,i,f,a)}}}function sn(e){var t=e.object,n=t.material;if(n.transparent){e.transparent=n;e.opaque=null}else{e.opaque=n;e.transparent=null}}function on(e){var t=e.object;var n=e.buffer;var r=t.geometry;var i=t.material;if(i instanceof THREE.MeshFaceMaterial){var s=r instanceof THREE.BufferGeometry?0:n.materialIndex;i=i.materials[s];if(i.transparent){e.material=i;d.push(e)}else{e.material=i;p.push(e)}}else{if(i){if(i.transparent){e.material=i;d.push(e)}else{e.material=i;p.push(e)}}}}function an(e,t){var n,r,i;if(e.__webglInit===undefined){e.__webglInit=true;e._modelViewMatrix=new THREE.Matrix4;e._normalMatrix=new THREE.Matrix3}r=e.geometry;if(r===undefined){}else if(r.__webglInit===undefined){r.__webglInit=true;r.addEventListener("dispose",xt);if(r instanceof THREE.BufferGeometry){Rt(r)}else if(e instanceof THREE.Mesh){if(e.__webglActive!==undefined){vn(e,t)}fn(t,e,r)}else if(e instanceof THREE.Line){if(!r.__webglVertexBuffer){Et(r);Pt(r,e);r.verticesNeedUpdate=true;r.colorsNeedUpdate=true;r.lineDistancesNeedUpdate=true}}else if(e instanceof THREE.PointCloud){if(!r.__webglVertexBuffer){wt(r);Dt(r,e);r.verticesNeedUpdate=true;r.colorsNeedUpdate=true}}}if(e.__webglActive===undefined){if(e instanceof THREE.Mesh){r=e.geometry;if(r instanceof THREE.BufferGeometry){ln(t.__webglObjects,r,e)}else if(r instanceof THREE.Geometry){for(var s=0,o=r.geometryGroupsList.length;s<o;s++){i=r.geometryGroupsList[s];ln(t.__webglObjects,i,e)}}}else if(e instanceof THREE.Line||e instanceof THREE.PointCloud){r=e.geometry;ln(t.__webglObjects,r,e)}else if(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback){cn(t.__webglObjectsImmediate,e)}e.__webglActive=true}}function fn(e,t,n){var r,i,s,o=false;s=t.material;if(n.geometryGroups===undefined||n.groupsNeedUpdate){delete e.__webglObjects[t.id];n.makeGroups(s instanceof THREE.MeshFaceMaterial,nt?4294967296:65535);n.groupsNeedUpdate=false}for(var u=0,a=n.geometryGroupsList.length;u<a;u++){i=n.geometryGroupsList[u];if(!i.__webglVertexBuffer){St(i);Ht(i,t);n.verticesNeedUpdate=true;n.morphTargetsNeedUpdate=true;n.elementsNeedUpdate=true;n.uvsNeedUpdate=true;n.normalsNeedUpdate=true;n.tangentsNeedUpdate=true;n.colorsNeedUpdate=true;o=true}else{o=false}if(o||t.__webglActive===undefined){ln(e.__webglObjects,i,t)}}t.__webglActive=true}function ln(e,t,n){var r=n.id;e[r]=e[r]||[];e[r].push({id:r,buffer:t,object:n,material:null,z:0})}function cn(e,t){e.push({id:null,object:t,opaque:null,transparent:null,z:0})}function hn(e,t){var n=t.geometry,r,i,s;if(n instanceof THREE.BufferGeometry){Xt(n,Q.DYNAMIC_DRAW)}else if(t instanceof THREE.Mesh){if(n.buffersNeedUpdate||n.groupsNeedUpdate){if(n instanceof THREE.BufferGeometry){Rt(n)}else if(t instanceof THREE.Mesh){fn(e,t,n)}}for(var o=0,u=n.geometryGroupsList.length;o<u;o++){r=n.geometryGroupsList[o];s=Bt(t,r);if(n.buffersNeedUpdate||n.groupsNeedUpdate){Ht(r,t)}i=s.attributes&&pn(s);if(n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||i){Wt(r,t,Q.DYNAMIC_DRAW,!n.dynamic,s)}}n.verticesNeedUpdate=false;n.morphTargetsNeedUpdate=false;n.elementsNeedUpdate=false;n.uvsNeedUpdate=false;n.normalsNeedUpdate=false;n.colorsNeedUpdate=false;n.tangentsNeedUpdate=false;n.buffersNeedUpdate=false;s.attributes&&dn(s)}else if(t instanceof THREE.Line){s=Bt(t,n);i=s.attributes&&pn(s);if(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||i){zt(n,Q.DYNAMIC_DRAW)}n.verticesNeedUpdate=false;n.colorsNeedUpdate=false;n.lineDistancesNeedUpdate=false;s.attributes&&dn(s)}else if(t instanceof THREE.PointCloud){s=Bt(t,n);i=s.attributes&&pn(s);if(n.verticesNeedUpdate||n.colorsNeedUpdate||t.sortParticles||i){Ut(n,Q.DYNAMIC_DRAW,t)}n.verticesNeedUpdate=false;n.colorsNeedUpdate=false;s.attributes&&dn(s)}}function pn(e){for(var t in e.attributes){if(e.attributes[t].needsUpdate)return true}return false}function dn(e){for(var t in e.attributes){e.attributes[t].needsUpdate=false}}function vn(e,t){if(e instanceof THREE.Mesh||e instanceof THREE.PointCloud||e instanceof THREE.Line){mn(t.__webglObjects,e)}else if(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback){gn(t.__webglObjectsImmediate,e)}delete e.__webglActive}function mn(e,t){delete e[t.id]}function gn(e,t){for(var n=e.length-1;n>=0;n--){if(e[n].object===t){e.splice(n,1)}}}function yn(e,t,n,r,i){S=0;if(r.needsUpdate){if(r.program)Mt(r);v.initMaterial(r,t,n,i);r.needsUpdate=false}if(r.morphTargets){if(!i.__webglMorphTargetInfluences){i.__webglMorphTargetInfluences=new Float32Array(v.maxMorphTargets)}}var s=false;var o=false;var u=false;var a=r.program,f=a.uniforms,c=r.__webglShader.uniforms;if(a.id!==g){Q.useProgram(a.program);g=a.id;s=true;o=true;u=true}if(r.id!==b){if(b===-1)u=true;b=r.id;o=true}if(s||e!==E){Q.uniformMatrix4fv(f.projectionMatrix,false,e.projectionMatrix.elements);if(l){Q.uniform1f(f.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2))}if(e!==E)E=e;if(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap){if(f.cameraPosition!==null){V.setFromMatrixPosition(e.matrixWorld);Q.uniform3f(f.cameraPosition,V.x,V.y,V.z)}}if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning){if(f.viewMatrix!==null){Q.uniformMatrix4fv(f.viewMatrix,false,e.matrixWorldInverse.elements)}}}if(r.skinning){if(i.bindMatrix&&f.bindMatrix!==null){Q.uniformMatrix4fv(f.bindMatrix,false,i.bindMatrix.elements)}if(i.bindMatrixInverse&&f.bindMatrixInverse!==null){Q.uniformMatrix4fv(f.bindMatrixInverse,false,i.bindMatrixInverse.elements)}if(lt&&i.skeleton&&i.skeleton.useVertexTexture){if(f.boneTexture!==null){var h=On();Q.uniform1i(f.boneTexture,h);v.setTexture(i.skeleton.boneTexture,h)}if(f.boneTextureWidth!==null){Q.uniform1i(f.boneTextureWidth,i.skeleton.boneTextureWidth)}if(f.boneTextureHeight!==null){Q.uniform1i(f.boneTextureHeight,i.skeleton.boneTextureHeight)}}else if(i.skeleton&&i.skeleton.boneMatrices){if(f.boneGlobalMatrices!==null){Q.uniformMatrix4fv(f.boneGlobalMatrices,false,i.skeleton.boneMatrices)}}}if(o){if(n&&r.fog){xn(c,n)}if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(J){u=true;Hn(t);J=false}if(u){Cn(c,K);kn(c,true)}else{kn(c,false)}}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){bn(c,r)}if(r instanceof THREE.LineBasicMaterial){wn(c,r)}else if(r instanceof THREE.LineDashedMaterial){wn(c,r);En(c,r)}else if(r instanceof THREE.PointCloudMaterial){Sn(c,r)}else if(r instanceof THREE.MeshPhongMaterial){Tn(c,r)}else if(r instanceof THREE.MeshLambertMaterial){Nn(c,r)}else if(r instanceof THREE.MeshDepthMaterial){c.mNear.value=e.near;c.mFar.value=e.far;c.opacity.value=r.opacity}else if(r instanceof THREE.MeshNormalMaterial){c.opacity.value=r.opacity}if(i.receiveShadow&&!r._shadowPass){Ln(c,t)}Mn(r.uniformsList)}An(f,i);if(f.modelMatrix!==null){Q.uniformMatrix4fv(f.modelMatrix,false,i.matrixWorld.elements)}return a}function bn(e,t){e.opacity.value=t.opacity;if(v.gammaInput){e.diffuse.value.copyGammaToLinear(t.color)}else{e.diffuse.value=t.color}e.map.value=t.map;e.lightMap.value=t.lightMap;e.specularMap.value=t.specularMap;e.alphaMap.value=t.alphaMap;if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale)}var n;if(t.map){n=t.map}else if(t.specularMap){n=t.specularMap}else if(t.normalMap){n=t.normalMap}else if(t.bumpMap){n=t.bumpMap}else if(t.alphaMap){n=t.alphaMap}if(n!==undefined){var r=n.offset;var i=n.repeat;e.offsetRepeat.value.set(r.x,r.y,i.x,i.y)}e.envMap.value=t.envMap;e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;if(v.gammaInput){e.reflectivity.value=t.reflectivity}else{e.reflectivity.value=t.reflectivity}e.refractionRatio.value=t.refractionRatio;e.combine.value=t.combine;e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function wn(e,t){e.diffuse.value=t.color;e.opacity.value=t.opacity}function En(e,t){e.dashSize.value=t.dashSize;e.totalSize.value=t.dashSize+t.gapSize;e.scale.value=t.scale}function Sn(e,n){e.psColor.value=n.color;e.opacity.value=n.opacity;e.size.value=n.size;e.scale.value=t.height/2;e.map.value=n.map}function xn(e,t){e.fogColor.value=t.color;if(t instanceof THREE.Fog){e.fogNear.value=t.near;e.fogFar.value=t.far}else if(t instanceof THREE.FogExp2){e.fogDensity.value=t.density}}function Tn(e,t){e.shininess.value=t.shininess;if(v.gammaInput){e.ambient.value.copyGammaToLinear(t.ambient);e.emissive.value.copyGammaToLinear(t.emissive);e.specular.value.copyGammaToLinear(t.specular)}else{e.ambient.value=t.ambient;e.emissive.value=t.emissive;e.specular.value=t.specular}if(t.wrapAround){e.wrapRGB.value.copy(t.wrapRGB)}}function Nn(e,t){if(v.gammaInput){e.ambient.value.copyGammaToLinear(t.ambient);e.emissive.value.copyGammaToLinear(t.emissive)}else{e.ambient.value=t.ambient;e.emissive.value=t.emissive}if(t.wrapAround){e.wrapRGB.value.copy(t.wrapRGB)}}function Cn(e,t){e.ambientLightColor.value=t.ambient;e.directionalLightColor.value=t.directional.colors;e.directionalLightDirection.value=t.directional.positions;e.pointLightColor.value=t.point.colors;e.pointLightPosition.value=t.point.positions;e.pointLightDistance.value=t.point.distances;e.spotLightColor.value=t.spot.colors;e.spotLightPosition.value=t.spot.positions;e.spotLightDistance.value=t.spot.distances;e.spotLightDirection.value=t.spot.directions;e.spotLightAngleCos.value=t.spot.anglesCos;e.spotLightExponent.value=t.spot.exponents;e.hemisphereLightSkyColor.value=t.hemi.skyColors;e.hemisphereLightGroundColor.value=t.hemi.groundColors;e.hemisphereLightDirection.value=t.hemi.positions}function kn(e,t){e.ambientLightColor.needsUpdate=t;e.directionalLightColor.needsUpdate=t;e.directionalLightDirection.needsUpdate=t;e.pointLightColor.needsUpdate=t;e.pointLightPosition.needsUpdate=t;e.pointLightDistance.needsUpdate=t;e.spotLightColor.needsUpdate=t;e.spotLightPosition.needsUpdate=t;e.spotLightDistance.needsUpdate=t;e.spotLightDirection.needsUpdate=t;e.spotLightAngleCos.needsUpdate=t;e.spotLightExponent.needsUpdate=t;e.hemisphereLightSkyColor.needsUpdate=t;e.hemisphereLightGroundColor.needsUpdate=t;e.hemisphereLightDirection.needsUpdate=t}function Ln(e,t){if(e.shadowMatrix){var n=0;for(var r=0,i=t.length;r<i;r++){var s=t[r];if(!s.castShadow)continue;if(s instanceof THREE.SpotLight||s instanceof THREE.DirectionalLight&&!s.shadowCascade){e.shadowMap.value[n]=s.shadowMap;e.shadowMapSize.value[n]=s.shadowMapSize;e.shadowMatrix.value[n]=s.shadowMatrix;e.shadowDarkness.value[n]=s.shadowDarkness;e.shadowBias.value[n]=s.shadowBias;n++}}}}function An(e,t){Q.uniformMatrix4fv(e.modelViewMatrix,false,t._modelViewMatrix.elements);if(e.normalMatrix){Q.uniformMatrix3fv(e.normalMatrix,false,t._normalMatrix.elements)}}function On(){var e=S;if(e>=it){console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+it)}S+=1;return e}function Mn(e){var t,n,r;for(var i=0,s=e.length;i<s;i++){var o=e[i][0];if(o.needsUpdate===false)continue;var u=o.type;var a=o.value;var f=e[i][1];switch(u){case"1i":Q.uniform1i(f,a);break;case"1f":Q.uniform1f(f,a);break;case"2f":Q.uniform2f(f,a[0],a[1]);break;case"3f":Q.uniform3f(f,a[0],a[1],a[2]);break;case"4f":Q.uniform4f(f,a[0],a[1],a[2],a[3]);break;case"1iv":Q.uniform1iv(f,a);break;case"3iv":Q.uniform3iv(f,a);break;case"1fv":Q.uniform1fv(f,a);break;case"2fv":Q.uniform2fv(f,a);break;case"3fv":Q.uniform3fv(f,a);break;case"4fv":Q.uniform4fv(f,a);break;case"Matrix3fv":Q.uniformMatrix3fv(f,false,a);break;case"Matrix4fv":Q.uniformMatrix4fv(f,false,a);break;case"i":Q.uniform1i(f,a);break;case"f":Q.uniform1f(f,a);break;case"v2":Q.uniform2f(f,a.x,a.y);break;case"v3":Q.uniform3f(f,a.x,a.y,a.z);break;case"v4":Q.uniform4f(f,a.x,a.y,a.z,a.w);break;case"c":Q.uniform3f(f,a.r,a.g,a.b);break;case"iv1":Q.uniform1iv(f,a);break;case"iv":Q.uniform3iv(f,a);break;case"fv1":Q.uniform1fv(f,a);break;case"fv":Q.uniform3fv(f,a);break;case"v2v":if(o._array===undefined){o._array=new Float32Array(2*a.length)}for(var l=0,c=a.length;l<c;l++){r=l*2;o._array[r]=a[l].x;o._array[r+1]=a[l].y}Q.uniform2fv(f,o._array);break;case"v3v":if(o._array===undefined){o._array=new Float32Array(3*a.length)}for(var l=0,c=a.length;l<c;l++){r=l*3;o._array[r]=a[l].x;o._array[r+1]=a[l].y;o._array[r+2]=a[l].z}Q.uniform3fv(f,o._array);break;case"v4v":if(o._array===undefined){o._array=new Float32Array(4*a.length)}for(var l=0,c=a.length;l<c;l++){r=l*4;o._array[r]=a[l].x;o._array[r+1]=a[l].y;o._array[r+2]=a[l].z;o._array[r+3]=a[l].w}Q.uniform4fv(f,o._array);break;case"m3":Q.uniformMatrix3fv(f,false,a.elements);break;case"m3v":if(o._array===undefined){o._array=new Float32Array(9*a.length)}for(var l=0,c=a.length;l<c;l++){a[l].flattenToArrayOffset(o._array,l*9)}Q.uniformMatrix3fv(f,false,o._array);break;case"m4":Q.uniformMatrix4fv(f,false,a.elements);break;case"m4v":if(o._array===undefined){o._array=new Float32Array(16*a.length)}for(var l=0,c=a.length;l<c;l++){a[l].flattenToArrayOffset(o._array,l*16)}Q.uniformMatrix4fv(f,false,o._array);break;case"t":t=a;n=On();Q.uniform1i(f,n);if(!t)continue;if(t instanceof THREE.CubeTexture||t.image instanceof Array&&t.image.length===6){qn(t,n)}else if(t instanceof THREE.WebGLRenderTargetCube){Rn(t,n)}else{v.setTexture(t,n)}break;case"tv":if(o._array===undefined){o._array=[]}for(var l=0,c=o.value.length;l<c;l++){o._array[l]=On()}Q.uniform1iv(f,o._array);for(var l=0,c=o.value.length;l<c;l++){t=o.value[l];n=o._array[l];if(!t)continue;v.setTexture(t,n)}break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+u)}}}function _n(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld);e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function Dn(e,t,n,r){e[t]=n.r*n.r*r;e[t+1]=n.g*n.g*r;e[t+2]=n.b*n.b*r}function Pn(e,t,n,r){e[t]=n.r*r;e[t+1]=n.g*r;e[t+2]=n.b*r}function Hn(e){var t,n,r,i,s=0,o=0,u=0,a,f,l,c,h,p,d,m=K,g=m.directional.colors,y=m.directional.positions,b=m.point.colors,w=m.point.positions,E=m.point.distances,S=m.spot.colors,x=m.spot.positions,T=m.spot.distances,N=m.spot.directions,C=m.spot.anglesCos,k=m.spot.exponents,L=m.hemi.skyColors,A=m.hemi.groundColors,O=m.hemi.positions,M=0,_=0,D=0,P=0,H=0,B=0,j=0,F=0,I=0,q=0,R=0,U=0;for(t=0,n=e.length;t<n;t++){r=e[t];if(r.onlyShadow)continue;a=r.color;c=r.intensity;d=r.distance;if(r instanceof THREE.AmbientLight){if(!r.visible)continue;if(v.gammaInput){s+=a.r*a.r;o+=a.g*a.g;u+=a.b*a.b}else{s+=a.r;o+=a.g;u+=a.b}}else if(r instanceof THREE.DirectionalLight){H+=1;if(!r.visible)continue;$.setFromMatrixPosition(r.matrixWorld);V.setFromMatrixPosition(r.target.matrixWorld);$.sub(V);$.normalize();I=M*3;y[I]=$.x;y[I+1]=$.y;y[I+2]=$.z;if(v.gammaInput){Dn(g,I,a,c*c)}else{Pn(g,I,a,c)}M+=1}else if(r instanceof THREE.PointLight){B+=1;if(!r.visible)continue;q=_*3;if(v.gammaInput){Dn(b,q,a,c*c)}else{Pn(b,q,a,c)}V.setFromMatrixPosition(r.matrixWorld);w[q]=V.x;w[q+1]=V.y;w[q+2]=V.z;E[_]=d;_+=1}else if(r instanceof THREE.SpotLight){j+=1;if(!r.visible)continue;R=D*3;if(v.gammaInput){Dn(S,R,a,c*c)}else{Pn(S,R,a,c)}V.setFromMatrixPosition(r.matrixWorld);x[R]=V.x;x[R+1]=V.y;x[R+2]=V.z;T[D]=d;$.copy(V);V.setFromMatrixPosition(r.target.matrixWorld);$.sub(V);$.normalize();N[R]=$.x;N[R+1]=$.y;N[R+2]=$.z;C[D]=Math.cos(r.angle);k[D]=r.exponent;D+=1}else if(r instanceof THREE.HemisphereLight){F+=1;if(!r.visible)continue;$.setFromMatrixPosition(r.matrixWorld);$.normalize();U=P*3;O[U]=$.x;O[U+1]=$.y;O[U+2]=$.z;f=r.color;l=r.groundColor;if(v.gammaInput){h=c*c;Dn(L,U,f,h);Dn(A,U,l,h)}else{Pn(L,U,f,c);Pn(A,U,l,c)}P+=1}}for(t=M*3,n=Math.max(g.length,H*3);t<n;t++)g[t]=0;for(t=_*3,n=Math.max(b.length,B*3);t<n;t++)b[t]=0;for(t=D*3,n=Math.max(S.length,j*3);t<n;t++)S[t]=0;for(t=P*3,n=Math.max(L.length,F*3);t<n;t++)L[t]=0;for(t=P*3,n=Math.max(A.length,F*3);t<n;t++)A[t]=0;m.directional.length=M;m.point.length=_;m.spot.length=D;m.hemi.length=P;m.ambient[0]=s;m.ambient[1]=o;m.ambient[2]=u}function Bn(e){if(e!==P){Q.lineWidth(e);P=e}}function jn(e,t,n){if(M!==e){if(e){Q.enable(Q.POLYGON_OFFSET_FILL)}else{Q.disable(Q.POLYGON_OFFSET_FILL)}M=e}if(e&&(_!==t||D!==n)){Q.polygonOffset(t,n);_=t;D=n}}function Fn(e,t,n){if(n){Q.texParameteri(e,Q.TEXTURE_WRAP_S,Vn(t.wrapS));Q.texParameteri(e,Q.TEXTURE_WRAP_T,Vn(t.wrapT));Q.texParameteri(e,Q.TEXTURE_MAG_FILTER,Vn(t.magFilter));Q.texParameteri(e,Q.TEXTURE_MIN_FILTER,Vn(t.minFilter))}else{Q.texParameteri(e,Q.TEXTURE_WRAP_S,Q.CLAMP_TO_EDGE);Q.texParameteri(e,Q.TEXTURE_WRAP_T,Q.CLAMP_TO_EDGE);Q.texParameteri(e,Q.TEXTURE_MAG_FILTER,Xn(t.magFilter));Q.texParameteri(e,Q.TEXTURE_MIN_FILTER,Xn(t.minFilter))}if(et&&t.type!==THREE.FloatType){if(t.anisotropy>1||t.__oldAnisotropy){Q.texParameterf(e,et.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,at));t.__oldAnisotropy=t.anisotropy}}}function In(e,t){if(e.width<=t&&e.height<=t){return e}var n=Math.max(e.width,e.height);var r=Math.floor(e.width*t/n);var i=Math.floor(e.height*t/n);var s=document.createElement("canvas");s.width=r;s.height=i;var o=s.getContext("2d");o.drawImage(e,0,0,e.width,e.height,0,0,r,i);return s}function qn(e,t){if(e.image.length===6){if(e.needsUpdate){if(!e.image.__webglTextureCube){e.addEventListener("dispose",Tt);e.image.__webglTextureCube=Q.createTexture();v.info.memory.textures++}Q.activeTexture(Q.TEXTURE0+t);Q.bindTexture(Q.TEXTURE_CUBE_MAP,e.image.__webglTextureCube);Q.pixelStorei(Q.UNPACK_FLIP_Y_WEBGL,e.flipY);var n=e instanceof THREE.CompressedTexture;var r=[];for(var i=0;i<6;i++){if(v.autoScaleCubemaps&&!n){r[i]=In(e.image[i],ut)}else{r[i]=e.image[i]}}var s=r[0],o=THREE.Math.isPowerOfTwo(s.width)&&THREE.Math.isPowerOfTwo(s.height),u=Vn(e.format),a=Vn(e.type);Fn(Q.TEXTURE_CUBE_MAP,e,o);for(var i=0;i<6;i++){if(!n){Q.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,u,u,a,r[i])}else{var f,l=r[i].mipmaps;for(var c=0,h=l.length;c<h;c++){f=l[c];if(e.format!==THREE.RGBAFormat){Q.compressedTexImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+i,c,u,f.width,f.height,0,f.data)}else{Q.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+i,c,u,f.width,f.height,0,u,a,f.data)}}}}if(e.generateMipmaps&&o){Q.generateMipmap(Q.TEXTURE_CUBE_MAP)}e.needsUpdate=false;if(e.onUpdate)e.onUpdate()}else{Q.activeTexture(Q.TEXTURE0+t);Q.bindTexture(Q.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}}}function Rn(e,t){Q.activeTexture(Q.TEXTURE0+t);Q.bindTexture(Q.TEXTURE_CUBE_MAP,e.__webglTexture)}function Un(e,t,n){Q.bindFramebuffer(Q.FRAMEBUFFER,e);Q.framebufferTexture2D(Q.FRAMEBUFFER,Q.COLOR_ATTACHMENT0,n,t.__webglTexture,0)}function zn(e,t){Q.bindRenderbuffer(Q.RENDERBUFFER,e);if(t.depthBuffer&&!t.stencilBuffer){Q.renderbufferStorage(Q.RENDERBUFFER,Q.DEPTH_COMPONENT16,t.width,t.height);Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_ATTACHMENT,Q.RENDERBUFFER,e)}else if(t.depthBuffer&&t.stencilBuffer){Q.renderbufferStorage(Q.RENDERBUFFER,Q.DEPTH_STENCIL,t.width,t.height);Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_STENCIL_ATTACHMENT,Q.RENDERBUFFER,e)}else{Q.renderbufferStorage(Q.RENDERBUFFER,Q.RGBA4,t.width,t.height)}}function Wn(e){if(e instanceof THREE.WebGLRenderTargetCube){Q.bindTexture(Q.TEXTURE_CUBE_MAP,e.__webglTexture);Q.generateMipmap(Q.TEXTURE_CUBE_MAP);Q.bindTexture(Q.TEXTURE_CUBE_MAP,null)}else{Q.bindTexture(Q.TEXTURE_2D,e.__webglTexture);Q.generateMipmap(Q.TEXTURE_2D);Q.bindTexture(Q.TEXTURE_2D,null)}}function Xn(e){if(e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter){return Q.NEAREST}return Q.LINEAR}function Vn(e){if(e===THREE.RepeatWrapping)return Q.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Q.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Q.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Q.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Q.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Q.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Q.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Q.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Q.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Q.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Q.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Q.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Q.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Q.BYTE;if(e===THREE.ShortType)return Q.SHORT;if(e===THREE.UnsignedShortType)return Q.UNSIGNED_SHORT;if(e===THREE.IntType)return Q.INT;if(e===THREE.UnsignedIntType)return Q.UNSIGNED_INT;if(e===THREE.FloatType)return Q.FLOAT;if(e===THREE.AlphaFormat)return Q.ALPHA;if(e===THREE.RGBFormat)return Q.RGB;if(e===THREE.RGBAFormat)return Q.RGBA;if(e===THREE.LuminanceFormat)return Q.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Q.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Q.FUNC_ADD;if(e===THREE.SubtractEquation)return Q.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Q.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Q.ZERO;if(e===THREE.OneFactor)return Q.ONE;if(e===THREE.SrcColorFactor)return Q.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Q.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Q.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Q.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Q.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Q.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Q.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Q.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Q.SRC_ALPHA_SATURATE;if(tt!==undefined){if(e===THREE.RGB_S3TC_DXT1_Format)return tt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return tt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return tt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return tt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function $n(e){if(lt&&e&&e.skeleton&&e.skeleton.useVertexTexture){return 1024}else{var t=Q.getParameter(Q.MAX_VERTEX_UNIFORM_VECTORS);var n=Math.floor((t-20)/4);var r=n;if(e!==undefined&&e instanceof THREE.SkinnedMesh){r=Math.min(e.skeleton.bones.length,r);if(r<e.skeleton.bones.length){console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)")}}return r}}function Jn(e){var t=0;var n=0;var r=0;var i=0;for(var s=0,o=e.length;s<o;s++){var u=e[s];if(u.onlyShadow||u.visible===false)continue;if(u instanceof THREE.DirectionalLight)t++;if(u instanceof THREE.PointLight)n++;if(u instanceof THREE.SpotLight)r++;if(u instanceof THREE.HemisphereLight)i++}return{directional:t,point:n,spot:r,hemi:i}}function Kn(e){var t=0;for(var n=0,r=e.length;n<r;n++){var i=e[n];if(!i.castShadow)continue;if(i instanceof THREE.SpotLight)t++;if(i instanceof THREE.DirectionalLight&&!i.shadowCascade)t++}return t}function Qn(){try{var e={alpha:i,depth:s,stencil:o,antialias:u,premultipliedAlpha:a,preserveDrawingBuffer:f};Q=n||t.getContext("webgl",e)||t.getContext("experimental-webgl",e);if(Q===null){throw"Error creating WebGL context."}}catch(r){console.error(r)}G=Q.getExtension("OES_texture_float");Y=Q.getExtension("OES_texture_float_linear");Z=Q.getExtension("OES_standard_derivatives");et=Q.getExtension("EXT_texture_filter_anisotropic")||Q.getExtension("MOZ_EXT_texture_filter_anisotropic")||Q.getExtension("WEBKIT_EXT_texture_filter_anisotropic");tt=Q.getExtension("WEBGL_compressed_texture_s3tc")||Q.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Q.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");nt=Q.getExtension("OES_element_index_uint");if(G===null){console.log("THREE.WebGLRenderer: Float textures not supported.")}if(Z===null){console.log("THREE.WebGLRenderer: Standard derivatives not supported.")}if(et===null){console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.")}if(tt===null){console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}if(nt===null){console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.")}if(Q.getShaderPrecisionFormat===undefined){Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}if(l){rt=Q.getExtension("EXT_frag_depth")}}function Gn(){Q.clearColor(0,0,0,1);Q.clearDepth(1);Q.clearStencil(0);Q.enable(Q.DEPTH_TEST);Q.depthFunc(Q.LEQUAL);Q.frontFace(Q.CCW);Q.cullFace(Q.BACK);Q.enable(Q.CULL_FACE);Q.enable(Q.BLEND);Q.blendEquation(Q.FUNC_ADD);Q.blendFunc(Q.SRC_ALPHA,Q.ONE_MINUS_SRC_ALPHA);Q.viewport(H,B,j,F);Q.clearColor(c.r,c.g,c.b,h)}console.log("THREE.WebGLRenderer",THREE.REVISION);e=e||{};var t=e.canvas!==undefined?e.canvas:document.createElement("canvas"),n=e.context!==undefined?e.context:null,r=e.precision!==undefined?e.precision:"highp",i=e.alpha!==undefined?e.alpha:false,s=e.depth!==undefined?e.depth:true,o=e.stencil!==undefined?e.stencil:true,u=e.antialias!==undefined?e.antialias:false,a=e.premultipliedAlpha!==undefined?e.premultipliedAlpha:true,f=e.preserveDrawingBuffer!==undefined?e.preserveDrawingBuffer:false,l=e.logarithmicDepthBuffer!==undefined?e.logarithmicDepthBuffer:false,c=new THREE.Color(0),h=0;var p=[];var d=[];this.domElement=t;this.context=null;this.devicePixelRatio=e.devicePixelRatio!==undefined?e.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.gammaInput=false;this.gammaOutput=false;this.shadowMapEnabled=false;this.shadowMapAutoUpdate=true;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=false;this.shadowMapCascade=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var v=this,m=[],g=null,y=null,b=-1,w=null,E=null,S=0,x=-1,T=-1,N=-1,C=-1,k=-1,L=-1,A=-1,O=-1,M=null,_=null,D=null,P=null,H=0,B=0,j=t.width,F=t.height,I=0,q=0,R=new Uint8Array(16),U=new Uint8Array(16),z=new THREE.Frustum,W=new THREE.Matrix4,X=new THREE.Matrix4,V=new THREE.Vector3,$=new THREE.Vector3,J=true,K={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};var Q;var G;var Y;var Z;var et;var tt;var nt;var rt;Qn();Gn();this.context=Q;var it=Q.getParameter(Q.MAX_TEXTURE_IMAGE_UNITS);var st=Q.getParameter(Q.MAX_VERTEX_TEXTURE_IMAGE_UNITS);var ot=Q.getParameter(Q.MAX_TEXTURE_SIZE);var ut=Q.getParameter(Q.MAX_CUBE_MAP_TEXTURE_SIZE);var at=et?Q.getParameter(et.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;var ft=st>0;var lt=ft&&G;var ct=tt?Q.getParameter(Q.COMPRESSED_TEXTURE_FORMATS):[];var ht=Q.getShaderPrecisionFormat(Q.VERTEX_SHADER,Q.HIGH_FLOAT);var pt=Q.getShaderPrecisionFormat(Q.VERTEX_SHADER,Q.MEDIUM_FLOAT);var dt=Q.getShaderPrecisionFormat(Q.VERTEX_SHADER,Q.LOW_FLOAT);var vt=Q.getShaderPrecisionFormat(Q.FRAGMENT_SHADER,Q.HIGH_FLOAT);var mt=Q.getShaderPrecisionFormat(Q.FRAGMENT_SHADER,Q.MEDIUM_FLOAT);var gt=Q.getShaderPrecisionFormat(Q.FRAGMENT_SHADER,Q.LOW_FLOAT);var yt=ht.precision>0&&vt.precision>0;var bt=pt.precision>0&&mt.precision>0;if(r==="highp"&&!yt){if(bt){r="mediump";console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")}else{r="lowp";console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")}}if(r==="mediump"&&!bt){r="lowp";console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")}this.getContext=function(){return Q};this.supportsVertexTextures=function(){return ft};this.supportsFloatTextures=function(){return G};this.supportsStandardDerivatives=function(){return Z};this.supportsCompressedTextureS3TC=function(){return tt};this.getMaxAnisotropy=function(){return at};this.getPrecision=function(){return r};this.setSize=function(e,n,r){t.width=e*this.devicePixelRatio;t.height=n*this.devicePixelRatio;if(r!==false){t.style.width=e+"px";t.style.height=n+"px"}this.setViewport(0,0,e,n)};this.setViewport=function(e,t,n,r){H=e*this.devicePixelRatio;B=t*this.devicePixelRatio;j=n*this.devicePixelRatio;F=r*this.devicePixelRatio;Q.viewport(H,B,j,F)};this.setScissor=function(e,t,n,r){Q.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,n*this.devicePixelRatio,r*this.devicePixelRatio)};this.enableScissorTest=function(e){e?Q.enable(Q.SCISSOR_TEST):Q.disable(Q.SCISSOR_TEST)};this.setClearColor=function(e,t){c.set(e);h=t!==undefined?t:1;Q.clearColor(c.r,c.g,c.b,h)};this.setClearColorHex=function(e,t){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getClearColor=function(){return c};this.getClearAlpha=function(){return h};this.clear=function(e,t,n){var r=0;if(e===undefined||e)r|=Q.COLOR_BUFFER_BIT;if(t===undefined||t)r|=Q.DEPTH_BUFFER_BIT;if(n===undefined||n)r|=Q.STENCIL_BUFFER_BIT;Q.clear(r)};this.clearColor=function(){Q.clear(Q.COLOR_BUFFER_BIT)};this.clearDepth=function(){Q.clear(Q.DEPTH_BUFFER_BIT)};this.clearStencil=function(){Q.clear(Q.STENCIL_BUFFER_BIT)};this.clearTarget=function(e,t,n,r){this.setRenderTarget(e);this.clear(t,n,r)};this.addPostPlugin=function(e){e.init(this);this.renderPluginsPost.push(e)};this.addPrePlugin=function(e){e.init(this);this.renderPluginsPre.push(e)};this.updateShadowMap=function(e,t){g=null;N=-1;A=-1;O=-1;w=-1;b=-1;J=true;x=-1;T=-1;un(e);this.shadowMapPlugin.update(e,t)};var xt=function(e){var t=e.target;t.removeEventListener("dispose",xt);Lt(t)};var Tt=function(e){var t=e.target;t.removeEventListener("dispose",Tt);At(t);v.info.memory.textures--};var Nt=function(e){var t=e.target;t.removeEventListener("dispose",Nt);Ot(t);v.info.memory.textures--};var Ct=function(e){var t=e.target;t.removeEventListener("dispose",Ct);Mt(t)};var kt=function(e){if(e.__webglVertexBuffer!==undefined)Q.deleteBuffer(e.__webglVertexBuffer);if(e.__webglNormalBuffer!==undefined)Q.deleteBuffer(e.__webglNormalBuffer);if(e.__webglTangentBuffer!==undefined)Q.deleteBuffer(e.__webglTangentBuffer);if(e.__webglColorBuffer!==undefined)Q.deleteBuffer(e.__webglColorBuffer);if(e.__webglUVBuffer!==undefined)Q.deleteBuffer(e.__webglUVBuffer);if(e.__webglUV2Buffer!==undefined)Q.deleteBuffer(e.__webglUV2Buffer);if(e.__webglSkinIndicesBuffer!==undefined)Q.deleteBuffer(e.__webglSkinIndicesBuffer);if(e.__webglSkinWeightsBuffer!==undefined)Q.deleteBuffer(e.__webglSkinWeightsBuffer);if(e.__webglFaceBuffer!==undefined)Q.deleteBuffer(e.__webglFaceBuffer);if(e.__webglLineBuffer!==undefined)Q.deleteBuffer(e.__webglLineBuffer);if(e.__webglLineDistanceBuffer!==undefined)Q.deleteBuffer(e.__webglLineDistanceBuffer);if(e.__webglCustomAttributesList!==undefined){for(var t in e.__webglCustomAttributesList){Q.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}}v.info.memory.geometries--};var Lt=function(e){e.__webglInit=undefined;if(e instanceof THREE.BufferGeometry){var t=e.attributes;for(var n in t){if(t[n].buffer!==undefined){Q.deleteBuffer(t[n].buffer)}}v.info.memory.geometries--}else{if(e.geometryGroups!==undefined){for(var r=0,i=e.geometryGroupsList.length;r<i;r++){var s=e.geometryGroupsList[r];if(s.numMorphTargets!==undefined){for(var o=0,u=s.numMorphTargets;o<u;o++){Q.deleteBuffer(s.__webglMorphTargetsBuffers[o])}}if(s.numMorphNormals!==undefined){for(var o=0,u=s.numMorphNormals;o<u;o++){Q.deleteBuffer(s.__webglMorphNormalsBuffers[o])}}kt(s)}}else{kt(e)}}};var At=function(e){if(e.image&&e.image.__webglTextureCube){Q.deleteTexture(e.image.__webglTextureCube)}else{if(!e.__webglInit)return;e.__webglInit=false;Q.deleteTexture(e.__webglTexture)}};var Ot=function(e){if(!e||!e.__webglTexture)return;Q.deleteTexture(e.__webglTexture);if(e instanceof THREE.WebGLRenderTargetCube){for(var t=0;t<6;t++){Q.deleteFramebuffer(e.__webglFramebuffer[t]);Q.deleteRenderbuffer(e.__webglRenderbuffer[t])}}else{Q.deleteFramebuffer(e.__webglFramebuffer);Q.deleteRenderbuffer(e.__webglRenderbuffer)}};var Mt=function(e){var t=e.program.program;if(t===undefined)return;e.program=undefined;var n,r,i;var s=false;for(n=0,r=m.length;n<r;n++){i=m[n];if(i.program===t){i.usedTimes--;if(i.usedTimes===0){s=true}break}}if(s===true){var o=[];for(n=0,r=m.length;n<r;n++){i=m[n];if(i.program!==t){o.push(i)}}m=o;Q.deleteProgram(t);v.info.memory.programs--}};this.renderBufferImmediate=function(e,t,n){$t();if(e.hasPositions&&!e.__webglVertexBuffer)e.__webglVertexBuffer=Q.createBuffer();if(e.hasNormals&&!e.__webglNormalBuffer)e.__webglNormalBuffer=Q.createBuffer();if(e.hasUvs&&!e.__webglUvBuffer)e.__webglUvBuffer=Q.createBuffer();if(e.hasColors&&!e.__webglColorBuffer)e.__webglColorBuffer=Q.createBuffer();if(e.hasPositions){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglVertexBuffer);Q.bufferData(Q.ARRAY_BUFFER,e.positionArray,Q.DYNAMIC_DRAW);Jt(t.attributes.position);Q.vertexAttribPointer(t.attributes.position,3,Q.FLOAT,false,0,0)}if(e.hasNormals){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglNormalBuffer);if(n.shading===THREE.FlatShading){var r,i,s,o,u,a,f,l,c,h,p,d,v,m,g=e.count*3;for(m=0;m<g;m+=9){v=e.normalArray;o=v[m];f=v[m+1];h=v[m+2];u=v[m+3];l=v[m+4];p=v[m+5];a=v[m+6];c=v[m+7];d=v[m+8];r=(o+u+a)/3;i=(f+l+c)/3;s=(h+p+d)/3;v[m]=r;v[m+1]=i;v[m+2]=s;v[m+3]=r;v[m+4]=i;v[m+5]=s;v[m+6]=r;v[m+7]=i;v[m+8]=s}}Q.bufferData(Q.ARRAY_BUFFER,e.normalArray,Q.DYNAMIC_DRAW);Jt(t.attributes.normal);Q.vertexAttribPointer(t.attributes.normal,3,Q.FLOAT,false,0,0)}if(e.hasUvs&&n.map){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglUvBuffer);Q.bufferData(Q.ARRAY_BUFFER,e.uvArray,Q.DYNAMIC_DRAW);Jt(t.attributes.uv);Q.vertexAttribPointer(t.attributes.uv,2,Q.FLOAT,false,0,0)}if(e.hasColors&&n.vertexColors!==THREE.NoColors){Q.bindBuffer(Q.ARRAY_BUFFER,e.__webglColorBuffer);Q.bufferData(Q.ARRAY_BUFFER,e.colorArray,Q.DYNAMIC_DRAW);Jt(t.attributes.color);Q.vertexAttribPointer(t.attributes.color,3,Q.FLOAT,false,0,0)}Kt();Q.drawArrays(Q.TRIANGLES,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,n,r,i,s){if(r.visible===false)return;var o,u,a;var f,l,c,h;var p=yn(e,t,n,r,s);var d=p.attributes;var m=i.attributes;var g=false,y=r.wireframe?1:0,b=i.id*16777215+p.id*2+y;if(b!==w){w=b;g=true}if(g){$t()}if(s instanceof THREE.Mesh){var E=m["index"];if(E){var S,x;if(E.array instanceof Uint32Array){S=Q.UNSIGNED_INT;x=4}else{S=Q.UNSIGNED_SHORT;x=2}var T=i.offsets;if(T.length===0){if(g){Vt(r,d,m,0);Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,E.buffer)}Q.drawElements(Q.TRIANGLES,E.array.length,S,0);v.info.render.calls++;v.info.render.vertices+=E.array.length;v.info.render.faces+=E.array.length/3}else{g=true;for(var N=0,C=T.length;N<C;N++){var k=T[N].index;if(g){Vt(r,d,m,k);Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,E.buffer)}Q.drawElements(Q.TRIANGLES,T[N].count,S,T[N].start*x);v.info.render.calls++;v.info.render.vertices+=T[N].count;v.info.render.faces+=T[N].count/3}}}else{if(g){Vt(r,d,m,0)}var L=i.attributes["position"];Q.drawArrays(Q.TRIANGLES,0,L.array.length/3);v.info.render.calls++;v.info.render.vertices+=L.array.length/3;v.info.render.faces+=L.array.length/9}}else if(s instanceof THREE.PointCloud){if(g){Vt(r,d,m,0)}var L=m["position"];Q.drawArrays(Q.POINTS,0,L.array.length/3);v.info.render.calls++;v.info.render.points+=L.array.length/3}else if(s instanceof THREE.Line){var A=s.type===THREE.LineStrip?Q.LINE_STRIP:Q.LINES;Bn(r.linewidth);var E=m["index"];if(E){var S,x;if(E.array instanceof Uint32Array){S=Q.UNSIGNED_INT;x=4}else{S=Q.UNSIGNED_SHORT;x=2}var T=i.offsets;if(T.length===0){if(g){Vt(r,d,m,0);Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,E.buffer)}Q.drawElements(A,E.array.length,S,0);v.info.render.calls++;v.info.render.vertices+=E.array.length}else{if(T.length>1)g=true;for(var N=0,C=T.length;N<C;N++){var k=T[N].index;if(g){Vt(r,d,m,k);Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,E.buffer)}Q.drawElements(A,T[N].count,S,T[N].start*x);v.info.render.calls++;v.info.render.vertices+=T[N].count}}}else{if(g){Vt(r,d,m,0)}var L=m["position"];Q.drawArrays(A,0,L.array.length/3);v.info.render.calls++;v.info.render.points+=L.array.length/3}}};this.renderBuffer=function(e,t,n,r,i,s){if(r.visible===false)return;var o,u,a,f,l;var c=yn(e,t,n,r,s);var h=c.attributes;var p=false,d=r.wireframe?1:0,m=i.id*16777215+c.id*2+d;if(m!==w){w=m;p=true}if(p){$t()}if(!r.morphTargets&&h.position>=0){if(p){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglVertexBuffer);Jt(h.position);Q.vertexAttribPointer(h.position,3,Q.FLOAT,false,0,0)}}else{if(s.morphTargetBase){Qt(r,i,s)}}if(p){if(i.__webglCustomAttributesList){for(f=0,l=i.__webglCustomAttributesList.length;f<l;f++){a=i.__webglCustomAttributesList[f];if(h[a.buffer.belongsToAttribute]>=0){Q.bindBuffer(Q.ARRAY_BUFFER,a.buffer);Jt(h[a.buffer.belongsToAttribute]);Q.vertexAttribPointer(h[a.buffer.belongsToAttribute],a.size,Q.FLOAT,false,0,0)}}}if(h.color>=0){if(s.geometry.colors.length>0||s.geometry.faces.length>0){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglColorBuffer);Jt(h.color);Q.vertexAttribPointer(h.color,3,Q.FLOAT,false,0,0)}else if(r.defaultAttributeValues){Q.vertexAttrib3fv(h.color,r.defaultAttributeValues.color)}}if(h.normal>=0){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglNormalBuffer);Jt(h.normal);Q.vertexAttribPointer(h.normal,3,Q.FLOAT,false,0,0)}if(h.tangent>=0){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglTangentBuffer);Jt(h.tangent);Q.vertexAttribPointer(h.tangent,4,Q.FLOAT,false,0,0)}if(h.uv>=0){if(s.geometry.faceVertexUvs[0]){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglUVBuffer);Jt(h.uv);Q.vertexAttribPointer(h.uv,2,Q.FLOAT,false,0,0)}else if(r.defaultAttributeValues){Q.vertexAttrib2fv(h.uv,r.defaultAttributeValues.uv)}}if(h.uv2>=0){if(s.geometry.faceVertexUvs[1]){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglUV2Buffer);Jt(h.uv2);Q.vertexAttribPointer(h.uv2,2,Q.FLOAT,false,0,0)}else if(r.defaultAttributeValues){Q.vertexAttrib2fv(h.uv2,r.defaultAttributeValues.uv2)}}if(r.skinning&&h.skinIndex>=0&&h.skinWeight>=0){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglSkinIndicesBuffer);Jt(h.skinIndex);Q.vertexAttribPointer(h.skinIndex,4,Q.FLOAT,false,0,0);Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglSkinWeightsBuffer);Jt(h.skinWeight);Q.vertexAttribPointer(h.skinWeight,4,Q.FLOAT,false,0,0)}if(h.lineDistance>=0){Q.bindBuffer(Q.ARRAY_BUFFER,i.__webglLineDistanceBuffer);Jt(h.lineDistance);Q.vertexAttribPointer(h.lineDistance,1,Q.FLOAT,false,0,0)}}Kt();if(s instanceof THREE.Mesh){var g=i.__typeArray===Uint32Array?Q.UNSIGNED_INT:Q.UNSIGNED_SHORT;if(r.wireframe){Bn(r.wireframeLinewidth);if(p)Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,i.__webglLineBuffer);Q.drawElements(Q.LINES,i.__webglLineCount,g,0)}else{if(p)Q.bindBuffer(Q.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer);Q.drawElements(Q.TRIANGLES,i.__webglFaceCount,g,0)}v.info.render.calls++;v.info.render.vertices+=i.__webglFaceCount;v.info.render.faces+=i.__webglFaceCount/3}else if(s instanceof THREE.Line){var y=s.type===THREE.LineStrip?Q.LINE_STRIP:Q.LINES;Bn(r.linewidth);Q.drawArrays(y,0,i.__webglLineCount);v.info.render.calls++}else if(s instanceof THREE.PointCloud){Q.drawArrays(Q.POINTS,0,i.__webglParticleCount);v.info.render.calls++;v.info.render.points+=i.__webglParticleCount}};this.render=function(e,t,n,r){function c(e){if(e instanceof THREE.SkinnedMesh){e.skeleton.update()}for(var t=0,n=e.children.length;t<n;t++){c(e.children[t])}}if(t instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var i,s,o,u,a,f=e.__lights,l=e.fog;b=-1;E=null;J=true;if(e.autoUpdate===true)e.updateMatrixWorld();if(t.parent===undefined)t.updateMatrixWorld();c(e);t.matrixWorldInverse.getInverse(t.matrixWorld);W.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);z.setFromMatrix(W);un(e);p.length=0;d.length=0;en(e,e,t);if(v.sortObjects===true){p.sort(Gt);d.sort(Yt)}tn(this.renderPluginsPre,e,t);v.info.render.calls=0;v.info.render.vertices=0;v.info.render.faces=0;v.info.render.points=0;this.setRenderTarget(n);if(this.autoClear||r){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}a=e.__webglObjectsImmediate;for(i=0,s=a.length;i<s;i++){o=a[i];u=o.object;if(u.visible){_n(u,t);sn(o)}}if(e.overrideMaterial){var h=e.overrideMaterial;this.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);this.setDepthTest(h.depthTest);this.setDepthWrite(h.depthWrite);jn(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits);nn(p,t,f,l,true,h);nn(d,t,f,l,true,h);rn(e.__webglObjectsImmediate,"",t,f,l,false,h)}else{var h=null;this.setBlending(THREE.NoBlending);nn(p,t,f,l,false,h);rn(e.__webglObjectsImmediate,"opaque",t,f,l,false,h);nn(d,t,f,l,true,h);rn(e.__webglObjectsImmediate,"transparent",t,f,l,true,h)}tn(this.renderPluginsPost,e,t);if(n&&n.generateMipmaps&&n.minFilter!==THREE.NearestFilter&&n.minFilter!==THREE.LinearFilter){Wn(n)}this.setDepthTest(true);this.setDepthWrite(true)};this.renderImmediateObject=function(e,t,n,r,i){var s=yn(e,t,n,r,i);w=-1;v.setMaterialFaces(r);if(i.immediateRenderCallback){i.immediateRenderCallback(s,Q,z)}else{i.render(function(e){v.renderBufferImmediate(e,s,r)})}};var un=function(e){if(!e.__webglObjects){e.__webglObjects={};e.__webglObjectsImmediate=[]}while(e.__objectsAdded.length){an(e.__objectsAdded[0],e);e.__objectsAdded.splice(0,1)}while(e.__objectsRemoved.length){vn(e.__objectsRemoved[0],e);e.__objectsRemoved.splice(0,1)}};this.initMaterial=function(e,t,n,i){e.addEventListener("dispose",Ct);var s,o,u,a,f,c,h,p,d;if(e instanceof THREE.MeshDepthMaterial){d="depth"}else if(e instanceof THREE.MeshNormalMaterial){d="normal"}else if(e instanceof THREE.MeshBasicMaterial){d="basic"}else if(e instanceof THREE.MeshLambertMaterial){d="lambert"}else if(e instanceof THREE.MeshPhongMaterial){d="phong"}else if(e instanceof THREE.LineBasicMaterial){d="basic"}else if(e instanceof THREE.LineDashedMaterial){d="dashed"}else if(e instanceof THREE.PointCloudMaterial){d="particle_basic"}if(d){var g=THREE.ShaderLib[d];e.__webglShader={uniforms:THREE.UniformsUtils.clone(g.uniforms),vertexShader:g.vertexShader,fragmentShader:g.fragmentShader}}else{e.__webglShader={uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}}c=Jn(t);p=Kn(t);h=$n(i);f={precision:r,supportsVertexTextures:ft,map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,vertexColors:e.vertexColors,fog:n,useFog:e.fog,fogExp:n instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:l,skinning:e.skinning,maxBones:h,useVertexTexture:lt&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:c.directional,maxPointLights:c.point,maxSpotLights:c.spot,maxHemiLights:c.hemi,maxShadows:p,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&p>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide};var y=[];if(d){y.push(d)}else{y.push(e.fragmentShader);y.push(e.vertexShader)}for(var b in e.defines){y.push(b);y.push(e.defines[b])}for(var w in f){y.push(w);y.push(f[w])}var E=y.join();var S;for(var w=0,x=m.length;w<x;w++){var T=m[w];if(T.code===E){S=T;S.usedTimes++;break}}if(S===undefined){S=new THREE.WebGLProgram(this,E,e,f);m.push(S);v.info.memory.programs=m.length}e.program=S;var N=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var C,k="morphTarget";for(a=0;a<this.maxMorphTargets;a++){C=k+a;if(N[C]>=0){e.numSupportedMorphTargets++}}}if(e.morphNormals){e.numSupportedMorphNormals=0;var C,k="morphNormal";for(a=0;a<this.maxMorphNormals;a++){C=k+a;if(N[C]>=0){e.numSupportedMorphNormals++}}}e.uniformsList=[];for(s in e.__webglShader.uniforms){var L=e.program.uniforms[s];if(L){e.uniformsList.push([e.__webglShader.uniforms[s],L])}}};this.setFaceCulling=function(e,t){if(e===THREE.CullFaceNone){Q.disable(Q.CULL_FACE)}else{if(t===THREE.FrontFaceDirectionCW){Q.frontFace(Q.CW)}else{Q.frontFace(Q.CCW)}if(e===THREE.CullFaceBack){Q.cullFace(Q.BACK)}else if(e===THREE.CullFaceFront){Q.cullFace(Q.FRONT)}else{Q.cullFace(Q.FRONT_AND_BACK)}Q.enable(Q.CULL_FACE)}};this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide;var n=e.side===THREE.BackSide;if(x!==t){if(t){Q.disable(Q.CULL_FACE)}else{Q.enable(Q.CULL_FACE)}x=t}if(T!==n){if(n){Q.frontFace(Q.CW)}else{Q.frontFace(Q.CCW)}T=n}};this.setDepthTest=function(e){if(A!==e){if(e){Q.enable(Q.DEPTH_TEST)}else{Q.disable(Q.DEPTH_TEST)}A=e}};this.setDepthWrite=function(e){if(O!==e){Q.depthMask(e);O=e}};this.setBlending=function(e,t,n,r){if(e!==N){if(e===THREE.NoBlending){Q.disable(Q.BLEND)}else if(e===THREE.AdditiveBlending){Q.enable(Q.BLEND);Q.blendEquation(Q.FUNC_ADD);Q.blendFunc(Q.SRC_ALPHA,Q.ONE)}else if(e===THREE.SubtractiveBlending){Q.enable(Q.BLEND);Q.blendEquation(Q.FUNC_ADD);Q.blendFunc(Q.ZERO,Q.ONE_MINUS_SRC_COLOR)}else if(e===THREE.MultiplyBlending){Q.enable(Q.BLEND);Q.blendEquation(Q.FUNC_ADD);Q.blendFunc(Q.ZERO,Q.SRC_COLOR)}else if(e===THREE.CustomBlending){Q.enable(Q.BLEND)}else{Q.enable(Q.BLEND);Q.blendEquationSeparate(Q.FUNC_ADD,Q.FUNC_ADD);Q.blendFuncSeparate(Q.SRC_ALPHA,Q.ONE_MINUS_SRC_ALPHA,Q.ONE,Q.ONE_MINUS_SRC_ALPHA)}N=e}if(e===THREE.CustomBlending){if(t!==C){Q.blendEquation(Vn(t));C=t}if(n!==k||r!==L){Q.blendFunc(Vn(n),Vn(r));k=n;L=r}}else{C=null;k=null;L=null}};this.setTexture=function(e,t){if(e.needsUpdate){if(!e.__webglInit){e.__webglInit=true;e.addEventListener("dispose",Tt);e.__webglTexture=Q.createTexture();v.info.memory.textures++}Q.activeTexture(Q.TEXTURE0+t);Q.bindTexture(Q.TEXTURE_2D,e.__webglTexture);Q.pixelStorei(Q.UNPACK_FLIP_Y_WEBGL,e.flipY);Q.pixelStorei(Q.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);Q.pixelStorei(Q.UNPACK_ALIGNMENT,e.unpackAlignment);var n=e.image,r=THREE.Math.isPowerOfTwo(n.width)&&THREE.Math.isPowerOfTwo(n.height),i=Vn(e.format),s=Vn(e.type);Fn(Q.TEXTURE_2D,e,r);var o,u=e.mipmaps;if(e instanceof THREE.DataTexture){if(u.length>0&&r){for(var a=0,f=u.length;a<f;a++){o=u[a];Q.texImage2D(Q.TEXTURE_2D,a,i,o.width,o.height,0,i,s,o.data)}e.generateMipmaps=false}else{Q.texImage2D(Q.TEXTURE_2D,0,i,n.width,n.height,0,i,s,n.data)}}else if(e instanceof THREE.CompressedTexture){for(var a=0,f=u.length;a<f;a++){o=u[a];if(e.format!==THREE.RGBAFormat){Q.compressedTexImage2D(Q.TEXTURE_2D,a,i,o.width,o.height,0,o.data)}else{Q.texImage2D(Q.TEXTURE_2D,a,i,o.width,o.height,0,i,s,o.data)}}}else{if(u.length>0&&r){for(var a=0,f=u.length;a<f;a++){o=u[a];Q.texImage2D(Q.TEXTURE_2D,a,i,i,s,o)}e.generateMipmaps=false}else{Q.texImage2D(Q.TEXTURE_2D,0,i,i,s,e.image)}}if(e.generateMipmaps&&r)Q.generateMipmap(Q.TEXTURE_2D);e.needsUpdate=false;if(e.onUpdate)e.onUpdate()}else{Q.activeTexture(Q.TEXTURE0+t);Q.bindTexture(Q.TEXTURE_2D,e.__webglTexture)}};this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){if(e.depthBuffer===undefined)e.depthBuffer=true;if(e.stencilBuffer===undefined)e.stencilBuffer=true;e.addEventListener("dispose",Nt);e.__webglTexture=Q.createTexture();v.info.memory.textures++;var n=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),r=Vn(e.format),i=Vn(e.type);if(t){e.__webglFramebuffer=[];e.__webglRenderbuffer=[];Q.bindTexture(Q.TEXTURE_CUBE_MAP,e.__webglTexture);Fn(Q.TEXTURE_CUBE_MAP,e,n);for(var s=0;s<6;s++){e.__webglFramebuffer[s]=Q.createFramebuffer();e.__webglRenderbuffer[s]=Q.createRenderbuffer();Q.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,r,e.width,e.height,0,r,i,null);Un(e.__webglFramebuffer[s],e,Q.TEXTURE_CUBE_MAP_POSITIVE_X+s);zn(e.__webglRenderbuffer[s],e)}if(n)Q.generateMipmap(Q.TEXTURE_CUBE_MAP)}else{e.__webglFramebuffer=Q.createFramebuffer();if(e.shareDepthFrom){e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer}else{e.__webglRenderbuffer=Q.createRenderbuffer()}Q.bindTexture(Q.TEXTURE_2D,e.__webglTexture);Fn(Q.TEXTURE_2D,e,n);Q.texImage2D(Q.TEXTURE_2D,0,r,e.width,e.height,0,r,i,null);Un(e.__webglFramebuffer,e,Q.TEXTURE_2D);if(e.shareDepthFrom){if(e.depthBuffer&&!e.stencilBuffer){Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_ATTACHMENT,Q.RENDERBUFFER,e.__webglRenderbuffer)}else if(e.depthBuffer&&e.stencilBuffer){Q.framebufferRenderbuffer(Q.FRAMEBUFFER,Q.DEPTH_STENCIL_ATTACHMENT,Q.RENDERBUFFER,e.__webglRenderbuffer)}}else{zn(e.__webglRenderbuffer,e)}if(n)Q.generateMipmap(Q.TEXTURE_2D)}if(t){Q.bindTexture(Q.TEXTURE_CUBE_MAP,null)}else{Q.bindTexture(Q.TEXTURE_2D,null)}Q.bindRenderbuffer(Q.RENDERBUFFER,null);Q.bindFramebuffer(Q.FRAMEBUFFER,null)}var o,u,a,f,l;if(e){if(t){o=e.__webglFramebuffer[e.activeCubeFace]}else{o=e.__webglFramebuffer}u=e.width;a=e.height;f=0;l=0}else{o=null;u=j;a=F;f=H;l=B}if(o!==y){Q.bindFramebuffer(Q.FRAMEBUFFER,o);Q.viewport(f,l,u,a);y=o}I=u;q=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,t,n){this.width=e;this.height=t;n=n||{};this.wrapS=n.wrapS!==undefined?n.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=n.wrapT!==undefined?n.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=n.magFilter!==undefined?n.magFilter:THREE.LinearFilter;this.minFilter=n.minFilter!==undefined?n.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=n.anisotropy!==undefined?n.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=n.format!==undefined?n.format:THREE.RGBAFormat;this.type=n.type!==undefined?n.type:THREE.UnsignedByteType;this.depthBuffer=n.depthBuffer!==undefined?n.depthBuffer:true;this.stencilBuffer=n.stencilBuffer!==undefined?n.stencilBuffer:true;this.generateMipmaps=true;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e;this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.format=this.format;e.type=this.type;e.depthBuffer=this.depthBuffer;e.stencilBuffer=this.stencilBuffer;e.generateMipmaps=this.generateMipmaps;e.shareDepthFrom=this.shareDepthFrom;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,t,n){THREE.WebGLRenderTarget.call(this,e,t,n);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLProgram=function(){var e=0;var t=function(e){var t,n,r=[];for(var i in e){t=e[i];if(t===false)continue;n="#define "+i+" "+t;r.push(n)}return r.join("\n")};var n=function(e,t,n){var r={};for(var i=0,s=n.length;i<s;i++){var o=n[i];r[o]=e.getUniformLocation(t,o)}return r};var r=function(e,t,n){var r={};for(var i=0,s=n.length;i<s;i++){var o=n[i];r[o]=e.getAttribLocation(t,o)}return r};return function(i,s,o,u){var a=i;var f=a.context;var l=o.defines;var c=o.__webglShader.uniforms;var h=o.attributes;var p=o.__webglShader.vertexShader;var d=o.__webglShader.fragmentShader;var v=o.index0AttributeName;if(v===undefined&&u.morphTargets===true){v="position"}var m="SHADOWMAP_TYPE_BASIC";if(u.shadowMapType===THREE.PCFShadowMap){m="SHADOWMAP_TYPE_PCF"}else if(u.shadowMapType===THREE.PCFSoftShadowMap){m="SHADOWMAP_TYPE_PCF_SOFT"}var g=t(l);var y=f.createProgram();var b,w;if(o instanceof THREE.RawShaderMaterial){b="";w=""}else{b=["precision "+u.precision+" float;","precision "+u.precision+" int;",g,u.supportsVertexTextures?"#define VERTEX_TEXTURES":"",a.gammaInput?"#define GAMMA_INPUT":"",a.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+u.maxDirLights,"#define MAX_POINT_LIGHTS "+u.maxPointLights,"#define MAX_SPOT_LIGHTS "+u.maxSpotLights,"#define MAX_HEMI_LIGHTS "+u.maxHemiLights,"#define MAX_SHADOWS "+u.maxShadows,"#define MAX_BONES "+u.maxBones,u.map?"#define USE_MAP":"",u.envMap?"#define USE_ENVMAP":"",u.lightMap?"#define USE_LIGHTMAP":"",u.bumpMap?"#define USE_BUMPMAP":"",u.normalMap?"#define USE_NORMALMAP":"",u.specularMap?"#define USE_SPECULARMAP":"",u.alphaMap?"#define USE_ALPHAMAP":"",u.vertexColors?"#define USE_COLOR":"",u.skinning?"#define USE_SKINNING":"",u.useVertexTexture?"#define BONE_TEXTURE":"",u.morphTargets?"#define USE_MORPHTARGETS":"",u.morphNormals?"#define USE_MORPHNORMALS":"",u.wrapAround?"#define WRAP_AROUND":"",u.doubleSided?"#define DOUBLE_SIDED":"",u.flipSided?"#define FLIP_SIDED":"",u.shadowMapEnabled?"#define USE_SHADOWMAP":"",u.shadowMapEnabled?"#define "+m:"",u.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",u.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",u.sizeAttenuation?"#define USE_SIZEATTENUATION":"",u.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n");w=["precision "+u.precision+" float;","precision "+u.precision+" int;",u.bumpMap||u.normalMap?"#extension GL_OES_standard_derivatives : enable":"",g,"#define MAX_DIR_LIGHTS "+u.maxDirLights,"#define MAX_POINT_LIGHTS "+u.maxPointLights,"#define MAX_SPOT_LIGHTS "+u.maxSpotLights,"#define MAX_HEMI_LIGHTS "+u.maxHemiLights,"#define MAX_SHADOWS "+u.maxShadows,u.alphaTest?"#define ALPHATEST "+u.alphaTest:"",a.gammaInput?"#define GAMMA_INPUT":"",a.gammaOutput?"#define GAMMA_OUTPUT":"",u.useFog&&u.fog?"#define USE_FOG":"",u.useFog&&u.fogExp?"#define FOG_EXP2":"",u.map?"#define USE_MAP":"",u.envMap?"#define USE_ENVMAP":"",u.lightMap?"#define USE_LIGHTMAP":"",u.bumpMap?"#define USE_BUMPMAP":"",u.normalMap?"#define USE_NORMALMAP":"",u.specularMap?"#define USE_SPECULARMAP":"",u.alphaMap?"#define USE_ALPHAMAP":"",u.vertexColors?"#define USE_COLOR":"",u.metal?"#define METAL":"",u.wrapAround?"#define WRAP_AROUND":"",u.doubleSided?"#define DOUBLE_SIDED":"",u.flipSided?"#define FLIP_SIDED":"",u.shadowMapEnabled?"#define USE_SHADOWMAP":"",u.shadowMapEnabled?"#define "+m:"",u.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",u.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",u.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n")}var E=new THREE.WebGLShader(f,f.VERTEX_SHADER,b+p);var S=new THREE.WebGLShader(f,f.FRAGMENT_SHADER,w+d);f.attachShader(y,E);f.attachShader(y,S);if(v!==undefined){f.bindAttribLocation(y,0,v)}f.linkProgram(y);if(f.getProgramParameter(y,f.LINK_STATUS)===false){console.error("THREE.WebGLProgram: Could not initialise shader.");console.error("gl.VALIDATE_STATUS",f.getProgramParameter(y,f.VALIDATE_STATUS));console.error("gl.getError()",f.getError())}if(f.getProgramInfoLog(y)!==""){console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f.getProgramInfoLog(y))}f.deleteShader(E);f.deleteShader(S);var x=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];if(u.useVertexTexture){x.push("boneTexture");x.push("boneTextureWidth");x.push("boneTextureHeight")}else{x.push("boneGlobalMatrices")}if(u.logarithmicDepthBuffer){x.push("logDepthBufFC")}for(var T in c){x.push(T)}this.uniforms=n(f,y,x);x=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var N=0;N<u.maxMorphTargets;N++){x.push("morphTarget"+N)}for(var N=0;N<u.maxMorphNormals;N++){x.push("morphNormal"+N)}for(var C in h){x.push(C)}this.attributes=r(f,y,x);this.id=e++;this.code=s;this.usedTimes=1;this.program=y;this.vertexShader=E;this.fragmentShader=S;return this}}();THREE.WebGLShader=function(){var e=function(e){var t=e.split("\n");for(var n=0;n<t.length;n++){t[n]=n+1+": "+t[n]}return t.join("\n")};return function(t,n,r){var i=t.createShader(n);t.shaderSource(i,r);t.compileShader(i);if(t.getShaderParameter(i,t.COMPILE_STATUS)===false){console.error("THREE.WebGLShader: Shader couldn't compile.")}if(t.getShaderInfoLog(i)!==""){console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(i));console.warn(e(r))}return i}}();THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=true};THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld);this.positionScreen.copy(e.positionScreen)};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.color=new THREE.Color;this.material=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.x=0;this.y=0;this.z=0;this.rotation=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;if(t instanceof THREE.Mesh){t.matrixAutoUpdate&&t.updateMatrix();r=t.matrix;t=t.geometry}e.merge(t,r,n)},center:function(e){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return e.center()}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(e,t,n,r){var i=new THREE.ImageLoader;i.crossOrigin=this.crossOrigin;var s=new THREE.Texture(undefined,t);i.load(e,function(e){s.image=e;s.needsUpdate=true;if(n)n(s)},undefined,function(e){if(r)r(e)});s.sourceFile=e;return s},loadTextureCube:function(e,t,n,r){var i=[];var s=new THREE.ImageLoader;s.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture(i,t);o.flipY=false;var u=0;var a=function(t){s.load(e[t],function(e){o.images[t]=e;u+=1;if(u===6){o.needsUpdate=true;if(n)n(o)}})};for(var f=0,l=e.length;f<l;++f){a(f)}return o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(e,t){var n=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]};var r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]};var i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=t|1;var s=e.width;var o=e.height;var u=document.createElement("canvas");u.width=s;u.height=o;var a=u.getContext("2d");a.drawImage(e,0,0);var f=a.getImageData(0,0,s,o).data;var l=a.createImageData(s,o);var c=l.data;for(var h=0;h<s;h++){for(var p=0;p<o;p++){var d=p-1<0?0:p-1;var v=p+1>o-1?o-1:p+1;var m=h-1<0?0:h-1;var g=h+1>s-1?s-1:h+1;var y=[];var b=[0,0,f[(p*s+h)*4]/255*t];y.push([-1,0,f[(p*s+m)*4]/255*t]);y.push([-1,-1,f[(d*s+m)*4]/255*t]);y.push([0,-1,f[(d*s+h)*4]/255*t]);y.push([1,-1,f[(d*s+g)*4]/255*t]);y.push([1,0,f[(p*s+g)*4]/255*t]);y.push([1,1,f[(v*s+g)*4]/255*t]);y.push([0,1,f[(v*s+h)*4]/255*t]);y.push([-1,1,f[(v*s+m)*4]/255*t]);var w=[];var E=y.length;for(var S=0;S<E;S++){var x=y[S];var T=y[(S+1)%E];x=r(x,b);T=r(T,b);w.push(i(n(x,T)))}var N=[0,0,0];for(var S=0;S<w.length;S++){N[0]+=w[S][0];N[1]+=w[S][1];N[2]+=w[S][2]}N[0]/=w.length;N[1]/=w.length;N[2]/=w.length;var C=(p*s+h)*4;c[C]=(N[0]+1)/2*255|0;c[C+1]=(N[1]+1)/2*255|0;c[C+2]=N[2]*255|0;c[C+3]=255}}a.putImageData(l,0,0);return u},generateDataTexture:function(e,t,n){var r=e*t;var i=new Uint8Array(3*r);var s=Math.floor(n.r*255);var o=Math.floor(n.g*255);var u=Math.floor(n.b*255);for(var a=0;a<r;a++){i[a*3]=s;i[a*3+1]=o;i[a*3+2]=u}var f=new THREE.DataTexture(i,e,t,THREE.RGBFormat);f.needsUpdate=true;return f}};THREE.SceneUtils={createMultiMaterialObject:function(e,t){var n=new THREE.Object3D;for(var r=0,i=t.length;r<i;r++){n.add(new THREE.Mesh(e,t[r]))}return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld);t.remove(e);n.add(e)},attach:function(e,t,n){var r=new THREE.Matrix4;r.getInverse(n.matrixWorld);e.applyMatrix(r);t.remove(e);n.add(e)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(e){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(e){var t=e.familyName.toLowerCase();var n=this;n.faces[t]=n.faces[t]||{};n.faces[t][e.cssFontWeight]=n.faces[t][e.cssFontWeight]||{};n.faces[t][e.cssFontWeight][e.cssFontStyle]=e;var r=n.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t=[],n=[];var r,i,s=this.getFace(),o=this.size/s.resolution,u=0,a=String(e).split(""),f=a.length;var l=[];for(r=0;r<f;r++){var c=new THREE.Path;var h=this.extractGlyphPoints(a[r],s,o,u,c);u+=h.offset;l.push(h.path)}var p=u/2;return{paths:l,offset:p}},extractGlyphPoints:function(e,t,n,r,i){var s=[];var o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N=t.glyphs[e]||t.glyphs["?"];if(!N)return;if(N.o){f=N._cachedOutline||(N._cachedOutline=N.o.split(" "));c=f.length;h=n;p=n;for(o=0;o<c;){l=f[o++];switch(l){case"m":d=f[o++]*h+r;v=f[o++]*p;i.moveTo(d,v);break;case"l":d=f[o++]*h+r;v=f[o++]*p;i.lineTo(d,v);break;case"q":m=f[o++]*h+r;g=f[o++]*p;w=f[o++]*h+r;E=f[o++]*p;i.quadraticCurveTo(w,E,m,g);T=s[s.length-1];if(T){y=T.x;b=T.y;for(u=1,a=this.divisions;u<=a;u++){var C=u/a;var k=THREE.Shape.Utils.b2(C,y,w,m);var L=THREE.Shape.Utils.b2(C,b,E,g)}}break;case"b":m=f[o++]*h+r;g=f[o++]*p;w=f[o++]*h+r;E=f[o++]*p;S=f[o++]*h+r;x=f[o++]*p;i.bezierCurveTo(w,E,S,x,m,g);T=s[s.length-1];if(T){y=T.x;b=T.y;for(u=1,a=this.divisions;u<=a;u++){var C=u/a;var k=THREE.Shape.Utils.b3(C,y,w,S,m);var L=THREE.Shape.Utils.b3(C,b,E,x,g)}}break}}}return{offset:N.ha*n,path:i}}};THREE.FontUtils.generateShapes=function(e,t){t=t||{};var n=t.size!==undefined?t.size:100;var r=t.curveSegments!==undefined?t.curveSegments:4;var i=t.font!==undefined?t.font:"helvetiker";var s=t.weight!==undefined?t.weight:"normal";var o=t.style!==undefined?t.style:"normal";THREE.FontUtils.size=n;THREE.FontUtils.divisions=r;THREE.FontUtils.face=i;THREE.FontUtils.weight=s;THREE.FontUtils.style=o;var u=THREE.FontUtils.drawText(e);var a=u.paths;var f=[];for(var l=0,c=a.length;l<c;l++){Array.prototype.push.apply(f,a[l].toShapes())}return f};(function(e){var t=1e-10;var n=function(e,t){var n=e.length;if(n<3)return null;var s=[],o=[],u=[];var a,f,l;if(r(e)>0){for(f=0;f<n;f++)o[f]=f}else{for(f=0;f<n;f++)o[f]=n-1-f}var c=n;var h=2*c;for(f=c-1;c>2;){if(h--<=0){console.log("Warning, unable to triangulate polygon!");if(t)return u;return s}a=f;if(c<=a)a=0;f=a+1;if(c<=f)f=0;l=f+1;if(c<=l)l=0;if(i(e,a,f,l,c,o)){var p,d,v,m,g;p=o[a];d=o[f];v=o[l];s.push([e[p],e[d],e[v]]);u.push([o[a],o[f],o[l]]);for(m=f,g=f+1;g<c;m++,g++){o[m]=o[g]}c--;h=2*c}}if(t)return u;return s};var r=function(e){var t=e.length;var n=0;for(var r=t-1,i=0;i<t;r=i++){n+=e[r].x*e[i].y-e[i].x*e[r].y}return n*.5};var i=function(e,n,r,i,s,o){var u;var a,f,l,c;var h,p,d,v;a=e[o[n]].x;f=e[o[n]].y;l=e[o[r]].x;c=e[o[r]].y;h=e[o[i]].x;p=e[o[i]].y;if(t>(l-a)*(p-f)-(c-f)*(h-a))return false;var m,g,y,b,w,E;var S,x,T,N,C,k;var L,A,O;m=h-l;g=p-c;y=a-h;b=f-p;w=l-a;E=c-f;for(u=0;u<s;u++){d=e[o[u]].x;v=e[o[u]].y;if(d===a&&v===f||d===l&&v===c||d===h&&v===p)continue;S=d-a;x=v-f;T=d-l;N=v-c;C=d-h;k=v-p;O=m*N-g*T;L=w*x-E*S;A=y*k-b*C;if(O>=-t&&A>=-t&&L>=-t)return false}return true};e.Triangulate=n;e.Triangulate.area=r;return e})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(e){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)};THREE.Curve.prototype.getPoints=function(e){if(!e)e=5;var t,n=[];for(t=0;t<=e;t++){n.push(this.getPoint(t/e))}return n};THREE.Curve.prototype.getSpacedPoints=function(e){if(!e)e=5;var t,n=[];for(t=0;t<=e;t++){n.push(this.getPointAt(t/e))}return n};THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]};THREE.Curve.prototype.getLengths=function(e){if(!e)e=this.__arcLengthDivisions?this.__arcLengthDivisions:200;if(this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var t=[];var n,r=this.getPoint(0);var i,s=0;t.push(0);for(i=1;i<=e;i++){n=this.getPoint(i/e);s+=n.distanceTo(r);t.push(s);r=n}this.cacheArcLengths=t;return t};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(e,t){var n=this.getLengths();var r=0,i=n.length;var s;if(t){s=t}else{s=e*n[i-1]}var o=0,u=i-1,a;while(o<=u){r=Math.floor(o+(u-o)/2);a=n[r]-s;if(a<0){o=r+1;continue}else if(a>0){u=r-1;continue}else{u=r;break}}r=u;if(n[r]==s){var f=r/(i-1);return f}var l=n[r];var c=n[r+1];var h=c-l;var p=(s-l)/h;var f=(r+p)/(i-1);return f};THREE.Curve.prototype.getTangent=function(e){var t=1e-4;var n=e-t;var r=e+t;if(n<0)n=0;if(r>1)r=1;var i=this.getPoint(n);var s=this.getPoint(r);var o=s.clone().sub(i);return o.normalize()};THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)};THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e,t,n,r,i){var s=6*e*e-6*e;var o=3*e*e-4*e+1;var u=-6*e*e+6*e;var a=3*e*e-2*e;return s+o+u+a},interpolate:function(e,t,n,r,i){var s=(n-e)*.5;var o=(r-t)*.5;var u=i*i;var a=i*u;return(2*t-2*n+s+o)*a+(-3*t+3*n-2*s-o)*u+s*i+t}};THREE.Curve.create=function(e,t){e.prototype=Object.create(THREE.Curve.prototype);e.prototype.getPoint=t;return e};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(e){this.curves.push(e)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){this.curves.push(new THREE.LineCurve(t,e))}};THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength();var n=this.getCurveLengths();var r=0,i,s;while(r<n.length){if(n[r]>=t){i=n[r]-t;s=this.curves[r];var o=1-i/s.getLength();return s.getPointAt(o);break}r++}return null};THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var e=[],t=0;var n,r=this.curves.length;for(n=0;n<r;n++){t+=this.curves[n].getLength();e.push(t)}this.cacheLengths=e;return e};THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints();var t,n,r;var i,s,o;t=n=Number.NEGATIVE_INFINITY;i=s=Number.POSITIVE_INFINITY;var u,a,f,l;var c=e[0]instanceof THREE.Vector3;l=c?new THREE.Vector3:new THREE.Vector2;for(a=0,f=e.length;a<f;a++){u=e[a];if(u.x>t)t=u.x;else if(u.x<i)i=u.x;if(u.y>n)n=u.y;else if(u.y<s)s=u.y;if(c){if(u.z>r)r=u.z;else if(u.z<o)o=u.z}l.add(u)}var h={minX:i,minY:s,maxX:t,maxY:n};if(c){h.maxZ=r;h.minZ=o}return h};THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,true);return this.createGeometry(t)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,true);return this.createGeometry(t)};THREE.CurvePath.prototype.createGeometry=function(e){var t=new THREE.Geometry;for(var n=0;n<e.length;n++){t.vertices.push(new THREE.Vector3(e[n].x,e[n].y,e[n].z||0))}return t};THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)};THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var n=this.getPoints(e);var r,i;if(!t){t=this.bends}for(r=0,i=t.length;r<i;r++){n=this.getWrapPoints(n,t[r])}return n};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var n=this.getSpacedPoints(e);var r,i;if(!t){t=this.bends}for(r=0,i=t.length;r<i;r++){n=this.getWrapPoints(n,t[r])}return n};THREE.CurvePath.prototype.getWrapPoints=function(e,t){var n=this.getBoundingBox();var r,i,s,o,u,a;for(r=0,i=e.length;r<i;r++){s=e[r];o=s.x;u=s.y;a=o/n.maxX;a=t.getUtoTmapping(a,o);var f=t.getPoint(a);var l=t.getTangent(a);l.set(-l.y,l.x).multiplyScalar(u);s.x=f.x+l.x;s.y=f.y+l.y}return e};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;e=true}for(var t=0,n=this.children.length;t<n;t++){this.children[t].updateMatrixWorld(e)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(e){THREE.CurvePath.call(this);this.actions=[];if(e){this.fromPoints(e)}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++){this.lineTo(e[t].x,e[t].y)}};THREE.Path.prototype.moveTo=function(e,t){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})};THREE.Path.prototype.lineTo=function(e,t){var n=Array.prototype.slice.call(arguments);var r=this.actions[this.actions.length-1].args;var i=r[r.length-2];var s=r[r.length-1];var o=new THREE.LineCurve(new THREE.Vector2(i,s),new THREE.Vector2(e,t));this.curves.push(o);this.actions.push({action:THREE.PathActions.LINE_TO,args:n})};THREE.Path.prototype.quadraticCurveTo=function(e,t,n,r){var i=Array.prototype.slice.call(arguments);var s=this.actions[this.actions.length-1].args;var o=s[s.length-2];var u=s[s.length-1];var a=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,u),new THREE.Vector2(e,t),new THREE.Vector2(n,r));this.curves.push(a);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:i})};THREE.Path.prototype.bezierCurveTo=function(e,t,n,r,i,s){var o=Array.prototype.slice.call(arguments);var u=this.actions[this.actions.length-1].args;var a=u[u.length-2];var f=u[u.length-1];var l=new THREE.CubicBezierCurve(new THREE.Vector2(a,f),new THREE.Vector2(e,t),new THREE.Vector2(n,r),new THREE.Vector2(i,s));this.curves.push(l);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})};THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments);var n=this.actions[this.actions.length-1].args;var r=n[n.length-2];var i=n[n.length-1];var s=[new THREE.Vector2(r,i)];Array.prototype.push.apply(s,e);var o=new THREE.SplineCurve(s);this.curves.push(o);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})};THREE.Path.prototype.arc=function(e,t,n,r,i,s){var o=this.actions[this.actions.length-1].args;var u=o[o.length-2];var a=o[o.length-1];this.absarc(e+u,t+a,n,r,i,s)};THREE.Path.prototype.absarc=function(e,t,n,r,i,s){this.absellipse(e,t,n,n,r,i,s)};THREE.Path.prototype.ellipse=function(e,t,n,r,i,s,o){var u=this.actions[this.actions.length-1].args;var a=u[u.length-2];var f=u[u.length-1];this.absellipse(e+a,t+f,n,r,i,s,o)};THREE.Path.prototype.absellipse=function(e,t,n,r,i,s,o){var u=Array.prototype.slice.call(arguments);var a=new THREE.EllipseCurve(e,t,n,r,i,s,o);this.curves.push(a);var f=a.getPoint(1);u.push(f.x);u.push(f.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:u})};THREE.Path.prototype.getSpacedPoints=function(e,t){if(!e)e=40;var n=[];for(var r=0;r<e;r++){n.push(this.getPoint(r/e))}return n};THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(e,t)}e=e||12;var n=[];var r,i,s,o,u;var a,f,l,c,h,p,d,v,m,g,y,b,w;for(r=0,i=this.actions.length;r<i;r++){s=this.actions[r];o=s.action;u=s.args;switch(o){case THREE.PathActions.MOVE_TO:n.push(new THREE.Vector2(u[0],u[1]));break;case THREE.PathActions.LINE_TO:n.push(new THREE.Vector2(u[0],u[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:a=u[2];f=u[3];h=u[0];p=u[1];if(n.length>0){m=n[n.length-1];d=m.x;v=m.y}else{m=this.actions[r-1].args;d=m[m.length-2];v=m[m.length-1]}for(g=1;g<=e;g++){y=g/e;b=THREE.Shape.Utils.b2(y,d,h,a);w=THREE.Shape.Utils.b2(y,v,p,f);n.push(new THREE.Vector2(b,w))}break;case THREE.PathActions.BEZIER_CURVE_TO:a=u[4];f=u[5];h=u[0];p=u[1];l=u[2];c=u[3];if(n.length>0){m=n[n.length-1];d=m.x;v=m.y}else{m=this.actions[r-1].args;d=m[m.length-2];v=m[m.length-1]}for(g=1;g<=e;g++){y=g/e;b=THREE.Shape.Utils.b3(y,d,h,l,a);w=THREE.Shape.Utils.b3(y,v,p,c,f);n.push(new THREE.Vector2(b,w))}break;case THREE.PathActions.CSPLINE_THRU:m=this.actions[r-1].args;var E=new THREE.Vector2(m[m.length-2],m[m.length-1]);var S=[E];var x=e*u[0].length;S=S.concat(u[0]);var T=new THREE.SplineCurve(S);for(g=1;g<=x;g++){n.push(T.getPointAt(g/x))}break;case THREE.PathActions.ARC:var N=u[0],C=u[1],k=u[2],L=u[3],A=u[4],O=!!u[5];var M=A-L;var _;var D=e*2;for(g=1;g<=D;g++){y=g/D;if(!O){y=1-y}_=L+y*M;b=N+k*Math.cos(_);w=C+k*Math.sin(_);n.push(new THREE.Vector2(b,w))}break;case THREE.PathActions.ELLIPSE:var N=u[0],C=u[1],P=u[2],H=u[3],L=u[4],A=u[5],O=!!u[6];var M=A-L;var _;var D=e*2;for(g=1;g<=D;g++){y=g/D;if(!O){y=1-y}_=L+y*M;b=N+P*Math.cos(_);w=C+H*Math.sin(_);n.push(new THREE.Vector2(b,w))}break}}var B=n[n.length-1];var j=1e-10;if(Math.abs(B.x-n[0].x)<j&&Math.abs(B.y-n[0].y)<j)n.splice(n.length-1,1);if(t){n.push(n[0])}return n};THREE.Path.prototype.toShapes=function(e,t){function n(e){var t,n,r,i,s;var o=[],u=new THREE.Path;for(t=0,n=e.length;t<n;t++){r=e[t];s=r.args;i=r.action;if(i==THREE.PathActions.MOVE_TO){if(u.actions.length!=0){o.push(u);u=new THREE.Path}}u[i].apply(u,s)}if(u.actions.length!=0){o.push(u)}return o}function r(e){var t=[];for(var n=0,r=e.length;n<r;n++){var i=e[n];var s=new THREE.Shape;s.actions=i.actions;s.curves=i.curves;t.push(s)}return t}function i(e,t){var n=1e-10;var r=t.length;var i=false;for(var s=r-1,o=0;o<r;s=o++){var u=t[s];var a=t[o];var f=a.x-u.x;var l=a.y-u.y;if(Math.abs(l)>n){if(l<0){u=t[o];f=-f;a=t[s];l=-l}if(e.y<u.y||e.y>a.y)continue;if(e.y==u.y){if(e.x==u.x)return true}else{var c=l*(e.x-u.x)-f*(e.y-u.y);if(c==0)return true;if(c<0)continue;i=!i}}else{if(e.y!=u.y)continue;if(a.x<=e.x&&e.x<=u.x||u.x<=e.x&&e.x<=a.x)return true}}return i}var s=n(this.actions);if(s.length==0)return[];if(t===true)return r(s);var o,u,a,f=[];if(s.length==1){u=s[0];a=new THREE.Shape;a.actions=u.actions;a.curves=u.curves;f.push(a);return f}var l=!THREE.Shape.Utils.isClockWise(s[0].getPoints());l=e?!l:l;var c=[];var h=[];var p=[];var d=0;var v;h[d]=undefined;p[d]=[];var m,g;for(m=0,g=s.length;m<g;m++){u=s[m];v=u.getPoints();o=THREE.Shape.Utils.isClockWise(v);o=e?!o:o;if(o){if(!l&&h[d])d++;h[d]={s:new THREE.Shape,p:v};h[d].s.actions=u.actions;h[d].s.curves=u.curves;if(l)d++;p[d]=[]}else{p[d].push({h:u,p:v[0]})}}if(!h[0])return r(s);if(h.length>1){var y=false;var b=[];for(var w=0,E=h.length;w<E;w++){c[w]=[]}for(var w=0,E=h.length;w<E;w++){var S=h[w];var x=p[w];for(var T=0;T<x.length;T++){var N=x[T];var C=true;for(var k=0;k<h.length;k++){if(i(N.p,h[k].p)){if(w!=k)b.push({froms:w,tos:k,hole:T});if(C){C=false;c[k].push(N)}else{y=true}}}if(C){c[w].push(N)}}}if(b.length>0){if(!y)p=c}}var L,A,O;for(m=0,g=h.length;m<g;m++){a=h[m].s;f.push(a);L=p[m];for(A=0,O=L.length;A<O;A++){a.holes.push(L[A].h)}}return f};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(e){var t=new THREE.ExtrudeGeometry(this,e);return t};THREE.Shape.prototype.makeGeometry=function(e){var t=new THREE.ShapeGeometry(this,e);return t};THREE.Shape.prototype.getPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++){r[t]=this.holes[t].getTransformedPoints(e,this.bends)}return r};THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++){r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends)}return r};THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}};THREE.Shape.prototype.extractPoints=function(e){if(this.useSpacedPoints){return this.extractAllSpacedPoints(e)}return this.extractAllPoints(e)};THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}};THREE.Shape.Utils={triangulateShape:function(e,t){function n(e,t,n){if(e.x!=t.x){if(e.x<t.x){return e.x<=n.x&&n.x<=t.x}else{return t.x<=n.x&&n.x<=e.x}}else{if(e.y<t.y){return e.y<=n.y&&n.y<=t.y}else{return t.y<=n.y&&n.y<=e.y}}}function r(e,t,r,i,s){var o=1e-10;var u=t.x-e.x,a=t.y-e.y;var f=i.x-r.x,l=i.y-r.y;var c=e.x-r.x;var h=e.y-r.y;var p=a*f-u*l;var d=a*c-u*h;if(Math.abs(p)>o){var v;if(p>0){if(d<0||d>p)return[];v=l*c-f*h;if(v<0||v>p)return[]}else{if(d>0||d<p)return[];v=l*c-f*h;if(v>0||v<p)return[]}if(v==0){if(s&&(d==0||d==p))return[];return[e]}if(v==p){if(s&&(d==0||d==p))return[];return[t]}if(d==0)return[r];if(d==p)return[i];var m=v/p;return[{x:e.x+m*u,y:e.y+m*a}]}else{if(d!=0||l*c!=f*h)return[];var g=u==0&&a==0;var y=f==0&&l==0;if(g&&y){if(e.x!=r.x||e.y!=r.y)return[];return[e]}if(g){if(!n(r,i,e))return[];return[e]}if(y){if(!n(e,t,r))return[];return[r]}var b,w,E,S;var x,T,N,C;if(u!=0){if(e.x<t.x){b=e;E=e.x;w=t;S=t.x}else{b=t;E=t.x;w=e;S=e.x}if(r.x<i.x){x=r;N=r.x;T=i;C=i.x}else{x=i;N=i.x;T=r;C=r.x}}else{if(e.y<t.y){b=e;E=e.y;w=t;S=t.y}else{b=t;E=t.y;w=e;S=e.y}if(r.y<i.y){x=r;N=r.y;T=i;C=i.y}else{x=i;N=i.y;T=r;C=r.y}}if(E<=N){if(S<N)return[];if(S==N){if(s)return[];return[x]}if(S<=C)return[x,w];return[x,T]}else{if(E>C)return[];if(E==C){if(s)return[];return[b]}if(S<=C)return[b,w];return[b,T]}}}function i(e,t,n,r){var i=1e-10;var s=t.x-e.x,o=t.y-e.y;var u=n.x-e.x,a=n.y-e.y;var f=r.x-e.x,l=r.y-e.y;var c=s*a-o*u;var h=s*l-o*f;if(Math.abs(c)>i){var p=f*a-l*u;if(c>0){return h>=0&&p>=0}else{return h>=0||p>=0}}else{return h>0}}function s(e,t){function o(e,t){var r=n.length-1;var o=e-1;if(o<0)o=r;var u=e+1;if(u>r)u=0;var a=i(n[e],n[o],n[u],s[t]);if(!a){return false}var f=s.length-1;var l=t-1;if(l<0)l=f;var c=t+1;if(c>f)c=0;a=i(s[t],s[l],s[c],n[e]);if(!a){return false}return true}function u(e,t){var i,s,o;for(i=0;i<n.length;i++){s=i+1;s%=n.length;o=r(e,t,n[i],n[s],true);if(o.length>0)return true}return false}function f(e,n){var i,s,o,u,f;for(i=0;i<a.length;i++){s=t[a[i]];for(o=0;o<s.length;o++){u=o+1;u%=s.length;f=r(e,n,s[o],s[u],true);if(f.length>0)return true}}return false}var n=e.concat();var s;var a=[];var l,c,h,p,d,v,m=[],g,y,b,w;for(var E=0,S=t.length;E<S;E++){a.push(E)}var x=0;var T=a.length*2;while(a.length>0){T--;if(T<0){console.log("Infinite Loop! Holes left:"+a.length+", Probably Hole outside Shape!");break}for(c=x;c<n.length;c++){h=n[c];l=-1;for(var E=0;E<a.length;E++){d=a[E];v=h.x+":"+h.y+":"+d;if(m[v]!==undefined)continue;s=t[d];for(var N=0;N<s.length;N++){p=s[N];if(!o(c,N))continue;if(u(h,p))continue;if(f(h,p))continue;l=N;a.splice(E,1);g=n.slice(0,c+1);y=n.slice(c);b=s.slice(l);w=s.slice(0,l+1);n=g.concat(b).concat(w).concat(y);x=c;break}if(l>=0)break;m[v]=true}if(l>=0)break}}return n}var o,u,a,f,l,c,h={};var p=e.concat();for(var d=0,v=t.length;d<v;d++){Array.prototype.push.apply(p,t[d])}for(o=0,u=p.length;o<u;o++){l=p[o].x+":"+p[o].y;if(h[l]!==undefined){console.log("Duplicate point",l)}h[l]=o}var m=s(e,t);var g=THREE.FontUtils.Triangulate(m,false);for(o=0,u=g.length;o<u;o++){f=g[o];for(a=0;a<3;a++){l=f[a].x+":"+f[a].y;c=h[l];if(c!==undefined){f[a]=c}}}return g.concat()},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var n=1-e;return n*n*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,n,r){return this.b2p0(e,t)+this.b2p1(e,n)+this.b2p2(e,r)},b3p0:function(e,t){var n=1-e;return n*n*n*t},b3p1:function(e,t){var n=1-e;return 3*n*n*e*t},b3p2:function(e,t){var n=1-e;return 3*n*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,n,r,i){return this.b3p0(e,t)+this.b3p1(e,n)+this.b3p2(e,r)+this.b3p3(e,i)}};THREE.LineCurve=function(e,t){this.v1=e;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);t.multiplyScalar(e).add(this.v1);return t};THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)};THREE.LineCurve.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()};THREE.QuadraticBezierCurve=function(e,t,n){this.v0=e;this.v1=t;this.v2=n};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,n;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);n=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(t,n)};THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,n;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x);n=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var r=new THREE.Vector2(t,n);r.normalize();return r};THREE.CubicBezierCurve=function(e,t,n,r){this.v0=e;this.v1=t;this.v2=n;this.v3=r};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,n;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);n=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(t,n)};THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,n;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);n=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var r=new THREE.Vector2(t,n);r.normalize();return r};THREE.SplineCurve=function(e){this.points=e==undefined?[]:e};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2;var n=[];var r=this.points,i,s,o;i=(r.length-1)*e;s=Math.floor(i);o=i-s;n[0]=s==0?s:s-1;n[1]=s;n[2]=s>r.length-2?r.length-1:s+1;n[3]=s>r.length-3?r.length-1:s+2;t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,o);t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,o);return t};THREE.EllipseCurve=function(e,t,n,r,i,s,o){this.aX=e;this.aY=t;this.xRadius=n;this.yRadius=r;this.aStartAngle=i;this.aEndAngle=s;this.aClockwise=o};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(e){var t;var n=this.aEndAngle-this.aStartAngle;if(n<0)n+=Math.PI*2;if(n>Math.PI*2)n-=Math.PI*2;if(this.aClockwise===true){t=this.aEndAngle+(1-e)*(Math.PI*2-n)}else{t=this.aStartAngle+e*n}var r=this.aX+this.xRadius*Math.cos(t);var i=this.aY+this.yRadius*Math.sin(t);return new THREE.Vector2(r,i)};THREE.ArcCurve=function(e,t,n,r,i,s){THREE.EllipseCurve.call(this,e,t,n,n,r,i,s)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e;this.v2=t},function(e){var t=new THREE.Vector3;t.subVectors(this.v2,this.v1);t.multiplyScalar(e);t.add(this.v1);return t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,n){this.v0=e;this.v1=t;this.v2=n},function(e){var t,n,r;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);n=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);r=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(t,n,r)});THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,n,r){this.v0=e;this.v1=t;this.v2=n;this.v3=r},function(e){var t,n,r;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);n=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);r=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(t,n,r)});THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=e==undefined?[]:e},function(e){var t=new THREE.Vector3;var n=[];var r=this.points,i,s,o;i=(r.length-1)*e;s=Math.floor(i);o=i-s;n[0]=s==0?s:s-1;n[1]=s;n[2]=s>r.length-2?r.length-1:s+1;n[3]=s>r.length-3?r.length-1:s+2;var u=r[n[0]],a=r[n[1]],f=r[n[2]],l=r[n[3]];t.x=THREE.Curve.Utils.interpolate(u.x,a.x,f.x,l.x,o);t.y=THREE.Curve.Utils.interpolate(u.y,a.y,f.y,l.y,o);t.z=THREE.Curve.Utils.interpolate(u.z,a.z,f.z,l.z,o);return t});THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=e==undefined?[]:e},function(e){var t=new THREE.Vector3;var n=[];var r=this.points,i,s,o;i=(r.length-0)*e;s=Math.floor(i);o=i-s;s+=s>0?0:(Math.floor(Math.abs(s)/r.length)+1)*r.length;n[0]=(s-1)%r.length;n[1]=s%r.length;n[2]=(s+1)%r.length;n[3]=(s+2)%r.length;t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,o);t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,o);t.z=THREE.Curve.Utils.interpolate(r[n[0]].z,r[n[1]].z,r[n[2]].z,r[n[3]].z,o);return t});THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(e){if(e.initialized===true)return;for(var t=0;t<e.hierarchy.length;t++){for(var n=0;n<e.hierarchy[t].keys.length;n++){if(e.hierarchy[t].keys[n].time<0){e.hierarchy[t].keys[n].time=0}if(e.hierarchy[t].keys[n].rot!==undefined&&!(e.hierarchy[t].keys[n].rot instanceof THREE.Quaternion)){var r=e.hierarchy[t].keys[n].rot;e.hierarchy[t].keys[n].rot=(new THREE.Quaternion).fromArray(r)}}if(e.hierarchy[t].keys.length&&e.hierarchy[t].keys[0].morphTargets!==undefined){var i={};for(var n=0;n<e.hierarchy[t].keys.length;n++){for(var s=0;s<e.hierarchy[t].keys[n].morphTargets.length;s++){var o=e.hierarchy[t].keys[n].morphTargets[s];i[o]=-1}}e.hierarchy[t].usedMorphTargets=i;for(var n=0;n<e.hierarchy[t].keys.length;n++){var u={};for(var o in i){for(var s=0;s<e.hierarchy[t].keys[n].morphTargets.length;s++){if(e.hierarchy[t].keys[n].morphTargets[s]===o){u[o]=e.hierarchy[t].keys[n].morphTargetsInfluences[s];break}}if(s===e.hierarchy[t].keys[n].morphTargets.length){u[o]=0}}e.hierarchy[t].keys[n].morphTargetsInfluences=u}}for(var n=1;n<e.hierarchy[t].keys.length;n++){if(e.hierarchy[t].keys[n].time===e.hierarchy[t].keys[n-1].time){e.hierarchy[t].keys.splice(n,1);n--}}for(var n=0;n<e.hierarchy[t].keys.length;n++){e.hierarchy[t].keys[n].index=n}}e.initialized=true;return e},parse:function(e){var t=function(e,n){n.push(e);for(var r=0;r<e.children.length;r++)t(e.children[r],n)};var n=[];if(e instanceof THREE.SkinnedMesh){for(var r=0;r<e.skeleton.bones.length;r++){n.push(e.skeleton.bones[r])}}else{t(e,n)}return n},play:function(e){if(this.animations.indexOf(e)===-1){this.animations.push(e)}},stop:function(e){var t=this.animations.indexOf(e);if(t!==-1){this.animations.splice(t,1)}},update:function(e){for(var t=0;t<this.animations.length;t++){this.animations[t].update(e)}}};THREE.Animation=function(e,t){this.root=e;this.data=THREE.AnimationHandler.init(t);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.loop=true;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(e,t){this.currentTime=e!==undefined?e:0;this.weight=t!==undefined?t:1;this.isPlaying=true;this.reset();THREE.AnimationHandler.play(this)};THREE.Animation.prototype.stop=function(){this.isPlaying=false;THREE.AnimationHandler.stop(this)};THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;e<t;e++){var n=this.hierarchy[e];n.matrixAutoUpdate=true;if(n.animationCache===undefined){n.animationCache={}}if(n.animationCache[this.data.name]===undefined){n.animationCache[this.data.name]={};n.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0};n.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0};n.animationCache[this.data.name].originalMatrix=n.matrix}var r=n.animationCache[this.data.name];for(var i=0;i<3;i++){var s=this.keyTypes[i];var o=this.data.hierarchy[e].keys[0];var u=this.getNextKeyWith(s,e,1);while(u.time<this.currentTime&&u.index>o.index){o=u;u=this.getNextKeyWith(s,e,u.index+1)}r.prevKey[s]=o;r.nextKey[s]=u}}};THREE.Animation.prototype.update=function(){var e=[];var t=new THREE.Vector3;var n=new THREE.Vector3;var r=new THREE.Quaternion;var i=function(e,t){var n=[],r=[],i,o,u,a,f,l,c,h,p;i=(e.length-1)*t;o=Math.floor(i);u=i-o;n[0]=o===0?o:o-1;n[1]=o;n[2]=o>e.length-2?o:o+1;n[3]=o>e.length-3?o:o+2;l=e[n[0]];c=e[n[1]];h=e[n[2]];p=e[n[3]];a=u*u;f=u*a;r[0]=s(l[0],c[0],h[0],p[0],u,a,f);r[1]=s(l[1],c[1],h[1],p[1],u,a,f);r[2]=s(l[2],c[2],h[2],p[2],u,a,f);return r};var s=function(e,t,n,r,i,s,o){var u=(n-e)*.5,a=(r-t)*.5;return(2*(t-n)+u+a)*o+(-3*(t-n)-2*u-a)*s+u*i+t};return function(s){if(this.isPlaying===false)return;this.currentTime+=s*this.timeScale;if(this.weight===0)return;var o=this.data.length;if(this.loop===true&&this.currentTime>o){this.currentTime%=o;this.reset()}else if(this.loop===false&&this.currentTime>o){this.stop();return}for(var u=0,a=this.hierarchy.length;u<a;u++){var f=this.hierarchy[u];var l=f.animationCache[this.data.name];for(var c=0;c<3;c++){var h=this.keyTypes[c];var p=l.prevKey[h];var d=l.nextKey[h];if(d.time<=this.currentTime){p=this.data.hierarchy[u].keys[0];d=this.getNextKeyWith(h,u,1);while(d.time<this.currentTime&&d.index>p.index){p=d;d=this.getNextKeyWith(h,u,d.index+1)}l.prevKey[h]=p;l.nextKey[h]=d}f.matrixAutoUpdate=true;f.matrixWorldNeedsUpdate=true;var v=(this.currentTime-p.time)/(d.time-p.time);var m=p[h];var g=d[h];if(v<0)v=0;if(v>1)v=1;if(h==="pos"){if(this.interpolationType===THREE.AnimationHandler.LINEAR){n.x=m[0]+(g[0]-m[0])*v;n.y=m[1]+(g[1]-m[1])*v;n.z=m[2]+(g[2]-m[2])*v;if(f instanceof THREE.Bone){var y=this.weight/(this.weight+f.accumulatedPosWeight);f.position.lerp(n,y);f.accumulatedPosWeight+=this.weight}else{f.position.copy(n)}}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){e[0]=this.getPrevKeyWith("pos",u,p.index-1)["pos"];e[1]=m;e[2]=g;e[3]=this.getNextKeyWith("pos",u,d.index+1)["pos"];v=v*.33+.33;var b=i(e,v);var y=1;if(f instanceof THREE.Bone){y=this.weight/(this.weight+f.accumulatedPosWeight);f.accumulatedPosWeight+=this.weight}var w=f.position;w.x=w.x+(b[0]-w.x)*y;w.y=w.y+(b[1]-w.y)*y;w.z=w.z+(b[2]-w.z)*y;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var E=i(e,v*1.01);t.set(E[0],E[1],E[2]);t.sub(w);t.y=0;t.normalize();var S=Math.atan2(t.x,t.z);f.rotation.set(0,S,0)}}}else if(h==="rot"){THREE.Quaternion.slerp(m,g,r,v);if(!(f instanceof THREE.Bone)){f.quaternion.copy(r)}else if(f.accumulatedRotWeight===0){f.quaternion.copy(r);f.accumulatedRotWeight=this.weight}else{var y=this.weight/(this.weight+f.accumulatedRotWeight);THREE.Quaternion.slerp(f.quaternion,r,f.quaternion,y);f.accumulatedRotWeight+=this.weight}}else if(h==="scl"){n.x=m[0]+(g[0]-m[0])*v;n.y=m[1]+(g[1]-m[1])*v;n.z=m[2]+(g[2]-m[2])*v;if(f instanceof THREE.Bone){var y=this.weight/(this.weight+f.accumulatedSclWeight);f.scale.lerp(n,y);f.accumulatedSclWeight+=this.weight}else{f.scale.copy(n)}}}}return true}}();THREE.Animation.prototype.getNextKeyWith=function(e,t,n){var r=this.data.hierarchy[t].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){n=n<r.length-1?n:r.length-1}else{n=n%r.length}for(;n<r.length;n++){if(r[n][e]!==undefined){return r[n]}}return this.data.hierarchy[t].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(e,t,n){var r=this.data.hierarchy[t].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){n=n>0?n:0}else{n=n>=0?n:n+r.length}for(;n>=0;n--){if(r[n][e]!==undefined){return r[n]}}return this.data.hierarchy[t].keys[r.length-1]};THREE.KeyFrameAnimation=function(e){this.root=e.node;this.data=THREE.AnimationHandler.init(e);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=false;this.isPaused=true;this.loop=true;for(var t=0,n=this.hierarchy.length;t<n;t++){var r=this.data.hierarchy[t].keys,i=this.data.hierarchy[t].sids,s=this.hierarchy[t];if(r.length&&i){for(var o=0;o<i.length;o++){var u=i[o],a=this.getNextKeyWith(u,t,0);if(a){a.apply(u)}}s.matrixAutoUpdate=false;this.data.hierarchy[t].node.updateMatrix();s.matrixWorldNeedsUpdate=true}}};THREE.KeyFrameAnimation.prototype.play=function(e){this.currentTime=e!==undefined?e:0;if(this.isPlaying===false){this.isPlaying=true;var t,n=this.hierarchy.length,r,i;for(t=0;t<n;t++){r=this.hierarchy[t];i=this.data.hierarchy[t];if(i.animationCache===undefined){i.animationCache={};i.animationCache.prevKey=null;i.animationCache.nextKey=null;i.animationCache.originalMatrix=r.matrix}var s=this.data.hierarchy[t].keys;if(s.length){i.animationCache.prevKey=s[0];i.animationCache.nextKey=s[1];this.startTime=Math.min(s[0].time,this.startTime);this.endTime=Math.max(s[s.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.play(this)};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.stop(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e];var n=this.data.hierarchy[e];if(n.animationCache!==undefined){var r=n.animationCache.originalMatrix;r.copy(t.matrix);t.matrix=r;delete n.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying===false)return;this.currentTime+=e*this.timeScale;var t=this.data.length;if(this.loop===true&&this.currentTime>t){this.currentTime%=t}this.currentTime=Math.min(this.currentTime,t);for(var n=0,r=this.hierarchy.length;n<r;n++){var i=this.hierarchy[n];var s=this.data.hierarchy[n];var o=s.keys,u=s.animationCache;if(o.length){var a=u.prevKey;var f=u.nextKey;if(f.time<=this.currentTime){while(f.time<this.currentTime&&f.index>a.index){a=f;f=o[a.index+1]}u.prevKey=a;u.nextKey=f}if(f.time>=this.currentTime){a.interpolate(f,this.currentTime)}else{a.interpolate(f,f.time)}this.data.hierarchy[n].node.updateMatrix();i.matrixWorldNeedsUpdate=true}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,n){var r=this.data.hierarchy[t].keys;n=n%r.length;for(;n<r.length;n++){if(r[n].hasTarget(e)){return r[n]}}return r[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,n){var r=this.data.hierarchy[t].keys;n=n>=0?n:n+r.length;for(;n>=0;n--){if(r[n].hasTarget(e)){return r[n]}}return r[r.length-1]};THREE.MorphAnimation=function(e){this.mesh=e;this.frames=e.morphTargetInfluences.length;this.currentTime=0;this.duration=1e3;this.loop=true;this.isPlaying=false};THREE.MorphAnimation.prototype={play:function(){this.isPlaying=true},pause:function(){this.isPlaying=false},update:function(){var e=0;var t=0;return function(n){if(this.isPlaying===false)return;this.currentTime+=n;if(this.loop===true&&this.currentTime>this.duration){this.currentTime%=this.duration}this.currentTime=Math.min(this.currentTime,this.duration);var r=this.duration/this.frames;var i=Math.floor(this.currentTime/r);if(i!=t){this.mesh.morphTargetInfluences[e]=0;this.mesh.morphTargetInfluences[t]=1;this.mesh.morphTargetInfluences[i]=0;e=t;t=i}this.mesh.morphTargetInfluences[i]=this.currentTime%r/r;this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[i]}}()};THREE.BoxGeometry=function(e,t,n,r,i,s){function l(e,t,n,r,i,s,u,a){var f,l,c,h=o.widthSegments,p=o.heightSegments,d=i/2,v=s/2,m=o.vertices.length;if(e==="x"&&t==="y"||e==="y"&&t==="x"){f="z"}else if(e==="x"&&t==="z"||e==="z"&&t==="x"){f="y";p=o.depthSegments}else if(e==="z"&&t==="y"||e==="y"&&t==="z"){f="x";h=o.depthSegments}var g=h+1,y=p+1,b=i/h,w=s/p,E=new THREE.Vector3;E[f]=u>0?1:-1;for(c=0;c<y;c++){for(l=0;l<g;l++){var S=new THREE.Vector3;S[e]=(l*b-d)*n;S[t]=(c*w-v)*r;S[f]=u;o.vertices.push(S)}}for(c=0;c<p;c++){for(l=0;l<h;l++){var x=l+g*c;var T=l+g*(c+1);var N=l+1+g*(c+1);var C=l+1+g*c;var k=new THREE.Vector2(l/h,1-c/p);var L=new THREE.Vector2(l/h,1-(c+1)/p);var A=new THREE.Vector2((l+1)/h,1-(c+1)/p);var O=new THREE.Vector2((l+1)/h,1-c/p);var M=new THREE.Face3(x+m,T+m,C+m);M.normal.copy(E);M.vertexNormals.push(E.clone(),E.clone(),E.clone());M.materialIndex=a;o.faces.push(M);o.faceVertexUvs[0].push([k,L,O]);M=new THREE.Face3(T+m,N+m,C+m);M.normal.copy(E);M.vertexNormals.push(E.clone(),E.clone(),E.clone());M.materialIndex=a;o.faces.push(M);o.faceVertexUvs[0].push([L.clone(),A,O.clone()])}}}THREE.Geometry.call(this);this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};this.widthSegments=r||1;this.heightSegments=i||1;this.depthSegments=s||1;var o=this;var u=e/2;var a=t/2;var f=n/2;l("z","y",-1,-1,n,t,u,0);l("z","y",1,-1,n,t,-u,1);l("x","z",1,1,e,n,a,2);l("x","z",1,-1,e,n,-a,3);l("x","y",1,-1,e,t,f,4);l("x","y",-1,-1,e,t,-f,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(e,t,n,r){THREE.Geometry.call(this);this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r};e=e||50;t=t!==undefined?Math.max(3,t):8;n=n!==undefined?n:0;r=r!==undefined?r:Math.PI*2;var i,s=[],o=new THREE.Vector3,u=new THREE.Vector2(.5,.5);this.vertices.push(o);s.push(u);for(i=0;i<=t;i++){var a=new THREE.Vector3;var f=n+i/t*r;a.x=e*Math.cos(f);a.y=e*Math.sin(f);this.vertices.push(a);s.push(new THREE.Vector2((a.x/e+1)/2,(a.y/e+1)/2))}var l=new THREE.Vector3(0,0,1);for(i=1;i<=t;i++){this.faces.push(new THREE.Face3(i,i+1,0,[l.clone(),l.clone(),l.clone()]));this.faceVertexUvs[0].push([s[i].clone(),s[i+1].clone(),u.clone()])}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(e,t,n,r,i,s){console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry.");return new THREE.BoxGeometry(e,t,n,r,i,s)};THREE.CylinderGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:s};e=e!==undefined?e:20;t=t!==undefined?t:20;n=n!==undefined?n:100;r=r||8;i=i||1;s=s!==undefined?s:false;var o=n/2;var u,a,f=[],l=[];for(a=0;a<=i;a++){var c=[];var h=[];var p=a/i;var d=p*(t-e)+e;for(u=0;u<=r;u++){var v=u/r;var m=new THREE.Vector3;m.x=d*Math.sin(v*Math.PI*2);m.y=-p*n+o;m.z=d*Math.cos(v*Math.PI*2);this.vertices.push(m);c.push(this.vertices.length-1);h.push(new THREE.Vector2(v,1-p))}f.push(c);l.push(h)}var g=(t-e)/n;var y,b;for(u=0;u<r;u++){if(e!==0){y=this.vertices[f[0][u]].clone();b=this.vertices[f[0][u+1]].clone()}else{y=this.vertices[f[1][u]].clone();b=this.vertices[f[1][u+1]].clone()}y.setY(Math.sqrt(y.x*y.x+y.z*y.z)*g).normalize();b.setY(Math.sqrt(b.x*b.x+b.z*b.z)*g).normalize();for(a=0;a<i;a++){var w=f[a][u];var E=f[a+1][u];var S=f[a+1][u+1];var x=f[a][u+1];var T=y.clone();var N=y.clone();var C=b.clone();var k=b.clone();var L=l[a][u].clone();var A=l[a+1][u].clone();var O=l[a+1][u+1].clone();var M=l[a][u+1].clone();this.faces.push(new THREE.Face3(w,E,x,[T,N,k]));this.faceVertexUvs[0].push([L,A,M]);this.faces.push(new THREE.Face3(E,S,x,[N.clone(),C,k.clone()]));this.faceVertexUvs[0].push([A.clone(),O,M.clone()])}}if(s===false&&e>0){this.vertices.push(new THREE.Vector3(0,o,0));for(u=0;u<r;u++){var w=f[0][u];var E=f[0][u+1];var S=this.vertices.length-1;var T=new THREE.Vector3(0,1,0);var N=new THREE.Vector3(0,1,0);var C=new THREE.Vector3(0,1,0);var L=l[0][u].clone();var A=l[0][u+1].clone();var O=new THREE.Vector2(A.x,0);this.faces.push(new THREE.Face3(w,E,S,[T,N,C]));this.faceVertexUvs[0].push([L,A,O])}}if(s===false&&t>0){this.vertices.push(new THREE.Vector3(0,-o,0));for(u=0;u<r;u++){var w=f[a][u+1];var E=f[a][u];var S=this.vertices.length-1;var T=new THREE.Vector3(0,-1,0);var N=new THREE.Vector3(0,-1,0);var C=new THREE.Vector3(0,-1,0);var L=l[a][u+1].clone();var A=l[a][u].clone();var O=new THREE.Vector2(A.x,1);this.faces.push(new THREE.Face3(w,E,S,[T,N,C]));this.faceVertexUvs[0].push([L,A,O])}}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(e,t){if(typeof e==="undefined"){e=[];return}THREE.Geometry.call(this);e=e instanceof Array?e:[e];this.addShapeList(e,t);this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){var n=e.length;for(var r=0;r<n;r++){var i=e[r];this.addShape(i,t)}};THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function M(e,t,n){if(!t)console.log("die");return t.clone().multiplyScalar(n).add(e)}function z(e,t,n){var r=1e-10;var i=THREE.Math.sign;var s,o,u=1;var a=e.x-t.x,f=e.y-t.y;var l=n.x-e.x,c=n.y-e.y;var h=a*a+f*f;var p=a*c-f*l;if(Math.abs(p)>r){var d=Math.sqrt(h);var v=Math.sqrt(l*l+c*c);var m=t.x-f/d;var g=t.y+a/d;var y=n.x-c/v;var b=n.y+l/v;var w=((y-m)*c-(b-g)*l)/(a*c-f*l);s=m+a*w-e.x;o=g+f*w-e.y;var E=s*s+o*o;if(E<=2){return new THREE.Vector2(s,o)}else{u=Math.sqrt(E/2)}}else{var S=false;if(a>r){if(l>r){S=true}}else{if(a<-r){if(l<-r){S=true}}else{if(i(f)==i(c)){S=true}}}if(S){s=-f;o=a;u=Math.sqrt(h)}else{s=a;o=f;u=Math.sqrt(h/2)}}return new THREE.Vector2(s/u,o/u)}function nt(){if(o){var e=0;var t=j*e;for(X=0;X<I;X++){F=A[X];ot(F[2]+t,F[1]+t,F[0]+t,true)}e=a+s*2;t=j*e;for(X=0;X<I;X++){F=A[X];ot(F[0]+t,F[1]+t,F[2]+t,false)}}else{for(X=0;X<I;X++){F=A[X];ot(F[2],F[1],F[0],true)}for(X=0;X<I;X++){F=A[X];ot(F[0]+j*a,F[1]+j*a,F[2]+j*a,false)}}}function rt(){var e=0;it(O,e);e+=O.length;for(w=0,E=k.length;w<E;w++){b=k[w];it(b,e);e+=b.length}}function it(e,t){var n,r;X=e.length;while(--X>=0){n=X;r=X-1;if(r<0)r=e.length-1;var i=0,o=a+s*2;for(i=0;i<o;i++){var u=j*i;var f=j*(i+1);var l=t+n+u,c=t+r+u,h=t+r+f,p=t+n+f;ut(l,c,h,p,e,i,o,n,r)}}}function st(e,t,n){S.vertices.push(new THREE.Vector3(e,t,n))}function ot(n,r,i,s){n+=T;r+=T;i+=T;S.faces.push(new THREE.Face3(n,r,i,null,null,h));var o=s?d.generateBottomUV(S,e,t,n,r,i):d.generateTopUV(S,e,t,n,r,i);S.faceVertexUvs[0].push(o)}function ut(n,r,i,s,o,u,a,f,l){n+=T;r+=T;i+=T;s+=T;S.faces.push(new THREE.Face3(n,r,s,null,null,p));S.faces.push(new THREE.Face3(r,i,s,null,null,p));var c=d.generateSideWallUV(S,e,o,t,n,r,i,s,u,a,f,l);S.faceVertexUvs[0].push([c[0],c[1],c[3]]);S.faceVertexUvs[0].push([c[1],c[2],c[3]])}var n=t.amount!==undefined?t.amount:100;var r=t.bevelThickness!==undefined?t.bevelThickness:6;var i=t.bevelSize!==undefined?t.bevelSize:r-2;var s=t.bevelSegments!==undefined?t.bevelSegments:3;var o=t.bevelEnabled!==undefined?t.bevelEnabled:true;var u=t.curveSegments!==undefined?t.curveSegments:12;var a=t.steps!==undefined?t.steps:1;var f=t.extrudePath;var l,c=false;var h=t.material;var p=t.extrudeMaterial;var d=t.UVGenerator!==undefined?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var v,m,g,y;if(f){l=f.getSpacedPoints(a);c=true;o=false;v=t.frames!==undefined?t.frames:new THREE.TubeGeometry.FrenetFrames(f,a,false);m=new THREE.Vector3;g=new THREE.Vector3;y=new THREE.Vector3}if(!o){s=0;r=0;i=0}var b,w,E;var S=this;var x=[];var T=this.vertices.length;var N=e.extractPoints(u);var C=N.shape;var k=N.holes;var L=!THREE.Shape.Utils.isClockWise(C);if(L){C=C.reverse();for(w=0,E=k.length;w<E;w++){b=k[w];if(THREE.Shape.Utils.isClockWise(b)){k[w]=b.reverse()}}L=false}var A=THREE.Shape.Utils.triangulateShape(C,k);var O=C;for(w=0,E=k.length;w<E;w++){b=k[w];C=C.concat(b)}var _,D,P,H,B,j=C.length,F,I=A.length,q,R=O.length;var U=180/Math.PI;var W=[];for(var X=0,V=O.length,$=V-1,J=X+1;X<V;X++,$++,J++){if($===V)$=0;if(J===V)J=0;var K=O[X];var Q=O[$];var G=O[J];W[X]=z(O[X],O[$],O[J])}var Y=[],Z,et=W.concat();for(w=0,E=k.length;w<E;w++){b=k[w];Z=[];for(X=0,V=b.length,$=V-1,J=X+1;X<V;X++,$++,J++){if($===V)$=0;if(J===V)J=0;Z[X]=z(b[X],b[$],b[J])}Y.push(Z);et=et.concat(Z)}for(_=0;_<s;_++){P=_/s;H=r*(1-P);D=i*Math.sin(P*Math.PI/2);for(X=0,V=O.length;X<V;X++){B=M(O[X],W[X],D);st(B.x,B.y,-H)}for(w=0,E=k.length;w<E;w++){b=k[w];Z=Y[w];for(X=0,V=b.length;X<V;X++){B=M(b[X],Z[X],D);st(B.x,B.y,-H)}}}D=i;for(X=0;X<j;X++){B=o?M(C[X],et[X],D):C[X];if(!c){st(B.x,B.y,0)}else{g.copy(v.normals[0]).multiplyScalar(B.x);m.copy(v.binormals[0]).multiplyScalar(B.y);y.copy(l[0]).add(g).add(m);st(y.x,y.y,y.z)}}var tt;for(tt=1;tt<=a;tt++){for(X=0;X<j;X++){B=o?M(C[X],et[X],D):C[X];if(!c){st(B.x,B.y,n/a*tt)}else{g.copy(v.normals[tt]).multiplyScalar(B.x);m.copy(v.binormals[tt]).multiplyScalar(B.y);y.copy(l[tt]).add(g).add(m);st(y.x,y.y,y.z)}}}for(_=s-1;_>=0;_--){P=_/s;H=r*(1-P);D=i*Math.sin(P*Math.PI/2);for(X=0,V=O.length;X<V;X++){B=M(O[X],W[X],D);st(B.x,B.y,n+H)}for(w=0,E=k.length;w<E;w++){b=k[w];Z=Y[w];for(X=0,V=b.length;X<V;X++){B=M(b[X],Z[X],D);if(!c){st(B.x,B.y,n+H)}else{st(B.x,B.y+l[a-1].y,l[a-1].x+H)}}}}nt();rt()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r,i,s){var o=e.vertices[r].x,u=e.vertices[r].y,a=e.vertices[i].x,f=e.vertices[i].y,l=e.vertices[s].x,c=e.vertices[s].y;return[new THREE.Vector2(o,u),new THREE.Vector2(a,f),new THREE.Vector2(l,c)]},generateBottomUV:function(e,t,n,r,i,s){return this.generateTopUV(e,t,n,r,i,s)},generateSideWallUV:function(e,t,n,r,i,s,o,u,a,f,l,c){var h=e.vertices[i].x,p=e.vertices[i].y,d=e.vertices[i].z,v=e.vertices[s].x,m=e.vertices[s].y,g=e.vertices[s].z,y=e.vertices[o].x,b=e.vertices[o].y,w=e.vertices[o].z,E=e.vertices[u].x,S=e.vertices[u].y,x=e.vertices[u].z;if(Math.abs(p-m)<.01){return[new THREE.Vector2(h,1-d),new THREE.Vector2(v,1-g),new THREE.Vector2(y,1-w),new THREE.Vector2(E,1-x)]}else{return[new THREE.Vector2(p,1-d),new THREE.Vector2(m,1-g),new THREE.Vector2(b,1-w),new THREE.Vector2(S,1-x)]}}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this);if(e instanceof Array===false)e=[e];this.addShapeList(e,t);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++){this.addShape(e[n],t)}return this};THREE.ShapeGeometry.prototype.addShape=function(e,t){if(t===undefined)t={};var n=t.curveSegments!==undefined?t.curveSegments:12;var r=t.material;var i=t.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator;var s,o,u,a;var f=this.vertices.length;var l=e.extractPoints(n);var c=l.shape;var h=l.holes;var p=!THREE.Shape.Utils.isClockWise(c);if(p){c=c.reverse();for(s=0,o=h.length;s<o;s++){u=h[s];if(THREE.Shape.Utils.isClockWise(u)){h[s]=u.reverse()}}p=false}var d=THREE.Shape.Utils.triangulateShape(c,h);var v=c;for(s=0,o=h.length;s<o;s++){u=h[s];c=c.concat(u)}var m,g=c.length;var y,b=d.length;var w,E=v.length;for(s=0;s<g;s++){m=c[s];this.vertices.push(new THREE.Vector3(m.x,m.y,0))}for(s=0;s<b;s++){y=d[s];var S=y[0]+f;var x=y[1]+f;var T=y[2]+f;this.faces.push(new THREE.Face3(S,x,T,null,null,r));this.faceVertexUvs[0].push(i.generateBottomUV(this,e,t,S,x,T))}};THREE.LatheGeometry=function(e,t,n,r){THREE.Geometry.call(this);t=t||12;n=n||0;r=r||2*Math.PI;var i=1/(e.length-1);var s=1/t;for(var o=0,u=t;o<=u;o++){var a=n+o*s*r;var f=Math.cos(a),l=Math.sin(a);for(var c=0,h=e.length;c<h;c++){var p=e[c];var d=new THREE.Vector3;d.x=f*p.x-l*p.y;d.y=l*p.x+f*p.y;d.z=p.z;this.vertices.push(d)}}var v=e.length;for(var o=0,u=t;o<u;o++){for(var c=0,h=e.length-1;c<h;c++){var m=c+v*o;var g=m;var y=m+v;var f=m+1+v;var b=m+1;var w=o*s;var E=c*i;var S=w+s;var x=E+i;this.faces.push(new THREE.Face3(g,y,b));this.faceVertexUvs[0].push([new THREE.Vector2(w,E),new THREE.Vector2(S,E),new THREE.Vector2(w,x)]);this.faces.push(new THREE.Face3(y,f,b));this.faceVertexUvs[0].push([new THREE.Vector2(S,E),new THREE.Vector2(S,x),new THREE.Vector2(w,x)])}}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(e,t,n,r){THREE.Geometry.call(this);this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i,s;var o=e/2;var u=t/2;var a=n||1;var f=r||1;var l=a+1;var c=f+1;var h=e/a;var p=t/f;var d=new THREE.Vector3(0,0,1);for(s=0;s<c;s++){var v=s*p-u;for(i=0;i<l;i++){var m=i*h-o;this.vertices.push(new THREE.Vector3(m,-v,0))}}for(s=0;s<f;s++){for(i=0;i<a;i++){var g=i+l*s;var y=i+l*(s+1);var b=i+1+l*(s+1);var w=i+1+l*s;var E=new THREE.Vector2(i/a,1-s/f);var S=new THREE.Vector2(i/a,1-(s+1)/f);var x=new THREE.Vector2((i+1)/a,1-(s+1)/f);var T=new THREE.Vector2((i+1)/a,1-s/f);var N=new THREE.Face3(g,y,w);N.normal.copy(d);N.vertexNormals.push(d.clone(),d.clone(),d.clone());this.faces.push(N);this.faceVertexUvs[0].push([E,S,T]);N=new THREE.Face3(y,b,w);N.normal.copy(d);N.vertexNormals.push(d.clone(),d.clone(),d.clone());this.faces.push(N);this.faceVertexUvs[0].push([S.clone(),x,T.clone()])}}};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);e=e||0;t=t||50;i=i!==undefined?i:0;s=s!==undefined?s:Math.PI*2;n=n!==undefined?Math.max(3,n):8;r=r!==undefined?Math.max(1,r):8;var o,u,a=[],f=e,l=(t-e)/r;for(o=0;o<r+1;o++){for(u=0;u<n+1;u++){var c=new THREE.Vector3;var h=i+u/n*s;c.x=f*Math.cos(h);c.y=f*Math.sin(h);this.vertices.push(c);a.push(new THREE.Vector2((c.x/t+1)/2,(c.y/t+1)/2))}f+=l}var p=new THREE.Vector3(0,0,1);for(o=0;o<r;o++){var d=o*(n+1);for(u=0;u<n;u++){var h=u+d;var v=h;var m=h+n+1;var g=h+n+2;this.faces.push(new THREE.Face3(v,m,g,[p.clone(),p.clone(),p.clone()]));this.faceVertexUvs[0].push([a[v].clone(),a[m].clone(),a[g].clone()]);v=h;m=h+n+2;g=h+1;this.faces.push(new THREE.Face3(v,m,g,[p.clone(),p.clone(),p.clone()]));this.faceVertexUvs[0].push([a[v].clone(),a[m].clone(),a[g].clone()])}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,f)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this);this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:o};e=e||50;t=Math.max(3,Math.floor(t)||8);n=Math.max(2,Math.floor(n)||6);r=r!==undefined?r:0;i=i!==undefined?i:Math.PI*2;s=s!==undefined?s:0;o=o!==undefined?o:Math.PI;var u,a,f=[],l=[];for(a=0;a<=n;a++){var c=[];var h=[];for(u=0;u<=t;u++){var p=u/t;var d=a/n;var v=new THREE.Vector3;v.x=-e*Math.cos(r+p*i)*Math.sin(s+d*o);v.y=e*Math.cos(s+d*o);v.z=e*Math.sin(r+p*i)*Math.sin(s+d*o);this.vertices.push(v);c.push(this.vertices.length-1);h.push(new THREE.Vector2(p,1-d))}f.push(c);l.push(h)}for(a=0;a<n;a++){for(u=0;u<t;u++){var m=f[a][u+1];var g=f[a][u];var y=f[a+1][u];var b=f[a+1][u+1];var w=this.vertices[m].clone().normalize();var E=this.vertices[g].clone().normalize();var S=this.vertices[y].clone().normalize();var x=this.vertices[b].clone().normalize();var T=l[a][u+1].clone();var N=l[a][u].clone();var C=l[a+1][u].clone();var k=l[a+1][u+1].clone();if(Math.abs(this.vertices[m].y)===e){T.x=(T.x+N.x)/2;this.faces.push(new THREE.Face3(m,y,b,[w,S,x]));this.faceVertexUvs[0].push([T,C,k])}else if(Math.abs(this.vertices[y].y)===e){C.x=(C.x+k.x)/2;this.faces.push(new THREE.Face3(m,g,y,[w,E,S]));this.faceVertexUvs[0].push([T,N,C])}else{this.faces.push(new THREE.Face3(m,g,b,[w,E,x]));this.faceVertexUvs[0].push([T,N,k]);this.faces.push(new THREE.Face3(g,y,b,[E.clone(),S,x.clone()]));this.faceVertexUvs[0].push([N.clone(),C,k.clone()])}}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,t){t=t||{};var n=THREE.FontUtils.generateShapes(e,t);t.amount=t.height!==undefined?t.height:50;if(t.bevelThickness===undefined)t.bevelThickness=10;if(t.bevelSize===undefined)t.bevelSize=8;if(t.bevelEnabled===undefined)t.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,n,t)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(e,t,n,r,i){THREE.Geometry.call(this);this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i};e=e||100;t=t||40;n=n||8;r=r||6;i=i||Math.PI*2;var s=new THREE.Vector3,o=[],u=[];for(var a=0;a<=n;a++){for(var f=0;f<=r;f++){var l=f/r*i;var c=a/n*Math.PI*2;s.x=e*Math.cos(l);s.y=e*Math.sin(l);var h=new THREE.Vector3;h.x=(e+t*Math.cos(c))*Math.cos(l);h.y=(e+t*Math.cos(c))*Math.sin(l);h.z=t*Math.sin(c);this.vertices.push(h);o.push(new THREE.Vector2(f/r,a/n));u.push(h.clone().sub(s).normalize())}}for(var a=1;a<=n;a++){for(var f=1;f<=r;f++){var p=(r+1)*a+f-1;var d=(r+1)*(a-1)+f-1;var v=(r+1)*(a-1)+f;var m=(r+1)*a+f;var g=new THREE.Face3(p,d,m,[u[p].clone(),u[d].clone(),u[m].clone()]);this.faces.push(g);this.faceVertexUvs[0].push([o[p].clone(),o[d].clone(),o[m].clone()]);g=new THREE.Face3(d,v,m,[u[d].clone(),u[v].clone(),u[m].clone()]);this.faces.push(g);this.faceVertexUvs[0].push([o[d].clone(),o[v].clone(),o[m].clone()])}}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(e,t,n,r,i,s,o){function O(e,t,n,r,i){var s=Math.cos(e);var o=Math.sin(e);var u=t/n*e;var a=Math.cos(u);var f=r*(2+a)*.5*s;var l=r*(2+a)*o*.5;var c=i*r*Math.sin(u)*.5;return new THREE.Vector3(f,l,c)}THREE.Geometry.call(this);this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,p:i,q:s,heightScale:o};e=e||100;t=t||40;n=n||64;r=r||8;i=i||2;s=s||3;o=o||1;var u=new Array(n);var a=new THREE.Vector3;var f=new THREE.Vector3;var l=new THREE.Vector3;for(var c=0;c<n;++c){u[c]=new Array(r);var h=c/n*2*i*Math.PI;var p=O(h,s,i,e,o);var d=O(h+.01,s,i,e,o);a.subVectors(d,p);f.addVectors(d,p);l.crossVectors(a,f);f.crossVectors(l,a);l.normalize();f.normalize();for(var v=0;v<r;++v){var m=v/r*2*Math.PI;var g=-t*Math.cos(m);var y=t*Math.sin(m);var b=new THREE.Vector3;b.x=p.x+g*f.x+y*l.x;b.y=p.y+g*f.y+y*l.y;b.z=p.z+g*f.z+y*l.z;u[c][v]=this.vertices.push(b)-1}}for(var c=0;c<n;++c){for(var v=0;v<r;++v){var w=(c+1)%n;var E=(v+1)%r;var S=u[c][v];var x=u[w][v];var T=u[w][E];var N=u[c][E];var C=new THREE.Vector2(c/n,v/r);var k=new THREE.Vector2((c+1)/n,v/r);var L=new THREE.Vector2((c+1)/n,(v+1)/r);var A=new THREE.Vector2(c/n,(v+1)/r);this.faces.push(new THREE.Face3(S,x,N));this.faceVertexUvs[0].push([C,k,A]);this.faces.push(new THREE.Face3(x,T,N));this.faceVertexUvs[0].push([k.clone(),L,A.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(e,t,n,r,i){function I(e,t,n){return o.vertices.push(new THREE.Vector3(e,t,n))-1}THREE.Geometry.call(this);this.parameters={path:e,segments:t,radius:n,radialSegments:r,closed:i};t=t||64;n=n||1;r=r||8;i=i||false;var s=[];var o=this,u,a,f,l=t+1,c,h,p,d,v,m,g,y,b,w,E,S=new THREE.Vector3,x,T,N,C,k,L,A,O,M,_,D,P;var H=new THREE.TubeGeometry.FrenetFrames(e,t,i),B=H.tangents,j=H.normals,F=H.binormals;this.tangents=B;this.normals=j;this.binormals=F;for(x=0;x<l;x++){s[x]=[];g=x/(l-1);E=e.getPointAt(g);u=B[x];a=j[x];f=F[x];for(T=0;T<r;T++){y=T/r*2*Math.PI;b=-n*Math.cos(y);w=n*Math.sin(y);S.copy(E);S.x+=b*a.x+w*f.x;S.y+=b*a.y+w*f.y;S.z+=b*a.z+w*f.z;s[x][T]=I(S.x,S.y,S.z)}}for(x=0;x<t;x++){for(T=0;T<r;T++){N=i?(x+1)%t:x+1;C=(T+1)%r;k=s[x][T];L=s[N][T];A=s[N][C];O=s[x][C];M=new THREE.Vector2(x/t,T/r);_=new THREE.Vector2((x+1)/t,T/r);D=new THREE.Vector2((x+1)/t,(T+1)/r);P=new THREE.Vector2(x/t,(T+1)/r);this.faces.push(new THREE.Face3(k,L,O));this.faceVertexUvs[0].push([M,_,P]);this.faces.push(new THREE.Face3(L,A,O));this.faceVertexUvs[0].push([_.clone(),D,P.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(e,t,n){function E(){u[0]=new THREE.Vector3;a[0]=new THREE.Vector3;d=Number.MAX_VALUE;v=Math.abs(o[0].x);m=Math.abs(o[0].y);g=Math.abs(o[0].z);if(v<=d){d=v;i.set(1,0,0)}if(m<=d){d=m;i.set(0,1,0)}if(g<=d){i.set(0,0,1)}f.crossVectors(o[0],i).normalize();u[0].crossVectors(o[0],f);a[0].crossVectors(o[0],u[0])}var r=new THREE.Vector3,i=new THREE.Vector3,s=new THREE.Vector3,o=[],u=[],a=[],f=new THREE.Vector3,l=new THREE.Matrix4,c=t+1,h,p=1e-4,d,v,m,g,y,b,w;this.tangents=o;this.normals=u;this.binormals=a;for(y=0;y<c;y++){b=y/(c-1);o[y]=e.getTangentAt(b);o[y].normalize()}E();for(y=1;y<c;y++){u[y]=u[y-1].clone();a[y]=a[y-1].clone();f.crossVectors(o[y-1],o[y]);if(f.length()>p){f.normalize();h=Math.acos(THREE.Math.clamp(o[y-1].dot(o[y]),-1,1));u[y].applyMatrix4(l.makeRotationAxis(f,h))}a[y].crossVectors(o[y],u[y])}if(n){h=Math.acos(THREE.Math.clamp(u[0].dot(u[c-1]),-1,1));h/=c-1;if(o[0].dot(f.crossVectors(u[0],u[c-1]))>0){h=-h}for(y=1;y<c;y++){u[y].applyMatrix4(l.makeRotationAxis(o[y],h*y));a[y].crossVectors(o[y],u[y])}}};THREE.PolyhedronGeometry=function(e,t,n,r){function E(e){var t=e.normalize().clone();t.index=i.vertices.push(t)-1;var n=T(e)/2/Math.PI+.5;var r=N(e)/Math.PI+.5;t.uv=new THREE.Vector2(n,1-r);return t}function S(e,t,n){var r=new THREE.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()]);i.faces.push(r);d.copy(e).add(t).add(n).divideScalar(3);var s=T(d);i.faceVertexUvs[0].push([C(e.uv,e,s),C(t.uv,t,s),C(n.uv,n,s)])}function x(e,t){var n=Math.pow(2,t);var r=Math.pow(4,t);var s=E(i.vertices[e.a]);var o=E(i.vertices[e.b]);var u=E(i.vertices[e.c]);var a=[];for(var f=0;f<=n;f++){a[f]=[];var l=E(s.clone().lerp(u,f/n));var c=E(o.clone().lerp(u,f/n));var h=n-f;for(var p=0;p<=h;p++){if(p==0&&f==n){a[f][p]=l}else{a[f][p]=E(l.clone().lerp(c,p/h))}}}for(var f=0;f<n;f++){for(var p=0;p<2*(n-f)-1;p++){var d=Math.floor(p/2);if(p%2==0){S(a[f][d+1],a[f+1][d],a[f][d])}else{S(a[f][d+1],a[f+1][d+1],a[f+1][d])}}}}function T(e){return Math.atan2(e.z,-e.x)}function N(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function C(e,t,n){if(n<0&&e.x===1)e=new THREE.Vector2(e.x-1,e.y);if(t.x===0&&t.z===0)e=new THREE.Vector2(n/2/Math.PI+.5,e.y);return e.clone()}THREE.Geometry.call(this);n=n||1;r=r||0;var i=this;for(var s=0,o=e.length;s<o;s+=3){E(new THREE.Vector3(e[s],e[s+1],e[s+2]))}var u=[],a=this.vertices;var f=[];for(var s=0,l=0,o=t.length;s<o;s+=3,l++){var c=a[t[s]];var h=a[t[s+1]];var p=a[t[s+2]];f[l]=new THREE.Face3(c.index,h.index,p.index,[c.clone(),h.clone(),p.clone()])}var d=new THREE.Vector3;for(var s=0,o=f.length;s<o;s++){x(f[s],r)}for(var s=0,o=this.faceVertexUvs[0].length;s<o;s++){var v=this.faceVertexUvs[0][s];var m=v[0].x;var g=v[1].x;var y=v[2].x;var b=Math.max(m,Math.max(g,y));var w=Math.min(m,Math.min(g,y));if(b>.9&&w<.1){if(m<.2)v[0].x+=1;if(g<.2)v[1].x+=1;if(y<.2)v[2].x+=1}}for(var s=0,o=this.vertices.length;s<o;s++){this.vertices[s].multiplyScalar(n)}this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var n=(1+Math.sqrt(5))/2;var r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];var i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,r,i,e,t)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,n,r,e,t)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var r=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,n,r,e,t)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(e,t,n){THREE.Geometry.call(this);var r=this.vertices;var i=this.faces;var s=this.faceVertexUvs[0];var o,u,a,f;var l,c;var h=n+1;var p=t+1;for(o=0;o<=n;o++){c=o/n;for(a=0;a<=t;a++){l=a/t;f=e(l,c);r.push(f)}}var d,v,m,g;var y,b,w,E;for(o=0;o<n;o++){for(a=0;a<t;a++){d=o*p+a;v=o*p+a+1;m=(o+1)*p+a+1;g=(o+1)*p+a;y=new THREE.Vector2(a/t,o/n);b=new THREE.Vector2((a+1)/t,o/n);w=new THREE.Vector2((a+1)/t,(o+1)/n);E=new THREE.Vector2(a/t,(o+1)/n);i.push(new THREE.Face3(d,v,g));s.push([y,b,E]);i.push(new THREE.Face3(v,m,g));s.push([b.clone(),w,E.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]);var n=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);var r=new THREE.BufferGeometry;r.addAttribute("position",new THREE.BufferAttribute(t,3));r.addAttribute("color",new THREE.BufferAttribute(n,3));var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,r,i,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(){var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var t=new THREE.CylinderGeometry(0,.5,1,5,1);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));return function(n,r,i,s,o,u){THREE.Object3D.call(this);if(s===undefined)s=16776960;if(i===undefined)i=1;if(o===undefined)o=.2*i;if(u===undefined)u=.2*o;this.position.copy(r);this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:s}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:s}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(n);this.setLength(i,o,u)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3;var t;return function(n){if(n.y>.99999){this.quaternion.set(0,0,0,1)}else if(n.y<-.99999){this.quaternion.set(1,0,0,0)}else{e.set(n.z,0,-n.x).normalize();t=Math.acos(n.y);this.quaternion.setFromAxisAngle(e,t)}}}();THREE.ArrowHelper.prototype.setLength=function(e,t,n){if(t===undefined)t=.2*e;if(n===undefined)n=.2*t;this.line.scale.set(1,e,1);this.line.updateMatrix();this.cone.scale.set(n,t,n);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e);this.cone.material.color.set(e)};THREE.BoxHelper=function(e){var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3));THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);if(e!==undefined){this.update(e)}};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;if(t.boundingBox===null){t.computeBoundingBox()}var n=t.boundingBox.min;var r=t.boundingBox.max;var i=this.geometry.attributes.position.array;i[0]=r.x;i[1]=r.y;i[2]=r.z;i[3]=n.x;i[4]=r.y;i[5]=r.z;i[6]=n.x;i[7]=r.y;i[8]=r.z;i[9]=n.x;i[10]=n.y;i[11]=r.z;i[12]=n.x;i[13]=n.y;i[14]=r.z;i[15]=r.x;i[16]=n.y;i[17]=r.z;i[18]=r.x;i[19]=n.y;i[20]=r.z;i[21]=r.x;i[22]=r.y;i[23]=r.z;i[24]=r.x;i[25]=r.y;i[26]=n.z;i[27]=n.x;i[28]=r.y;i[29]=n.z;i[30]=n.x;i[31]=r.y;i[32]=n.z;i[33]=n.x;i[34]=n.y;i[35]=n.z;i[36]=n.x;i[37]=n.y;i[38]=n.z;i[39]=r.x;i[40]=n.y;i[41]=n.z;i[42]=r.x;i[43]=n.y;i[44]=n.z;i[45]=r.x;i[46]=r.y;i[47]=n.z;i[48]=r.x;i[49]=r.y;i[50]=r.z;i[51]=r.x;i[52]=r.y;i[53]=n.z;i[54]=n.x;i[55]=r.y;i[56]=r.z;i[57]=n.x;i[58]=r.y;i[59]=n.z;i[60]=n.x;i[61]=n.y;i[62]=r.z;i[63]=n.x;i[64]=n.y;i[65]=n.z;i[66]=r.x;i[67]=n.y;i[68]=r.z;i[69]=r.x;i[70]=n.y;i[71]=n.z;this.geometry.attributes.position.needsUpdate=true;this.geometry.computeBoundingSphere();this.matrixAutoUpdate=false;this.matrixWorld=e.matrixWorld};THREE.BoundingBoxHelper=function(e,t){var n=t!==undefined?t:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:n,wireframe:true}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){function f(e,t,n){l(e,n);l(t,n)}function l(e,n){t.vertices.push(new THREE.Vector3);t.colors.push(new THREE.Color(n));if(r[e]===undefined){r[e]=[]}r[e].push(t.vertices.length-1)}var t=new THREE.Geometry;var n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});var r={};var i=16755200;var s=16711680;var o=43775;var u=16777215;var a=3355443;f("n1","n2",i);f("n2","n4",i);f("n4","n3",i);f("n3","n1",i);f("f1","f2",i);f("f2","f4",i);f("f4","f3",i);f("f3","f1",i);f("n1","f1",i);f("n2","f2",i);f("n3","f3",i);f("n4","f4",i);f("p","n1",s);f("p","n2",s);f("p","n3",s);f("p","n4",s);f("u1","u2",o);f("u2","u3",o);f("u3","u1",o);f("c","t",u);f("p","c",a);f("cn1","cn2",a);f("cn3","cn4",a);f("cf1","cf2",a);f("cf3","cf4",a);THREE.Line.call(this,t,n,THREE.LinePieces);this.camera=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=r;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Camera;var n=new THREE.Projector;return function(){function o(i,s,o,u){e.set(s,o,u);n.unprojectVector(e,t);var a=r.pointMap[i];if(a!==undefined){for(var f=0,l=a.length;f<l;f++){r.geometry.vertices[a[f]].copy(e)}}}var r=this;var i=1,s=1;t.projectionMatrix.copy(this.camera.projectionMatrix);o("c",0,0,-1);o("t",0,0,1);o("n1",-i,-s,-1);o("n2",i,-s,-1);o("n3",-i,s,-1);o("n4",i,s,-1);o("f1",-i,-s,1);o("f2",i,-s,1);o("f3",-i,s,1);o("f4",i,s,1);o("u1",i*.7,s*1.1,-1);o("u2",-i*.7,s*1.1,-1);o("u3",0,s*2,-1);o("cf1",-i,0,1);o("cf2",i,0,1);o("cf3",0,-s,1);o("cf4",0,s,1);o("cn1",-i,0,-1);o("cn2",i,0,-1);o("cn3",0,-s,-1);o("cn4",0,s,-1);this.geometry.verticesNeedUpdate=true}}();THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;t=t||1;var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var r=new THREE.LineBasicMaterial({fog:false});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(n,r);this.add(this.lightPlane);n=new THREE.Geometry;n.vertices.push(new THREE.Vector3,new THREE.Vector3);r=new THREE.LineBasicMaterial({fog:false});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(n,r);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var n=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);n.subVectors(t,e);this.lightPlane.lookAt(n);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(n);this.targetLine.geometry.verticesNeedUpdate=true;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(e,t){var n=t!==undefined?t:16777215;var r=[0,0],i={};var s=function(e,t){return e-t};var o=["a","b","c"];var u=new THREE.BufferGeometry;var a=e.geometry.clone();a.mergeVertices();a.computeFaceNormals();var f=a.vertices;var l=a.faces;var c=0;for(var h=0,p=l.length;h<p;h++){var d=l[h];for(var v=0;v<3;v++){r[0]=d[o[v]];r[1]=d[o[(v+1)%3]];r.sort(s);var m=r.toString();if(i[m]===undefined){i[m]={vert1:r[0],vert2:r[1],face1:h,face2:undefined};c++}else{i[m].face2=h}}}u.addAttribute("position",new THREE.Float32Attribute(c*2*3,3));var g=u.attributes.position.array;var y=0;for(var m in i){var b=i[m];if(b.face2===undefined||l[b.face1].normal.dot(l[b.face2].normal)<.9999){var w=f[b.vert1];g[y++]=w.x;g[y++]=w.y;g[y++]=w.z;w=f[b.vert2];g[y++]=w.x;g[y++]=w.y;g[y++]=w.z}}THREE.Line.call(this,u,new THREE.LineBasicMaterial({color:n}),THREE.LinePieces);this.matrixAutoUpdate=false;this.matrixWorld=e.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(e,t,n,r){this.object=e;this.size=t!==undefined?t:1;var i=n!==undefined?n:16776960;var s=r!==undefined?r:1;var o=new THREE.Geometry;var u=this.object.geometry.faces;for(var a=0,f=u.length;a<f;a++){o.vertices.push(new THREE.Vector3,new THREE.Vector3)}THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:i,linewidth:s}),THREE.LinePieces);this.matrixAutoUpdate=false;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices;var t=this.object;var n=t.geometry.vertices;var r=t.geometry.faces;var i=t.matrixWorld;t.updateMatrixWorld(true);this.normalMatrix.getNormalMatrix(i);for(var s=0,o=0,u=r.length;s<u;s++,o+=2){var a=r[s];e[o].copy(n[a.a]).add(n[a.b]).add(n[a.c]).divideScalar(3).applyMatrix4(i);e[o+1].copy(a.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[o])}this.geometry.verticesNeedUpdate=true;return this};THREE.GridHelper=function(e,t){var n=new THREE.Geometry;var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var i=-e;i<=e;i+=t){n.vertices.push(new THREE.Vector3(-e,0,i),new THREE.Vector3(e,0,i),new THREE.Vector3(i,0,-e),new THREE.Vector3(i,0,e));var s=i===0?this.color1:this.color2;n.colors.push(s,s,s,s)}THREE.Line.call(this,n,r,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e);this.color2.set(t);this.geometry.colorsNeedUpdate=true};THREE.HemisphereLightHelper=function(e,t,n,r){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color,new THREE.Color];var i=new THREE.SphereGeometry(t,4,2);i.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var s=0,o=8;s<o;s++){i.faces[s].color=this.colors[s<4?0:1]}var u=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(i,u);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true}}();THREE.PointLightHelper=function(e,t){this.light=e;this.light.updateMatrixWorld();var n=new THREE.SphereGeometry(t,4,2);var r=new THREE.MeshBasicMaterial({wireframe:true,fog:false});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,n,r);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=false};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);var t=new THREE.Geometry;for(var n=0;n<this.bones.length;n++){var r=this.bones[n];if(r.parent instanceof THREE.Bone){t.vertices.push(new THREE.Vector3);t.vertices.push(new THREE.Vector3);t.colors.push(new THREE.Color(0,0,1));t.colors.push(new THREE.Color(0,1,0))}}var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:false,depthWrite:false,transparent:true});THREE.Line.call(this,t,i,THREE.LinePieces);this.root=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];if(e instanceof THREE.Bone){t.push(e)}for(var n=0;n<e.children.length;n++){t.push.apply(t,this.getBoneList(e.children[n]))}return t};THREE.SkeletonHelper.prototype.update=function(){var e=this.geometry;var t=(new THREE.Matrix4).getInverse(this.root.matrixWorld);var n=new THREE.Matrix4;var r=0;for(var i=0;i<this.bones.length;i++){var s=this.bones[i];if(s.parent instanceof THREE.Bone){n.multiplyMatrices(t,s.matrixWorld);e.vertices[r].setFromMatrixPosition(n);n.multiplyMatrices(t,s.parent.matrixWorld);e.vertices[r+1].setFromMatrixPosition(n);r+=2}}e.verticesNeedUpdate=true;e.computeBoundingSphere()};THREE.SpotLightHelper=function(e){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=false;var t=new THREE.CylinderGeometry(0,1,1,8,1,true);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var n=new THREE.MeshBasicMaterial({wireframe:true,fog:false});this.cone=new THREE.Mesh(t,n);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(){var n=this.light.distance?this.light.distance:1e4;var r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n);e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(t.sub(e));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(e,t,n,r){this.object=e;this.size=t!==undefined?t:1;var i=n!==undefined?n:16711680;var s=r!==undefined?r:1;var o=new THREE.Geometry;var u=e.geometry.vertices;var a=e.geometry.faces;for(var f=0,l=a.length;f<l;f++){var c=a[f];for(var h=0,p=c.vertexNormals.length;h<p;h++){o.vertices.push(new THREE.Vector3,new THREE.Vector3)}}THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:i,linewidth:s}),THREE.LinePieces);this.matrixAutoUpdate=false;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var n=["a","b","c","d"];this.object.updateMatrixWorld(true);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var r=this.geometry.vertices;var i=this.object.geometry.vertices;var s=this.object.geometry.faces;var o=this.object.matrixWorld;var u=0;for(var a=0,f=s.length;a<f;a++){var l=s[a];for(var c=0,h=l.vertexNormals.length;c<h;c++){var p=l[n[c]];var d=i[p];var v=l.vertexNormals[c];r[u].copy(d).applyMatrix4(o);t.copy(v).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);t.add(r[u]);u=u+1;r[u].copy(t);u=u+1}}this.geometry.verticesNeedUpdate=true;return this}}();THREE.VertexTangentsHelper=function(e,t,n,r){this.object=e;this.size=t!==undefined?t:1;var i=n!==undefined?n:255;var s=r!==undefined?r:1;var o=new THREE.Geometry;var u=e.geometry.vertices;var a=e.geometry.faces;for(var f=0,l=a.length;f<l;f++){var c=a[f];for(var h=0,p=c.vertexTangents.length;h<p;h++){o.vertices.push(new THREE.Vector3);o.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:i,linewidth:s}),THREE.LinePieces);this.matrixAutoUpdate=false;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var n=["a","b","c","d"];this.object.updateMatrixWorld(true);var r=this.geometry.vertices;var i=this.object.geometry.vertices;var s=this.object.geometry.faces;var o=this.object.matrixWorld;var u=0;for(var a=0,f=s.length;a<f;a++){var l=s[a];for(var c=0,h=l.vertexTangents.length;c<h;c++){var p=l[n[c]];var d=i[p];var v=l.vertexTangents[c];r[u].copy(d).applyMatrix4(o);t.copy(v).transformDirection(o).multiplyScalar(this.size);t.add(r[u]);u=u+1;r[u].copy(t);u=u+1}}this.geometry.verticesNeedUpdate=true;return this}}();THREE.WireframeHelper=function(e,t){var n=t!==undefined?t:16777215;var r=[0,0],i={};var s=function(e,t){return e-t};var o=["a","b","c"];var u=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){var a=e.geometry.vertices;var f=e.geometry.faces;var l=0;var c=new Uint32Array(6*f.length);for(var h=0,p=f.length;h<p;h++){var d=f[h];for(var v=0;v<3;v++){r[0]=d[o[v]];r[1]=d[o[(v+1)%3]];r.sort(s);var m=r.toString();if(i[m]===undefined){c[2*l]=r[0];c[2*l+1]=r[1];i[m]=true;l++}}}var g=new Float32Array(l*2*3);for(var h=0,p=l;h<p;h++){for(var v=0;v<2;v++){var y=a[c[2*h+v]];var b=6*h+3*v;g[b+0]=y.x;g[b+1]=y.y;g[b+2]=y.z}}u.addAttribute("position",new THREE.BufferAttribute(g,3))}else if(e.geometry instanceof THREE.BufferGeometry){if(e.geometry.attributes.index!==undefined){var a=e.geometry.attributes.position.array;var w=e.geometry.attributes.index.array;var E=e.geometry.offsets;var l=0;var c=new Uint32Array(2*w.length);for(var S=0,x=E.length;S<x;++S){var T=E[S].start;var N=E[S].count;var b=E[S].index;for(var h=T,C=T+N;h<C;h+=3){for(var v=0;v<3;v++){r[0]=b+w[h+v];r[1]=b+w[h+(v+1)%3];r.sort(s);var m=r.toString();if(i[m]===undefined){c[2*l]=r[0];c[2*l+1]=r[1];i[m]=true;l++}}}}var g=new Float32Array(l*2*3);for(var h=0,p=l;h<p;h++){for(var v=0;v<2;v++){var b=6*h+3*v;var k=3*c[2*h+v];g[b+0]=a[k];g[b+1]=a[k+1];g[b+2]=a[k+2]}}u.addAttribute("position",new THREE.BufferAttribute(g,3))}else{var a=e.geometry.attributes.position.array;var l=a.length/3;var L=l/3;var g=new Float32Array(l*2*3);for(var h=0,p=L;h<p;h++){for(var v=0;v<3;v++){var b=18*h+6*v;var A=9*h+3*v;g[b+0]=a[A];g[b+1]=a[A+1];g[b+2]=a[A+2];var k=9*h+3*((v+1)%3);g[b+3]=a[k];g[b+4]=a[k+1];g[b+5]=a[k+2]}}u.addAttribute("position",new THREE.BufferAttribute(g,3))}}THREE.Line.call(this,u,new THREE.LineBasicMaterial({color:n}),THREE.LinePieces);this.matrixAutoUpdate=false;this.matrixWorld=e.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(e){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(e,t,n,r,i){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=undefined;if(e!==undefined){this.add(e,t,n,r,i)}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(e,t,n,r,i,s){if(t===undefined)t=-1;if(n===undefined)n=0;if(s===undefined)s=1;if(i===undefined)i=new THREE.Color(16777215);if(r===undefined)r=THREE.NormalBlending;n=Math.min(n,Math.max(0,n));this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:1,opacity:s,color:i,blending:r})};THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length;var n;var r=-this.positionScreen.x*2;var i=-this.positionScreen.y*2;for(e=0;e<t;e++){n=this.lensFlares[e];n.x=this.positionScreen.x+r*n.distance;n.y=this.positionScreen.y+i*n.distance;n.wantedRotation=n.x*Math.PI*.25;n.rotation+=(n.wantedRotation-n.rotation)*.25}};THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t);this.animationsMap={};this.animationsList=[];var n=this.geometry.morphTargets.length;var r="__default";var i=0;var s=n-1;var o=n/1;this.createAnimation(r,i,s,o);this.setAnimationWeight(r,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){var i={startFrame:t,endFrame:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[e]=i;this.animationsList.push(i)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){var t=/([a-z]+)_?(\d+)/;var n,r={};var i=this.geometry;for(var s=0,o=i.morphTargets.length;s<o;s++){var u=i.morphTargets[s];var a=u.name.match(t);if(a&&a.length>1){var f=a[1];var l=a[2];if(!r[f])r[f]={start:Infinity,end:-Infinity};var c=r[f];if(s<c.start)c.start=s;if(s>c.end)c.end=s;if(!n)n=f}}for(var f in r){var c=r[f];this.createAnimation(f,c.start,c.end,e)}this.firstAnimation=n};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];if(t){t.direction=1;t.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];if(t){t.direction=-1;t.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];if(n){n.fps=t;n.duration=(n.end-n.start)/n.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];if(n){n.duration=t;n.fps=(n.end-n.start)/n.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];if(n){n.weight=t}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];if(n){n.time=t}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;var n=this.animationsMap[e];if(n){t=n.time}return t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;var n=this.animationsMap[e];if(n){t=n.duration}return t};THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];if(t){t.time=0;t.active=true}else{console.warn("animation["+e+"] undefined")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];if(t){t.active=false}};THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(!r.active)continue;var i=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||r.time<0){r.direction*=-1;if(r.time>r.duration){r.time=r.duration;r.directionBackwards=true}if(r.time<0){r.time=0;r.directionBackwards=false}}}else{r.time=r.time%r.duration;if(r.time<0)r.time+=r.duration}var s=r.startFrame+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1);var o=r.weight;if(s!==r.currentFrame){this.morphTargetInfluences[r.lastFrame]=0;this.morphTargetInfluences[r.currentFrame]=1*o;this.morphTargetInfluences[s]=0;r.lastFrame=r.currentFrame;r.currentFrame=s}var u=r.time%i/i;if(r.directionBackwards)u=1-u;this.morphTargetInfluences[r.currentFrame]=u*o;this.morphTargetInfluences[r.lastFrame]=(1-u)*o}};THREE.LensFlarePlugin=function(){function s(e,n){var r=t.createProgram();var i=t.createShader(t.FRAGMENT_SHADER);var s=t.createShader(t.VERTEX_SHADER);var o="precision "+n+" float;\n";t.shaderSource(i,o+e.fragmentShader);t.shaderSource(s,o+e.vertexShader);t.compileShader(i);t.compileShader(s);t.attachShader(r,i);t.attachShader(r,s);t.linkProgram(r);return r}var e=[];var t,n,r,i={};this.init=function(e){t=e.context;n=e;r=e.getPrecision();i.vertices=new Float32Array(8+8);i.faces=new Uint16Array(6);var o=0;i.vertices[o++]=-1;i.vertices[o++]=-1;i.vertices[o++]=0;i.vertices[o++]=0;i.vertices[o++]=1;i.vertices[o++]=-1;i.vertices[o++]=1;i.vertices[o++]=0;i.vertices[o++]=1;i.vertices[o++]=1;i.vertices[o++]=1;i.vertices[o++]=1;i.vertices[o++]=-1;i.vertices[o++]=1;i.vertices[o++]=0;i.vertices[o++]=1;o=0;i.faces[o++]=0;i.faces[o++]=1;i.faces[o++]=2;i.faces[o++]=0;i.faces[o++]=2;i.faces[o++]=3;i.vertexBuffer=t.createBuffer();i.elementBuffer=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,i.vertexBuffer);t.bufferData(t.ARRAY_BUFFER,i.vertices,t.STATIC_DRAW);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.elementBuffer);t.bufferData(t.ELEMENT_ARRAY_BUFFER,i.faces,t.STATIC_DRAW);i.tempTexture=t.createTexture();i.occlusionTexture=t.createTexture();t.bindTexture(t.TEXTURE_2D,i.tempTexture);t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST);t.bindTexture(t.TEXTURE_2D,i.occlusionTexture);t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST);if(t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){i.hasVertexTexture=false;i.program=s(THREE.ShaderFlares["lensFlare"],r)}else{i.hasVertexTexture=true;i.program=s(THREE.ShaderFlares["lensFlareVertexTexture"],r)}i.attributes={};i.uniforms={};i.attributes.vertex=t.getAttribLocation(i.program,"position");i.attributes.uv=t.getAttribLocation(i.program,"uv");i.uniforms.renderType=t.getUniformLocation(i.program,"renderType");i.uniforms.map=t.getUniformLocation(i.program,"map");i.uniforms.occlusionMap=t.getUniformLocation(i.program,"occlusionMap");i.uniforms.opacity=t.getUniformLocation(i.program,"opacity");i.uniforms.color=t.getUniformLocation(i.program,"color");i.uniforms.scale=t.getUniformLocation(i.program,"scale");i.uniforms.rotation=t.getUniformLocation(i.program,"rotation");i.uniforms.screenPosition=t.getUniformLocation(i.program,"screenPosition")};this.render=function(r,s,o,u){e.length=0;r.traverseVisible(function(t){if(t instanceof THREE.LensFlare){e.push(t)}});if(e.length===0)return;var a=new THREE.Vector3;var f=u/o,l=o*.5,c=u*.5;var h=16/u,p=new THREE.Vector2(h*f,h);var d=new THREE.Vector3(1,1,0),v=new THREE.Vector2(1,1);var m=i.uniforms,g=i.attributes;t.useProgram(i.program);t.enableVertexAttribArray(i.attributes.vertex);t.enableVertexAttribArray(i.attributes.uv);t.uniform1i(m.occlusionMap,0);t.uniform1i(m.map,1);t.bindBuffer(t.ARRAY_BUFFER,i.vertexBuffer);t.vertexAttribPointer(g.vertex,2,t.FLOAT,false,2*8,0);t.vertexAttribPointer(g.uv,2,t.FLOAT,false,2*8,8);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.elementBuffer);t.disable(t.CULL_FACE);t.depthMask(false);for(var y=0,b=e.length;y<b;y++){h=16/u;p.set(h*f,h);var w=e[y];a.set(w.matrixWorld.elements[12],w.matrixWorld.elements[13],w.matrixWorld.elements[14]);a.applyMatrix4(s.matrixWorldInverse);a.applyProjection(s.projectionMatrix);d.copy(a);v.x=d.x*l+l;v.y=d.y*c+c;if(i.hasVertexTexture||v.x>0&&v.x<o&&v.y>0&&v.y<u){t.activeTexture(t.TEXTURE1);t.bindTexture(t.TEXTURE_2D,i.tempTexture);t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,v.x-8,v.y-8,16,16,0);t.uniform1i(m.renderType,0);t.uniform2f(m.scale,p.x,p.y);t.uniform3f(m.screenPosition,d.x,d.y,d.z);t.disable(t.BLEND);t.enable(t.DEPTH_TEST);t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0);t.activeTexture(t.TEXTURE0);t.bindTexture(t.TEXTURE_2D,i.occlusionTexture);t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,v.x-8,v.y-8,16,16,0);t.uniform1i(m.renderType,1);t.disable(t.DEPTH_TEST);t.activeTexture(t.TEXTURE1);t.bindTexture(t.TEXTURE_2D,i.tempTexture);t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0);w.positionScreen.copy(d);if(w.customUpdateCallback){w.customUpdateCallback(w)}else{w.updateLensFlares()}t.uniform1i(m.renderType,2);t.enable(t.BLEND);for(var E=0,S=w.lensFlares.length;E<S;E++){var x=w.lensFlares[E];if(x.opacity>.001&&x.scale>.001){d.x=x.x;d.y=x.y;d.z=x.z;h=x.size*x.scale/u;p.x=h*f;p.y=h;t.uniform3f(m.screenPosition,d.x,d.y,d.z);t.uniform2f(m.scale,p.x,p.y);t.uniform1f(m.rotation,x.rotation);t.uniform1f(m.opacity,x.opacity);t.uniform3f(m.color,x.color.r,x.color.g,x.color.b);n.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst);n.setTexture(x.texture,1);t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)}}}}t.enable(t.CULL_FACE);t.enable(t.DEPTH_TEST);t.depthMask(true)};};THREE.ShadowMapPlugin=function(){function h(e,t,n){if(t.visible){var r=e.__webglObjects[t.id];if(r&&t.castShadow&&(t.frustumCulled===false||o.intersectsObject(t)===true)){for(var i=0,s=r.length;i<s;i++){var u=r[i];t._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld);c.push(u)}}for(var i=0,s=t.children.length;i<s;i++){h(e,t.children[i],n)}}}function p(e,t){var n=new THREE.DirectionalLight;n.isVirtual=true;n.onlyShadow=true;n.castShadow=true;n.shadowCameraNear=e.shadowCameraNear;n.shadowCameraFar=e.shadowCameraFar;n.shadowCameraLeft=e.shadowCameraLeft;n.shadowCameraRight=e.shadowCameraRight;n.shadowCameraBottom=e.shadowCameraBottom;n.shadowCameraTop=e.shadowCameraTop;n.shadowCameraVisible=e.shadowCameraVisible;n.shadowDarkness=e.shadowDarkness;n.shadowBias=e.shadowCascadeBias[t];n.shadowMapWidth=e.shadowCascadeWidth[t];n.shadowMapHeight=e.shadowCascadeHeight[t];n.pointsWorld=[];n.pointsFrustum=[];var r=n.pointsWorld,i=n.pointsFrustum;for(var s=0;s<8;s++){r[s]=new THREE.Vector3;i[s]=new THREE.Vector3}var o=e.shadowCascadeNearZ[t];var u=e.shadowCascadeFarZ[t];i[0].set(-1,-1,o);i[1].set(1,-1,o);i[2].set(-1,1,o);i[3].set(1,1,o);i[4].set(-1,-1,u);i[5].set(1,-1,u);i[6].set(-1,1,u);i[7].set(1,1,u);return n}function d(e,t){var n=e.shadowCascadeArray[t];n.position.copy(e.position);n.target.position.copy(e.target.position);n.lookAt(n.target);n.shadowCameraVisible=e.shadowCameraVisible;n.shadowDarkness=e.shadowDarkness;n.shadowBias=e.shadowCascadeBias[t];var r=e.shadowCascadeNearZ[t];var i=e.shadowCascadeFarZ[t];var s=n.pointsFrustum;s[0].z=r;s[1].z=r;s[2].z=r;s[3].z=r;s[4].z=i;s[5].z=i;s[6].z=i;s[7].z=i}function v(e,t){var n=t.shadowCamera,r=t.pointsFrustum,i=t.pointsWorld;a.set(Infinity,Infinity,Infinity);f.set(-Infinity,-Infinity,-Infinity);for(var s=0;s<8;s++){var o=i[s];o.copy(r[s]);THREE.ShadowMapPlugin.__projector.unprojectVector(o,e);o.applyMatrix4(n.matrixWorldInverse);if(o.x<a.x)a.x=o.x;if(o.x>f.x)f.x=o.x;if(o.y<a.y)a.y=o.y;if(o.y>f.y)f.y=o.y;if(o.z<a.z)a.z=o.z;if(o.z>f.z)f.z=o.z}n.left=a.x;n.right=f.x;n.top=f.y;n.bottom=a.y;n.updateProjectionMatrix()}function m(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector3,c=[];this.init=function(o){e=o.context;t=o;var u=THREE.ShaderLib["depthRGBA"];var a=THREE.UniformsUtils.clone(u.uniforms);n=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a});r=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,morphTargets:true});i=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,skinning:true});s=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,morphTargets:true,skinning:true});n._shadowPass=true;r._shadowPass=true;i._shadowPass=true;s._shadowPass=true};this.render=function(e,n){if(!(t.shadowMapEnabled&&t.shadowMapAutoUpdate))return;this.update(e,n)};this.update=function(a,f){var g,y,b,w,E,S,x,T,N,C,k,L,A,O,M=[],_=0,D=null;e.clearColor(1,1,1,1);e.disable(e.BLEND);e.enable(e.CULL_FACE);e.frontFace(e.CCW);if(t.shadowMapCullFace===THREE.CullFaceFront){e.cullFace(e.FRONT)}else{e.cullFace(e.BACK)}t.setDepthTest(true);for(g=0,y=a.__lights.length;g<y;g++){O=a.__lights[g];if(!O.castShadow)continue;if(O instanceof THREE.DirectionalLight&&O.shadowCascade){for(E=0;E<O.shadowCascadeCount;E++){var P;if(!O.shadowCascadeArray[E]){P=p(O,E);P.originalCamera=f;var H=new THREE.Gyroscope;H.position.copy(O.shadowCascadeOffset);H.add(P);H.add(P.target);f.add(H);O.shadowCascadeArray[E]=P;console.log("Created virtualLight",P)}else{P=O.shadowCascadeArray[E]}d(O,E);M[_]=P;_++}}else{M[_]=O;_++}}for(g=0,y=M.length;g<y;g++){O=M[g];if(!O.shadowMap){var B=THREE.LinearFilter;if(t.shadowMapType===THREE.PCFSoftShadowMap){B=THREE.NearestFilter}var j={minFilter:B,magFilter:B,format:THREE.RGBAFormat};O.shadowMap=new THREE.WebGLRenderTarget(O.shadowMapWidth,O.shadowMapHeight,j);O.shadowMapSize=new THREE.Vector2(O.shadowMapWidth,O.shadowMapHeight);O.shadowMatrix=new THREE.Matrix4}if(!O.shadowCamera){if(O instanceof THREE.SpotLight){O.shadowCamera=new THREE.PerspectiveCamera(O.shadowCameraFov,O.shadowMapWidth/O.shadowMapHeight,O.shadowCameraNear,O.shadowCameraFar)}else if(O instanceof THREE.DirectionalLight){O.shadowCamera=new THREE.OrthographicCamera(O.shadowCameraLeft,O.shadowCameraRight,O.shadowCameraTop,O.shadowCameraBottom,O.shadowCameraNear,O.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}a.add(O.shadowCamera);if(a.autoUpdate===true)a.updateMatrixWorld()}if(O.shadowCameraVisible&&!O.cameraHelper){O.cameraHelper=new THREE.CameraHelper(O.shadowCamera);O.shadowCamera.add(O.cameraHelper)}if(O.isVirtual&&P.originalCamera==f){v(f,O)}S=O.shadowMap;x=O.shadowMatrix;T=O.shadowCamera;T.position.setFromMatrixPosition(O.matrixWorld);l.setFromMatrixPosition(O.target.matrixWorld);T.lookAt(l);T.updateMatrixWorld();T.matrixWorldInverse.getInverse(T.matrixWorld);if(O.cameraHelper)O.cameraHelper.visible=O.shadowCameraVisible;if(O.shadowCameraVisible)O.cameraHelper.update();x.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);x.multiply(T.projectionMatrix);x.multiply(T.matrixWorldInverse);u.multiplyMatrices(T.projectionMatrix,T.matrixWorldInverse);o.setFromMatrix(u);t.setRenderTarget(S);t.clear();c.length=0;h(a,a,T);var F,I,q;for(b=0,w=c.length;b<w;b++){L=c[b];A=L.object;C=L.buffer;F=m(A);I=A.geometry.morphTargets!==undefined&&A.geometry.morphTargets.length>0&&F.morphTargets;q=A instanceof THREE.SkinnedMesh&&F.skinning;if(A.customDepthMaterial){k=A.customDepthMaterial}else if(q){k=I?s:i}else if(I){k=r}else{k=n}t.setMaterialFaces(F);if(C instanceof THREE.BufferGeometry){t.renderBufferDirect(T,a.__lights,D,k,C,A)}else{t.renderBuffer(T,a.__lights,D,k,C,A)}}var R=a.__webglObjectsImmediate;for(b=0,w=R.length;b<w;b++){L=R[b];A=L.object;if(A.visible&&A.castShadow){A._modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,A.matrixWorld);t.renderImmediateObject(T,a.__lights,D,n,A)}}}var U=t.getClearColor(),z=t.getClearAlpha();e.clearColor(U.r,U.g,U.b,z);e.enable(e.BLEND);if(t.shadowMapCullFace===THREE.CullFaceFront){e.cullFace(e.BACK)}};};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function c(){var n=e.createProgram();var r=e.createShader(e.VERTEX_SHADER);var i=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(r,["precision "+t.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n"));e.shaderSource(i,["precision "+t.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n"));e.compileShader(r);e.compileShader(i);e.attachShader(n,r);e.attachShader(n,i);e.linkProgram(n);return n}function h(e,t){if(e.z!==t.z){return t.z-e.z}else{return t.id-e.id}}var e,t,n;var r=[];var i,s,o,u;var a,f,l;this.init=function(r){e=r.context;t=r;i=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);s=new Uint16Array([0,1,2,0,2,3]);o=e.createBuffer();u=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,o);e.bufferData(e.ARRAY_BUFFER,i,e.STATIC_DRAW);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u);e.bufferData(e.ELEMENT_ARRAY_BUFFER,s,e.STATIC_DRAW);a=c();f={position:e.getAttribLocation(a,"position"),uv:e.getAttribLocation(a,"uv")};l={uvOffset:e.getUniformLocation(a,"uvOffset"),uvScale:e.getUniformLocation(a,"uvScale"),rotation:e.getUniformLocation(a,"rotation"),scale:e.getUniformLocation(a,"scale"),color:e.getUniformLocation(a,"color"),map:e.getUniformLocation(a,"map"),opacity:e.getUniformLocation(a,"opacity"),modelViewMatrix:e.getUniformLocation(a,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(a,"projectionMatrix"),fogType:e.getUniformLocation(a,"fogType"),fogDensity:e.getUniformLocation(a,"fogDensity"),fogNear:e.getUniformLocation(a,"fogNear"),fogFar:e.getUniformLocation(a,"fogFar"),fogColor:e.getUniformLocation(a,"fogColor"),alphaTest:e.getUniformLocation(a,"alphaTest")};var h=document.createElement("canvas");h.width=8;h.height=8;var p=h.getContext("2d");p.fillStyle="white";p.fillRect(0,0,8,8);n=new THREE.Texture(h);n.needsUpdate=true};this.render=function(i,s,c,p){r.length=0;i.traverseVisible(function(e){if(e instanceof THREE.Sprite){r.push(e)}});if(r.length===0)return;e.useProgram(a);e.enableVertexAttribArray(f.position);e.enableVertexAttribArray(f.uv);e.disable(e.CULL_FACE);e.enable(e.BLEND);e.bindBuffer(e.ARRAY_BUFFER,o);e.vertexAttribPointer(f.position,2,e.FLOAT,false,2*8,0);e.vertexAttribPointer(f.uv,2,e.FLOAT,false,2*8,8);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u);e.uniformMatrix4fv(l.projectionMatrix,false,s.projectionMatrix.elements);e.activeTexture(e.TEXTURE0);e.uniform1i(l.map,0);var d=0;var v=0;var m=i.fog;if(m){e.uniform3f(l.fogColor,m.color.r,m.color.g,m.color.b);if(m instanceof THREE.Fog){e.uniform1f(l.fogNear,m.near);e.uniform1f(l.fogFar,m.far);e.uniform1i(l.fogType,1);d=1;v=1}else if(m instanceof THREE.FogExp2){e.uniform1f(l.fogDensity,m.density);e.uniform1i(l.fogType,2);d=2;v=2}}else{e.uniform1i(l.fogType,0);d=0;v=0}for(var g=0,y=r.length;g<y;g++){var b=r[g];var w=b.material;b._modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,b.matrixWorld);b.z=-b._modelViewMatrix.elements[14]}r.sort(h);var E=[];for(var g=0,y=r.length;g<y;g++){var b=r[g];var w=b.material;e.uniform1f(l.alphaTest,w.alphaTest);e.uniformMatrix4fv(l.modelViewMatrix,false,b._modelViewMatrix.elements);E[0]=b.scale.x;E[1]=b.scale.y;var S=0;if(i.fog&&w.fog){S=v}if(d!==S){e.uniform1i(l.fogType,S);d=S}if(w.map!==null){e.uniform2f(l.uvOffset,w.map.offset.x,w.map.offset.y);e.uniform2f(l.uvScale,w.map.repeat.x,w.map.repeat.y)}else{e.uniform2f(l.uvOffset,0,0);e.uniform2f(l.uvScale,1,1)}e.uniform1f(l.opacity,w.opacity);e.uniform3f(l.color,w.color.r,w.color.g,w.color.b);e.uniform1f(l.rotation,w.rotation);e.uniform2fv(l.scale,E);t.setBlending(w.blending,w.blendEquation,w.blendSrc,w.blendDst);t.setDepthTest(w.depthTest);t.setDepthWrite(w.depthWrite);if(w.map&&w.map.image&&w.map.image.width){t.setTexture(w.map,0)}else{t.setTexture(n,0)}e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}e.enable(e.CULL_FACE)};};THREE.DepthPassPlugin=function(){function f(e,t,n){if(t.visible){var r=e.__webglObjects[t.id];if(r&&(t.frustumCulled===false||o.intersectsObject(t)===true)){for(var i=0,s=r.length;i<s;i++){var u=r[i];t._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld);a.push(u)}}for(var i=0,s=t.children.length;i<s;i++){f(e,t.children[i],n)}}}function l(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.enabled=false;this.renderTarget=null;var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4,a=[];this.init=function(o){e=o.context;t=o;var u=THREE.ShaderLib["depthRGBA"];var a=THREE.UniformsUtils.clone(u.uniforms);n=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a});r=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,morphTargets:true});i=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,skinning:true});s=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,morphTargets:true,skinning:true});n._shadowPass=true;r._shadowPass=true;i._shadowPass=true;s._shadowPass=true};this.render=function(e,t){if(!this.enabled)return;this.update(e,t)};this.update=function(c,h){var p,d,v,m,g,y,b,w,E,S,x,T,N=null;e.clearColor(1,1,1,1);e.disable(e.BLEND);t.setDepthTest(true);if(c.autoUpdate===true)c.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);u.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse);o.setFromMatrix(u);t.setRenderTarget(this.renderTarget);t.clear();a.length=0;f(c,c,h);var C,k,L;for(v=0,m=a.length;v<m;v++){E=a[v];S=E.object;b=E.buffer;if(S instanceof THREE.PointCloud&&!S.customDepthMaterial)continue;C=l(S);if(C)t.setMaterialFaces(S.material);k=S.geometry.morphTargets!==undefined&&S.geometry.morphTargets.length>0&&C.morphTargets;L=S instanceof THREE.SkinnedMesh&&C.skinning;if(S.customDepthMaterial){w=S.customDepthMaterial}else if(L){w=k?s:i}else if(k){w=r}else{w=n}if(b instanceof THREE.BufferGeometry){t.renderBufferDirect(h,c.__lights,N,w,b,S)}else{t.renderBuffer(h,c.__lights,N,w,b,S)}}T=c.__webglObjectsImmediate;for(v=0,m=T.length;v<m;v++){E=T[v];S=E.object;if(S.visible){S._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,S.matrixWorld);t.renderImmediateObject(h,c.__lights,N,n,S)}}var A=t.getClearColor(),O=t.getClearAlpha();e.clearColor(A.r,A.g,A.b,O);e.enable(e.BLEND)};};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};THREE.OBJLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(e,t,n,r){var i=this;var s=new THREE.XHRLoader(i.manager);s.setCrossOrigin(this.crossOrigin);s.load(e,function(e){t(i.parse(e))})},parse:function(e){function t(e,t,n){return new THREE.Vector3(parseFloat(e),parseFloat(t),parseFloat(n))}function n(e,t){return new THREE.Vector2(parseFloat(e),parseFloat(t))}function r(e,t,n,r){return new THREE.Face3(e,t,n,r)}function a(e){e=parseInt(e);return e>=0?e-1:e+d.length}function f(e){e=parseInt(e);return e>=0?e-1:e+v.length}function l(e){e=parseInt(e);return e>=0?e-1:e+m.length}function c(e,t,n,i){if(i===undefined){s.faces.push(r(d[a(e)]-1,d[a(t)]-1,d[a(n)]-1))}else{s.faces.push(r(d[a(e)]-1,d[a(t)]-1,d[a(n)]-1,[v[f(i[0])].clone(),v[f(i[1])].clone(),v[f(i[2])].clone()]))}}function h(e,t,n){s.faceVertexUvs[0].push([m[l(e)].clone(),m[l(t)].clone(),m[l(n)].clone()])}function p(e,t,n){if(e[3]===undefined){c(e[0],e[1],e[2],n);if(t!==undefined&&t.length>0){h(t[0],t[1],t[2])}}else{if(n!==undefined&&n.length>0){c(e[0],e[1],e[3],[n[0],n[1],n[3]]);c(e[1],e[2],e[3],[n[1],n[2],n[3]])}else{c(e[0],e[1],e[3]);c(e[1],e[2],e[3])}if(t!==undefined&&t.length>0){h(t[0],t[1],t[3]);h(t[1],t[2],t[3])}}}var i=new THREE.Object3D;var s,o,u;if(/^o /gm.test(e)===false){s=new THREE.Geometry;o=new THREE.MeshLambertMaterial;u=new THREE.Mesh(s,o);i.add(u)}var d=[];var v=[];var m=[];var g=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/;var y=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/;var b=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/;var w=/f( +-?\d+)( +-?\d+)( +-?\d+)( +-?\d+)?/;var E=/f( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))?/;var S=/f( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))?/;var x=/f( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))?/;e=e.replace(/\\\r\n/g,"");var T=e.split("\n");for(var N=0;N<T.length;N++){var C=T[N];C=C.trim();var k;if(C.length===0||C.charAt(0)==="#"){continue}else if((k=g.exec(C))!==null){d.push(s.vertices.push(t(k[1],k[2],k[3])))}else if((k=y.exec(C))!==null){v.push(t(k[1],k[2],k[3]))}else if((k=b.exec(C))!==null){m.push(n(k[1],k[2]))}else if((k=w.exec(C))!==null){p([k[1],k[2],k[3],k[4]])}else if((k=E.exec(C))!==null){p([k[2],k[5],k[8],k[11]],[k[3],k[6],k[9],k[12]])}else if((k=S.exec(C))!==null){p([k[2],k[6],k[10],k[14]],[k[3],k[7],k[11],k[15]],[k[4],k[8],k[12],k[16]])}else if((k=x.exec(C))!==null){p([k[2],k[5],k[8],k[11]],[],[k[3],k[6],k[9],k[12]])}else if(/^o /.test(C)){s=new THREE.Geometry;o=new THREE.MeshLambertMaterial;u=new THREE.Mesh(s,o);u.name=C.substring(2).trim();i.add(u)}else if(/^g /.test(C)){}else if(/^usemtl /.test(C)){o.name=C.substring(7).trim()}else if(/^mtllib /.test(C)){}else if(/^s /.test(C)){}else{}}var L=i.children;for(var N=0,A=L.length;N<A;N++){var s=L[N].geometry;s.computeFaceNormals();s.computeBoundingSphere()}return i}};THREE.TrackballControls=function(e,t){function g(e){if(n.enabled===false)return;window.removeEventListener("keydown",g);o=s;if(s!==r.NONE){return}else if(e.keyCode===n.keys[r.ROTATE]&&!n.noRotate){s=r.ROTATE}else if(e.keyCode===n.keys[r.ZOOM]&&!n.noZoom){s=r.ZOOM}else if(e.keyCode===n.keys[r.PAN]&&!n.noPan){s=r.PAN}}function y(e){if(n.enabled===false)return;s=o;window.addEventListener("keydown",g,false)}function b(e){if(n.enabled===false)return;e.preventDefault();e.stopPropagation();if(s===r.NONE){s=e.button}if(s===r.ROTATE&&!n.noRotate){a=n.getMouseProjectionOnBall(e.clientX,e.clientY);f.copy(a)}else if(s===r.ZOOM&&!n.noZoom){l=n.getMouseOnScreen(e.clientX,e.clientY);c.copy(l)}else if(s===r.PAN&&!n.noPan){d=n.getMouseOnScreen(e.clientX,e.clientY);v.copy(d)}document.addEventListener("mousemove",w,false);document.addEventListener("mouseup",E,false)}function w(e){if(n.enabled===false)return;e.preventDefault();e.stopPropagation();if(s===r.ROTATE&&!n.noRotate){f=n.getMouseProjectionOnBall(e.clientX,e.clientY)}else if(s===r.ZOOM&&!n.noZoom){c=n.getMouseOnScreen(e.clientX,e.clientY)}else if(s===r.PAN&&!n.noPan){v=n.getMouseOnScreen(e.clientX,e.clientY)}}function E(e){if(n.enabled===false)return;e.preventDefault();e.stopPropagation();s=r.NONE;document.removeEventListener("mousemove",w);document.removeEventListener("mouseup",E)}function S(e){if(n.enabled===false)return;e.preventDefault();e.stopPropagation();var t=0;if(e.wheelDelta){t=e.wheelDelta/40}else if(e.detail){t=-e.detail/3}l.y+=t*.01}function x(e){if(n.enabled===false)return;switch(e.touches.length){case 1:s=r.TOUCH_ROTATE;a=f=n.getMouseProjectionOnBall(e.touches[0].pageX,e.touches[0].pageY);break;case 2:s=r.TOUCH_ZOOM;var t=e.touches[0].pageX-e.touches[1].pageX;var i=e.touches[0].pageY-e.touches[1].pageY;p=h=Math.sqrt(t*t+i*i);break;case 3:s=r.TOUCH_PAN;d=v=n.getMouseOnScreen(e.touches[0].pageX,e.touches[0].pageY);break;default:s=r.NONE}}function T(e){if(n.enabled===false)return;e.preventDefault();e.stopPropagation();switch(e.touches.length){case 1:f=n.getMouseProjectionOnBall(e.touches[0].pageX,e.touches[0].pageY);break;case 2:var t=e.touches[0].pageX-e.touches[1].pageX;var i=e.touches[0].pageY-e.touches[1].pageY;p=Math.sqrt(t*t+i*i);break;case 3:v=n.getMouseOnScreen(e.touches[0].pageX,e.touches[0].pageY);break;default:s=r.NONE}}function N(e){if(n.enabled===false)return;switch(e.touches.length){case 1:a=f=n.getMouseProjectionOnBall(e.touches[0].pageX,e.touches[0].pageY);break;case 2:h=p=0;break;case 3:d=v=n.getMouseOnScreen(e.touches[0].pageX,e.touches[0].pageY);break}s=r.NONE}var n=this;var r={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM:4,TOUCH_PAN:5};this.object=e;this.domElement=t!==undefined?t:document;this.enabled=true;this.screen={left:0,top:0,width:0,height:0};this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=.3;this.noRotate=false;this.noZoom=false;this.noPan=false;this.noRoll=false;this.staticMoving=false;this.dynamicDampingFactor=.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var i=new THREE.Vector3;var s=r.NONE,o=r.NONE,u=new THREE.Vector3,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector2,c=new THREE.Vector2,h=0,p=0,d=new THREE.Vector2,v=new THREE.Vector2;this.target0=this.target.clone();this.position0=this.object.position.clone();this.up0=this.object.up.clone();var m={type:"change"};this.handleResize=function(){if(this.domElement===document){this.screen.left=0;this.screen.top=0;this.screen.width=window.innerWidth;this.screen.height=window.innerHeight}else{this.screen=this.domElement.getBoundingClientRect()}};this.handleEvent=function(e){if(typeof this[e.type]=="function"){this[e.type](e)}};this.getMouseOnScreen=function(e,t){return new THREE.Vector2((e-n.screen.left)/n.screen.width,(t-n.screen.top)/n.screen.height)};this.getMouseProjectionOnBall=function(e,t){var r=new THREE.Vector3((e-n.screen.width*.5-n.screen.left)/(n.screen.width*.5),(n.screen.height*.5+n.screen.top-t)/(n.screen.height*.5),0);var i=r.length();if(n.noRoll){if(i<Math.SQRT1_2){r.z=Math.sqrt(1-i*i)}else{r.z=.5/i}}else if(i>1){r.normalize()}else{r.z=Math.sqrt(1-i*i)}u.copy(n.object.position).sub(n.target);var s=n.object.up.clone().setLength(r.y);s.add(n.object.up.clone().cross(u).setLength(r.x));s.add(u.setLength(r.z));return s};this.rotateCamera=function(){var e=Math.acos(a.dot(f)/a.length()/f.length());if(e){var t=(new THREE.Vector3).crossVectors(a,f).normalize(),r=new THREE.Quaternion;e*=n.rotateSpeed;r.setFromAxisAngle(t,-e);u.applyQuaternion(r);n.object.up.applyQuaternion(r);f.applyQuaternion(r);if(n.staticMoving){a.copy(f)}else{r.setFromAxisAngle(t,e*(n.dynamicDampingFactor-1));a.applyQuaternion(r)}}};this.zoomCamera=function(){if(s===r.TOUCH_ZOOM){var e=h/p;h=p;u.multiplyScalar(e)}else{var e=1+(c.y-l.y)*n.zoomSpeed;if(e!==1&&e>0){u.multiplyScalar(e);if(n.staticMoving){l.copy(c)}else{l.y+=(c.y-l.y)*this.dynamicDampingFactor}}}};this.panCamera=function(){var e=v.clone().sub(d);if(e.lengthSq()){e.multiplyScalar(u.length()*n.panSpeed);var t=u.clone().cross(n.object.up).setLength(e.x);t.add(n.object.up.clone().setLength(e.y));n.object.position.add(t);n.target.add(t);if(n.staticMoving){d=v}else{d.add(e.subVectors(v,d).multiplyScalar(n.dynamicDampingFactor))}}};this.checkDistances=function(){if(!n.noZoom||!n.noPan){if(u.lengthSq()>n.maxDistance*n.maxDistance){n.object.position.addVectors(n.target,u.setLength(n.maxDistance))}if(u.lengthSq()<n.minDistance*n.minDistance){n.object.position.addVectors(n.target,u.setLength(n.minDistance))}}};this.update=function(){u.subVectors(n.object.position,n.target);if(!n.noRotate){n.rotateCamera()}if(!n.noZoom){n.zoomCamera()}if(!n.noPan){n.panCamera()}n.object.position.addVectors(n.target,u);n.checkDistances();n.object.lookAt(n.target);if(i.distanceToSquared(n.object.position)>0){n.dispatchEvent(m);i.copy(n.object.position)}};this.reset=function(){s=r.NONE;o=r.NONE;n.target.copy(n.target0);n.object.position.copy(n.position0);n.object.up.copy(n.up0);u.subVectors(n.object.position,n.target);n.object.lookAt(n.target);n.dispatchEvent(m);i.copy(n.object.position)};this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},false);this.domElement.addEventListener("mousedown",b,false);this.domElement.addEventListener("mousewheel",S,false);this.domElement.addEventListener("DOMMouseScroll",S,false);this.domElement.addEventListener("touchstart",x,false);this.domElement.addEventListener("touchend",N,false);this.domElement.addEventListener("touchmove",T,false);window.addEventListener("keydown",g,false);window.addEventListener("keyup",y,false);this.handleResize()};THREE.TrackballControls.prototype=Object.create(THREE.EventDispatcher.prototype)